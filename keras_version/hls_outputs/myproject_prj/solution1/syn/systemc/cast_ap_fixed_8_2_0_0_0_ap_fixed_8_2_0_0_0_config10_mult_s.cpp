// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_logic_1 = sc_dt::Log_1;
const bool cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_boolean_1 = true;
const sc_lv<32> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv32_F = "1111";
const sc_lv<32> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv32_4 = "100";
const sc_lv<32> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv32_B = "1011";
const sc_lv<32> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv32_3 = "11";
const sc_lv<32> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv32_7 = "111";
const sc_lv<1> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv1_1 = "1";
const sc_lv<32> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv32_D = "1101";
const sc_lv<3> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv3_7 = "111";
const sc_lv<32> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv32_C = "1100";
const sc_lv<4> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv4_F = "1111";
const sc_lv<4> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv4_0 = "0000";
const sc_lv<8> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv8_7F = "1111111";
const sc_lv<8> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv8_80 = "10000000";
const sc_lv<1> cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_lv1_0 = "0";
const sc_logic cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::ap_const_logic_0 = sc_dt::Log_0;

cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_Range1_all_ones_fu_144_p2);
    sensitive << ( p_Result_2_fu_134_p4 );

    SC_METHOD(thread_Range1_all_zeros_fu_150_p2);
    sensitive << ( p_Result_2_fu_134_p4 );
    sensitive << ( carry_10_fu_104_p2 );
    sensitive << ( or_ln340_1414_fu_258_p2 );

    SC_METHOD(thread_Range2_all_ones_fu_128_p2);
    sensitive << ( p_Result_s_351_fu_118_p4 );
    sensitive << ( carry_10_fu_104_p2 );

    SC_METHOD(thread_and_ln779_fu_178_p2);
    sensitive << ( Range2_all_ones_fu_128_p2 );
    sensitive << ( xor_ln779_fu_172_p2 );

    SC_METHOD(thread_and_ln781_fu_192_p2);
    sensitive << ( carry_10_fu_104_p2 );
    sensitive << ( Range1_all_ones_fu_144_p2 );

    SC_METHOD(thread_and_ln786_fu_222_p2);
    sensitive << ( p_Result_20_fu_110_p3 );
    sensitive << ( deleted_ones_fu_184_p3 );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( or_ln340_1414_fu_258_p2 );
    sensitive << ( select_ln340_fu_264_p3 );
    sensitive << ( select_ln388_fu_272_p3 );

    SC_METHOD(thread_carry_10_fu_104_p2);
    sensitive << ( p_Result_19_fu_64_p3 );
    sensitive << ( xor_ln416_fu_98_p2 );

    SC_METHOD(thread_deleted_ones_fu_184_p3);
    sensitive << ( carry_10_fu_104_p2 );
    sensitive << ( Range1_all_ones_fu_144_p2 );
    sensitive << ( and_ln779_fu_178_p2 );

    SC_METHOD(thread_deleted_zeros_fu_156_p3);
    sensitive << ( carry_10_fu_104_p2 );
    sensitive << ( Range1_all_ones_fu_144_p2 );
    sensitive << ( Range1_all_zeros_fu_150_p2 );

    SC_METHOD(thread_or_ln340_1413_fu_252_p2);
    sensitive << ( xor_ln785_16_fu_210_p2 );
    sensitive << ( and_ln786_fu_222_p2 );

    SC_METHOD(thread_or_ln340_1414_fu_258_p2);
    sensitive << ( and_ln781_fu_192_p2 );
    sensitive << ( or_ln340_1413_fu_252_p2 );

    SC_METHOD(thread_or_ln340_fu_246_p2);
    sensitive << ( underflow_fu_240_p2 );
    sensitive << ( overflow_fu_216_p2 );

    SC_METHOD(thread_or_ln785_fu_204_p2);
    sensitive << ( p_Result_20_fu_110_p3 );
    sensitive << ( xor_ln785_fu_198_p2 );

    SC_METHOD(thread_or_ln786_fu_228_p2);
    sensitive << ( and_ln781_fu_192_p2 );
    sensitive << ( and_ln786_fu_222_p2 );

    SC_METHOD(thread_overflow_fu_216_p2);
    sensitive << ( or_ln785_fu_204_p2 );
    sensitive << ( xor_ln785_16_fu_210_p2 );

    SC_METHOD(thread_p_Result_19_fu_64_p3);
    sensitive << ( x_V );

    SC_METHOD(thread_p_Result_20_fu_110_p3);
    sensitive << ( p_Val2_10_fu_84_p2 );

    SC_METHOD(thread_p_Result_2_fu_134_p4);
    sensitive << ( x_V );

    SC_METHOD(thread_p_Result_s_351_fu_118_p4);
    sensitive << ( x_V );

    SC_METHOD(thread_p_Result_s_fu_46_p3);
    sensitive << ( x_V );

    SC_METHOD(thread_p_Val2_10_fu_84_p2);
    sensitive << ( zext_ln415_fu_80_p1 );
    sensitive << ( p_Val2_s_fu_54_p4 );

    SC_METHOD(thread_p_Val2_s_fu_54_p4);
    sensitive << ( x_V );

    SC_METHOD(thread_select_ln340_fu_264_p3);
    sensitive << ( p_Val2_10_fu_84_p2 );
    sensitive << ( or_ln340_fu_246_p2 );

    SC_METHOD(thread_select_ln388_fu_272_p3);
    sensitive << ( p_Val2_10_fu_84_p2 );
    sensitive << ( underflow_fu_240_p2 );

    SC_METHOD(thread_tmp_4849_fu_90_p3);
    sensitive << ( p_Val2_10_fu_84_p2 );

    SC_METHOD(thread_tmp_4851_fu_164_p3);
    sensitive << ( x_V );

    SC_METHOD(thread_tmp_fu_72_p3);
    sensitive << ( x_V );

    SC_METHOD(thread_underflow_fu_240_p2);
    sensitive << ( p_Result_s_fu_46_p3 );
    sensitive << ( xor_ln786_fu_234_p2 );

    SC_METHOD(thread_xor_ln416_fu_98_p2);
    sensitive << ( tmp_4849_fu_90_p3 );

    SC_METHOD(thread_xor_ln779_fu_172_p2);
    sensitive << ( tmp_4851_fu_164_p3 );

    SC_METHOD(thread_xor_ln785_16_fu_210_p2);
    sensitive << ( p_Result_s_fu_46_p3 );

    SC_METHOD(thread_xor_ln785_fu_198_p2);
    sensitive << ( deleted_zeros_fu_156_p3 );

    SC_METHOD(thread_xor_ln786_fu_234_p2);
    sensitive << ( or_ln786_fu_228_p2 );

    SC_METHOD(thread_zext_ln415_fu_80_p1);
    sensitive << ( tmp_fu_72_p3 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_V, "(port)x_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, tmp_fu_72_p3, "tmp_fu_72_p3");
    sc_trace(mVcdFile, zext_ln415_fu_80_p1, "zext_ln415_fu_80_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_54_p4, "p_Val2_s_fu_54_p4");
    sc_trace(mVcdFile, p_Val2_10_fu_84_p2, "p_Val2_10_fu_84_p2");
    sc_trace(mVcdFile, tmp_4849_fu_90_p3, "tmp_4849_fu_90_p3");
    sc_trace(mVcdFile, p_Result_19_fu_64_p3, "p_Result_19_fu_64_p3");
    sc_trace(mVcdFile, xor_ln416_fu_98_p2, "xor_ln416_fu_98_p2");
    sc_trace(mVcdFile, p_Result_s_351_fu_118_p4, "p_Result_s_351_fu_118_p4");
    sc_trace(mVcdFile, p_Result_2_fu_134_p4, "p_Result_2_fu_134_p4");
    sc_trace(mVcdFile, carry_10_fu_104_p2, "carry_10_fu_104_p2");
    sc_trace(mVcdFile, Range1_all_ones_fu_144_p2, "Range1_all_ones_fu_144_p2");
    sc_trace(mVcdFile, Range1_all_zeros_fu_150_p2, "Range1_all_zeros_fu_150_p2");
    sc_trace(mVcdFile, tmp_4851_fu_164_p3, "tmp_4851_fu_164_p3");
    sc_trace(mVcdFile, Range2_all_ones_fu_128_p2, "Range2_all_ones_fu_128_p2");
    sc_trace(mVcdFile, xor_ln779_fu_172_p2, "xor_ln779_fu_172_p2");
    sc_trace(mVcdFile, and_ln779_fu_178_p2, "and_ln779_fu_178_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_156_p3, "deleted_zeros_fu_156_p3");
    sc_trace(mVcdFile, p_Result_20_fu_110_p3, "p_Result_20_fu_110_p3");
    sc_trace(mVcdFile, xor_ln785_fu_198_p2, "xor_ln785_fu_198_p2");
    sc_trace(mVcdFile, p_Result_s_fu_46_p3, "p_Result_s_fu_46_p3");
    sc_trace(mVcdFile, or_ln785_fu_204_p2, "or_ln785_fu_204_p2");
    sc_trace(mVcdFile, xor_ln785_16_fu_210_p2, "xor_ln785_16_fu_210_p2");
    sc_trace(mVcdFile, deleted_ones_fu_184_p3, "deleted_ones_fu_184_p3");
    sc_trace(mVcdFile, and_ln781_fu_192_p2, "and_ln781_fu_192_p2");
    sc_trace(mVcdFile, and_ln786_fu_222_p2, "and_ln786_fu_222_p2");
    sc_trace(mVcdFile, or_ln786_fu_228_p2, "or_ln786_fu_228_p2");
    sc_trace(mVcdFile, xor_ln786_fu_234_p2, "xor_ln786_fu_234_p2");
    sc_trace(mVcdFile, underflow_fu_240_p2, "underflow_fu_240_p2");
    sc_trace(mVcdFile, overflow_fu_216_p2, "overflow_fu_216_p2");
    sc_trace(mVcdFile, or_ln340_1413_fu_252_p2, "or_ln340_1413_fu_252_p2");
    sc_trace(mVcdFile, or_ln340_fu_246_p2, "or_ln340_fu_246_p2");
    sc_trace(mVcdFile, or_ln340_1414_fu_258_p2, "or_ln340_1414_fu_258_p2");
    sc_trace(mVcdFile, select_ln340_fu_264_p3, "select_ln340_fu_264_p3");
    sc_trace(mVcdFile, select_ln388_fu_272_p3, "select_ln388_fu_272_p3");
#endif

    }
}

cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::~cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_Range1_all_ones_fu_144_p2() {
    Range1_all_ones_fu_144_p2 = (!p_Result_2_fu_134_p4.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_fu_134_p4.read() == ap_const_lv4_F);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_Range1_all_zeros_fu_150_p2() {
    Range1_all_zeros_fu_150_p2 = (!p_Result_2_fu_134_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_fu_134_p4.read() == ap_const_lv4_0);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_Range2_all_ones_fu_128_p2() {
    Range2_all_ones_fu_128_p2 = (!p_Result_s_351_fu_118_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_351_fu_118_p4.read() == ap_const_lv3_7);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_and_ln779_fu_178_p2() {
    and_ln779_fu_178_p2 = (Range2_all_ones_fu_128_p2.read() & xor_ln779_fu_172_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_and_ln781_fu_192_p2() {
    and_ln781_fu_192_p2 = (carry_10_fu_104_p2.read() & Range1_all_ones_fu_144_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_and_ln786_fu_222_p2() {
    and_ln786_fu_222_p2 = (p_Result_20_fu_110_p3.read() & deleted_ones_fu_184_p3.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_ap_return() {
    ap_return = (!or_ln340_1414_fu_258_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln340_1414_fu_258_p2.read()[0].to_bool())? select_ln340_fu_264_p3.read(): select_ln388_fu_272_p3.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_carry_10_fu_104_p2() {
    carry_10_fu_104_p2 = (p_Result_19_fu_64_p3.read() & xor_ln416_fu_98_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_deleted_ones_fu_184_p3() {
    deleted_ones_fu_184_p3 = (!carry_10_fu_104_p2.read()[0].is_01())? sc_lv<1>(): ((carry_10_fu_104_p2.read()[0].to_bool())? and_ln779_fu_178_p2.read(): Range1_all_ones_fu_144_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_deleted_zeros_fu_156_p3() {
    deleted_zeros_fu_156_p3 = (!carry_10_fu_104_p2.read()[0].is_01())? sc_lv<1>(): ((carry_10_fu_104_p2.read()[0].to_bool())? Range1_all_ones_fu_144_p2.read(): Range1_all_zeros_fu_150_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_or_ln340_1413_fu_252_p2() {
    or_ln340_1413_fu_252_p2 = (and_ln786_fu_222_p2.read() | xor_ln785_16_fu_210_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_or_ln340_1414_fu_258_p2() {
    or_ln340_1414_fu_258_p2 = (or_ln340_1413_fu_252_p2.read() | and_ln781_fu_192_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_or_ln340_fu_246_p2() {
    or_ln340_fu_246_p2 = (underflow_fu_240_p2.read() | overflow_fu_216_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_or_ln785_fu_204_p2() {
    or_ln785_fu_204_p2 = (p_Result_20_fu_110_p3.read() | xor_ln785_fu_198_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_or_ln786_fu_228_p2() {
    or_ln786_fu_228_p2 = (and_ln781_fu_192_p2.read() | and_ln786_fu_222_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_overflow_fu_216_p2() {
    overflow_fu_216_p2 = (or_ln785_fu_204_p2.read() & xor_ln785_16_fu_210_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_p_Result_19_fu_64_p3() {
    p_Result_19_fu_64_p3 = x_V.read().range(11, 11);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_p_Result_20_fu_110_p3() {
    p_Result_20_fu_110_p3 = p_Val2_10_fu_84_p2.read().range(7, 7);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_p_Result_2_fu_134_p4() {
    p_Result_2_fu_134_p4 = x_V.read().range(15, 12);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_p_Result_s_351_fu_118_p4() {
    p_Result_s_351_fu_118_p4 = x_V.read().range(15, 13);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_p_Result_s_fu_46_p3() {
    p_Result_s_fu_46_p3 = x_V.read().range(15, 15);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_p_Val2_10_fu_84_p2() {
    p_Val2_10_fu_84_p2 = (!zext_ln415_fu_80_p1.read().is_01() || !p_Val2_s_fu_54_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln415_fu_80_p1.read()) + sc_biguint<8>(p_Val2_s_fu_54_p4.read()));
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_p_Val2_s_fu_54_p4() {
    p_Val2_s_fu_54_p4 = x_V.read().range(11, 4);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_select_ln340_fu_264_p3() {
    select_ln340_fu_264_p3 = (!or_ln340_fu_246_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln340_fu_246_p2.read()[0].to_bool())? ap_const_lv8_7F: p_Val2_10_fu_84_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_select_ln388_fu_272_p3() {
    select_ln388_fu_272_p3 = (!underflow_fu_240_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_fu_240_p2.read()[0].to_bool())? ap_const_lv8_80: p_Val2_10_fu_84_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_tmp_4849_fu_90_p3() {
    tmp_4849_fu_90_p3 = p_Val2_10_fu_84_p2.read().range(7, 7);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_tmp_4851_fu_164_p3() {
    tmp_4851_fu_164_p3 = x_V.read().range(12, 12);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_tmp_fu_72_p3() {
    tmp_fu_72_p3 = x_V.read().range(3, 3);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_underflow_fu_240_p2() {
    underflow_fu_240_p2 = (p_Result_s_fu_46_p3.read() & xor_ln786_fu_234_p2.read());
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_xor_ln416_fu_98_p2() {
    xor_ln416_fu_98_p2 = (tmp_4849_fu_90_p3.read() ^ ap_const_lv1_1);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_xor_ln779_fu_172_p2() {
    xor_ln779_fu_172_p2 = (tmp_4851_fu_164_p3.read() ^ ap_const_lv1_1);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_xor_ln785_16_fu_210_p2() {
    xor_ln785_16_fu_210_p2 = (p_Result_s_fu_46_p3.read() ^ ap_const_lv1_1);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_xor_ln785_fu_198_p2() {
    xor_ln785_fu_198_p2 = (deleted_zeros_fu_156_p3.read() ^ ap_const_lv1_1);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_xor_ln786_fu_234_p2() {
    xor_ln786_fu_234_p2 = (or_ln786_fu_228_p2.read() ^ ap_const_lv1_1);
}

void cast_ap_fixed_8_2_0_0_0_ap_fixed_8_2_0_0_0_config10_mult_s::thread_zext_ln415_fu_80_p1() {
    zext_ln415_fu_80_p1 = esl_zext<8,1>(tmp_fu_72_p3.read());
}

}


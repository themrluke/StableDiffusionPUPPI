// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_1u_config49_s_HH_
#define _pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_1u_config49_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_1u_config49_s : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<8> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<8> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<8> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_out< sc_lv<8> > res_V_data_V_din;
    sc_in< sc_logic > res_V_data_V_full_n;
    sc_out< sc_logic > res_V_data_V_write;


    // Module declarations
    pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_1u_config49_s(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_1u_config49_s);

    ~pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_1u_config49_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln106_reg_746;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > icmp_ln106_reg_746_pp0_iter3_reg;
    sc_signal< sc_lv<10> > indvar_flatten_reg_203;
    sc_signal< sc_lv<1> > icmp_ln106_fu_265_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op18;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln106_reg_746_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln106_reg_746_pp0_iter2_reg;
    sc_signal< sc_lv<10> > add_ln106_fu_271_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > tmp_data_0_V_reg_755;
    sc_signal< sc_lv<8> > tmp_data_1_V_reg_761;
    sc_signal< sc_lv<8> > tmp_data_2_V_reg_767;
    sc_signal< sc_lv<8> > tmp_data_3_V_reg_772;
    sc_signal< sc_lv<13> > add_ln415_fu_457_p2;
    sc_signal< sc_lv<13> > add_ln415_reg_777;
    sc_signal< sc_lv<14> > add_ln1192_37_fu_473_p2;
    sc_signal< sc_lv<14> > add_ln1192_37_reg_782;
    sc_signal< sc_lv<10> > add_ln1192_40_fu_495_p2;
    sc_signal< sc_lv<10> > add_ln1192_40_reg_787;
    sc_signal< sc_lv<8> > p_Val2_2_fu_556_p2;
    sc_signal< sc_lv<8> > p_Val2_2_reg_792;
    sc_signal< sc_lv<1> > and_ln781_fu_656_p2;
    sc_signal< sc_lv<1> > and_ln781_reg_798;
    sc_signal< sc_lv<1> > xor_ln785_8_fu_674_p2;
    sc_signal< sc_lv<1> > xor_ln785_8_reg_803;
    sc_signal< sc_lv<1> > and_ln786_fu_686_p2;
    sc_signal< sc_lv<1> > and_ln786_reg_808;
    sc_signal< sc_lv<1> > underflow_fu_704_p2;
    sc_signal< sc_lv<1> > underflow_reg_813;
    sc_signal< sc_lv<1> > or_ln340_4_fu_710_p2;
    sc_signal< sc_lv<1> > or_ln340_4_reg_818;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > mul_ln1118_fu_214_p1;
    sc_signal< sc_lv<8> > mul_ln1118_17_fu_217_p1;
    sc_signal< sc_lv<11> > shl_ln_fu_296_p3;
    sc_signal< sc_lv<12> > sext_ln1118_36_fu_303_p1;
    sc_signal< sc_lv<12> > sub_ln1118_fu_307_p2;
    sc_signal< sc_lv<12> > sext_ln1118_fu_293_p1;
    sc_signal< sc_lv<12> > sub_ln1118_10_fu_313_p2;
    sc_signal< sc_lv<10> > trunc_ln_fu_319_p4;
    sc_signal< sc_lv<1> > tmp_99_fu_333_p3;
    sc_signal< sc_lv<10> > shl_ln1118_s_fu_348_p3;
    sc_signal< sc_lv<11> > sext_ln1118_38_fu_355_p1;
    sc_signal< sc_lv<11> > sub_ln1118_11_fu_359_p2;
    sc_signal< sc_lv<11> > sext_ln1118_37_fu_345_p1;
    sc_signal< sc_lv<11> > sub_ln1118_12_fu_365_p2;
    sc_signal< sc_lv<9> > trunc_ln708_s_fu_371_p4;
    sc_signal< sc_lv<1> > tmp_100_fu_385_p3;
    sc_signal< sc_lv<15> > mul_ln1118_fu_214_p2;
    sc_signal< sc_lv<13> > trunc_ln708_37_fu_401_p4;
    sc_signal< sc_lv<1> > tmp_101_fu_415_p3;
    sc_signal< sc_lv<14> > mul_ln1118_17_fu_217_p2;
    sc_signal< sc_lv<12> > trunc_ln708_38_fu_431_p4;
    sc_signal< sc_lv<1> > tmp_102_fu_445_p3;
    sc_signal< sc_lv<13> > zext_ln415_fu_453_p1;
    sc_signal< sc_lv<13> > sext_ln415_37_fu_441_p1;
    sc_signal< sc_lv<11> > sext_ln415_fu_329_p1;
    sc_signal< sc_lv<11> > add_ln1192_fu_463_p2;
    sc_signal< sc_lv<14> > sext_ln415_36_fu_411_p1;
    sc_signal< sc_lv<14> > sext_ln1192_fu_469_p1;
    sc_signal< sc_lv<10> > zext_ln1118_9_fu_423_p1;
    sc_signal< sc_lv<10> > sext_ln415_35_fu_381_p1;
    sc_signal< sc_lv<2> > zext_ln1118_8_fu_393_p1;
    sc_signal< sc_lv<2> > zext_ln1118_fu_341_p1;
    sc_signal< sc_lv<2> > add_ln1192_39_fu_485_p2;
    sc_signal< sc_lv<10> > add_ln1192_38_fu_479_p2;
    sc_signal< sc_lv<10> > zext_ln1192_fu_491_p1;
    sc_signal< sc_lv<14> > sext_ln1192_11_fu_504_p1;
    sc_signal< sc_lv<14> > add_ln1192_41_fu_507_p2;
    sc_signal< sc_lv<14> > sext_ln48_fu_501_p1;
    sc_signal< sc_lv<14> > acc_0_V_fu_512_p2;
    sc_signal< sc_lv<1> > tmp_105_fu_544_p3;
    sc_signal< sc_lv<8> > zext_ln415_23_fu_552_p1;
    sc_signal< sc_lv<8> > p_Val2_s_fu_526_p4;
    sc_signal< sc_lv<1> > tmp_106_fu_562_p3;
    sc_signal< sc_lv<1> > p_Result_3_fu_536_p3;
    sc_signal< sc_lv<1> > xor_ln416_fu_570_p2;
    sc_signal< sc_lv<2> > tmp_fu_598_p4;
    sc_signal< sc_lv<1> > carry_2_fu_576_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_608_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_614_p2;
    sc_signal< sc_lv<1> > tmp_109_fu_628_p3;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_590_p3;
    sc_signal< sc_lv<1> > xor_ln779_fu_636_p2;
    sc_signal< sc_lv<1> > and_ln779_fu_642_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_620_p3;
    sc_signal< sc_lv<1> > p_Result_4_fu_582_p3;
    sc_signal< sc_lv<1> > xor_ln785_7_fu_662_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_518_p3;
    sc_signal< sc_lv<1> > or_ln785_4_fu_668_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_648_p3;
    sc_signal< sc_lv<1> > or_ln786_fu_692_p2;
    sc_signal< sc_lv<1> > xor_ln786_fu_698_p2;
    sc_signal< sc_lv<1> > overflow_fu_680_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_716_p2;
    sc_signal< sc_lv<1> > or_ln340_25_fu_720_p2;
    sc_signal< sc_lv<8> > select_ln340_fu_725_p3;
    sc_signal< sc_lv<8> > select_ln388_fu_731_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<15> ap_const_lv15_23;
    static const sc_lv<14> ap_const_lv14_16;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<11> ap_const_lv11_100;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<8> ap_const_lv8_80;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Range1_all_ones_fu_608_p2();
    void thread_Range1_all_zeros_fu_614_p2();
    void thread_Range2_all_ones_fu_590_p3();
    void thread_acc_0_V_fu_512_p2();
    void thread_add_ln106_fu_271_p2();
    void thread_add_ln1192_37_fu_473_p2();
    void thread_add_ln1192_38_fu_479_p2();
    void thread_add_ln1192_39_fu_485_p2();
    void thread_add_ln1192_40_fu_495_p2();
    void thread_add_ln1192_41_fu_507_p2();
    void thread_add_ln1192_fu_463_p2();
    void thread_add_ln415_fu_457_p2();
    void thread_and_ln779_fu_642_p2();
    void thread_and_ln781_fu_656_p2();
    void thread_and_ln786_fu_686_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_carry_2_fu_576_p2();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_deleted_ones_fu_648_p3();
    void thread_deleted_zeros_fu_620_p3();
    void thread_icmp_ln106_fu_265_p2();
    void thread_io_acc_block_signal_op18();
    void thread_mul_ln1118_17_fu_217_p1();
    void thread_mul_ln1118_17_fu_217_p2();
    void thread_mul_ln1118_fu_214_p1();
    void thread_mul_ln1118_fu_214_p2();
    void thread_or_ln340_25_fu_720_p2();
    void thread_or_ln340_4_fu_710_p2();
    void thread_or_ln340_fu_716_p2();
    void thread_or_ln785_4_fu_668_p2();
    void thread_or_ln786_fu_692_p2();
    void thread_overflow_fu_680_p2();
    void thread_p_Result_3_fu_536_p3();
    void thread_p_Result_4_fu_582_p3();
    void thread_p_Result_s_fu_518_p3();
    void thread_p_Val2_2_fu_556_p2();
    void thread_p_Val2_s_fu_526_p4();
    void thread_res_V_data_V_blk_n();
    void thread_res_V_data_V_din();
    void thread_res_V_data_V_write();
    void thread_select_ln340_fu_725_p3();
    void thread_select_ln388_fu_731_p3();
    void thread_sext_ln1118_36_fu_303_p1();
    void thread_sext_ln1118_37_fu_345_p1();
    void thread_sext_ln1118_38_fu_355_p1();
    void thread_sext_ln1118_fu_293_p1();
    void thread_sext_ln1192_11_fu_504_p1();
    void thread_sext_ln1192_fu_469_p1();
    void thread_sext_ln415_35_fu_381_p1();
    void thread_sext_ln415_36_fu_411_p1();
    void thread_sext_ln415_37_fu_441_p1();
    void thread_sext_ln415_fu_329_p1();
    void thread_sext_ln48_fu_501_p1();
    void thread_shl_ln1118_s_fu_348_p3();
    void thread_shl_ln_fu_296_p3();
    void thread_sub_ln1118_10_fu_313_p2();
    void thread_sub_ln1118_11_fu_359_p2();
    void thread_sub_ln1118_12_fu_365_p2();
    void thread_sub_ln1118_fu_307_p2();
    void thread_tmp_100_fu_385_p3();
    void thread_tmp_101_fu_415_p3();
    void thread_tmp_102_fu_445_p3();
    void thread_tmp_105_fu_544_p3();
    void thread_tmp_106_fu_562_p3();
    void thread_tmp_109_fu_628_p3();
    void thread_tmp_99_fu_333_p3();
    void thread_tmp_fu_598_p4();
    void thread_trunc_ln708_37_fu_401_p4();
    void thread_trunc_ln708_38_fu_431_p4();
    void thread_trunc_ln708_s_fu_371_p4();
    void thread_trunc_ln_fu_319_p4();
    void thread_underflow_fu_704_p2();
    void thread_xor_ln416_fu_570_p2();
    void thread_xor_ln779_fu_636_p2();
    void thread_xor_ln785_7_fu_662_p2();
    void thread_xor_ln785_8_fu_674_p2();
    void thread_xor_ln786_fu_698_p2();
    void thread_zext_ln1118_8_fu_393_p1();
    void thread_zext_ln1118_9_fu_423_p1();
    void thread_zext_ln1118_fu_341_p1();
    void thread_zext_ln1192_fu_491_p1();
    void thread_zext_ln415_23_fu_552_p1();
    void thread_zext_ln415_fu_453_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_ST_fsm_state1 = "1";
const sc_lv<3> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_ST_fsm_state5 = "100";
const bool add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_boolean_1 = true;
const sc_lv<32> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv32_1 = "1";
const bool add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_boolean_0 = false;
const sc_lv<1> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv1_0 = "0";
const sc_lv<1> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv1_1 = "1";
const sc_lv<10> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv10_0 = "0000000000";
const sc_lv<10> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv10_300 = "1100000000";
const sc_lv<10> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv10_1 = "1";
const sc_lv<32> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv32_8 = "1000";
const sc_lv<32> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv32_7 = "111";
const sc_lv<8> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv8_7F = "1111111";
const sc_lv<8> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv8_80 = "10000000";
const sc_lv<32> add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::ap_const_lv32_2 = "10";

add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_data1_V_data_V_U = new regslice_both<8>("regslice_both_data1_V_data_V_U");
    regslice_both_data1_V_data_V_U->ap_clk(ap_clk);
    regslice_both_data1_V_data_V_U->ap_rst(ap_rst);
    regslice_both_data1_V_data_V_U->data_in(data1_V_data_V_TDATA);
    regslice_both_data1_V_data_V_U->vld_in(data1_V_data_V_TVALID);
    regslice_both_data1_V_data_V_U->ack_in(regslice_both_data1_V_data_V_U_ack_in);
    regslice_both_data1_V_data_V_U->data_out(data1_V_data_V_TDATA_int);
    regslice_both_data1_V_data_V_U->vld_out(data1_V_data_V_TVALID_int);
    regslice_both_data1_V_data_V_U->ack_out(data1_V_data_V_TREADY_int);
    regslice_both_data1_V_data_V_U->apdone_blk(regslice_both_data1_V_data_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1192_fu_139_p2);
    sensitive << ( sext_ln703_fu_132_p1 );
    sensitive << ( sext_ln703_1_fu_135_p1 );

    SC_METHOD(thread_add_ln703_fu_153_p0);
    sensitive << ( data2_V_data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_add_ln703_fu_153_p2);
    sensitive << ( tmp_data_0_V_reg_209 );
    sensitive << ( add_ln703_fu_153_p0 );

    SC_METHOD(thread_and_ln785_fu_172_p2);
    sensitive << ( tmp_4552_fu_158_p3 );
    sensitive << ( xor_ln785_fu_166_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( data2_V_data_V_empty_n );
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln15_fu_120_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln15_reg_200 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln15_reg_200_pp0_iter1_reg );
    sensitive << ( data1_V_data_V_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( data2_V_data_V_empty_n );
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln15_fu_120_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln15_reg_200 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln15_reg_200_pp0_iter1_reg );
    sensitive << ( data1_V_data_V_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( data2_V_data_V_empty_n );
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln15_fu_120_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln15_reg_200 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln15_reg_200_pp0_iter1_reg );
    sensitive << ( data1_V_data_V_TVALID_int );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( icmp_ln15_fu_120_p2 );
    sensitive << ( data1_V_data_V_TVALID_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( data2_V_data_V_empty_n );
    sensitive << ( icmp_ln15_reg_200 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( icmp_ln15_reg_200_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln15_fu_120_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_data1_V_data_V_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln15_fu_120_p2 );
    sensitive << ( data1_V_data_V_TVALID_int );

    SC_METHOD(thread_data1_V_data_V_TREADY);
    sensitive << ( data1_V_data_V_TVALID );
    sensitive << ( regslice_both_data1_V_data_V_U_ack_in );

    SC_METHOD(thread_data1_V_data_V_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln15_fu_120_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data2_V_data_V_blk_n);
    sensitive << ( data2_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln15_reg_200 );

    SC_METHOD(thread_data2_V_data_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln15_reg_200 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_126_p2);
    sensitive << ( i_0_reg_109 );

    SC_METHOD(thread_icmp_ln15_fu_120_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_0_reg_109 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_data_data_V_fu_192_p3);
    sensitive << ( add_ln703_fu_153_p2 );
    sensitive << ( xor_ln384_fu_186_p2 );
    sensitive << ( select_ln384_fu_178_p3 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_res_V_data_V_blk_n);
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln15_reg_200_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln15_reg_200_pp0_iter1_reg );
    sensitive << ( out_data_data_V_reg_215 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln15_reg_200_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln384_fu_178_p3);
    sensitive << ( and_ln785_fu_172_p2 );

    SC_METHOD(thread_sext_ln703_1_fu_135_p0);
    sensitive << ( data2_V_data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_sext_ln703_1_fu_135_p1);
    sensitive << ( sext_ln703_1_fu_135_p0 );

    SC_METHOD(thread_sext_ln703_fu_132_p1);
    sensitive << ( tmp_data_0_V_reg_209 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_4551_fu_145_p3);
    sensitive << ( add_ln1192_fu_139_p2 );

    SC_METHOD(thread_tmp_4552_fu_158_p3);
    sensitive << ( add_ln703_fu_153_p2 );

    SC_METHOD(thread_xor_ln384_fu_186_p2);
    sensitive << ( tmp_4551_fu_145_p3 );
    sensitive << ( tmp_4552_fu_158_p3 );

    SC_METHOD(thread_xor_ln785_fu_166_p2);
    sensitive << ( tmp_4551_fu_145_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln15_fu_120_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, data1_V_data_V_TDATA, "(port)data1_V_data_V_TDATA");
    sc_trace(mVcdFile, data1_V_data_V_TVALID, "(port)data1_V_data_V_TVALID");
    sc_trace(mVcdFile, data1_V_data_V_TREADY, "(port)data1_V_data_V_TREADY");
    sc_trace(mVcdFile, data2_V_data_V_dout, "(port)data2_V_data_V_dout");
    sc_trace(mVcdFile, data2_V_data_V_empty_n, "(port)data2_V_data_V_empty_n");
    sc_trace(mVcdFile, data2_V_data_V_read, "(port)data2_V_data_V_read");
    sc_trace(mVcdFile, res_V_data_V_din, "(port)res_V_data_V_din");
    sc_trace(mVcdFile, res_V_data_V_full_n, "(port)res_V_data_V_full_n");
    sc_trace(mVcdFile, res_V_data_V_write, "(port)res_V_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, data1_V_data_V_TDATA_blk_n, "data1_V_data_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln15_fu_120_p2, "icmp_ln15_fu_120_p2");
    sc_trace(mVcdFile, data2_V_data_V_blk_n, "data2_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, icmp_ln15_reg_200, "icmp_ln15_reg_200");
    sc_trace(mVcdFile, res_V_data_V_blk_n, "res_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln15_reg_200_pp0_iter1_reg, "icmp_ln15_reg_200_pp0_iter1_reg");
    sc_trace(mVcdFile, i_0_reg_109, "i_0_reg_109");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_126_p2, "i_fu_126_p2");
    sc_trace(mVcdFile, tmp_data_0_V_reg_209, "tmp_data_0_V_reg_209");
    sc_trace(mVcdFile, out_data_data_V_fu_192_p3, "out_data_data_V_fu_192_p3");
    sc_trace(mVcdFile, out_data_data_V_reg_215, "out_data_data_V_reg_215");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, sext_ln703_1_fu_135_p0, "sext_ln703_1_fu_135_p0");
    sc_trace(mVcdFile, sext_ln703_fu_132_p1, "sext_ln703_fu_132_p1");
    sc_trace(mVcdFile, sext_ln703_1_fu_135_p1, "sext_ln703_1_fu_135_p1");
    sc_trace(mVcdFile, add_ln1192_fu_139_p2, "add_ln1192_fu_139_p2");
    sc_trace(mVcdFile, add_ln703_fu_153_p0, "add_ln703_fu_153_p0");
    sc_trace(mVcdFile, add_ln703_fu_153_p2, "add_ln703_fu_153_p2");
    sc_trace(mVcdFile, tmp_4551_fu_145_p3, "tmp_4551_fu_145_p3");
    sc_trace(mVcdFile, tmp_4552_fu_158_p3, "tmp_4552_fu_158_p3");
    sc_trace(mVcdFile, xor_ln785_fu_166_p2, "xor_ln785_fu_166_p2");
    sc_trace(mVcdFile, and_ln785_fu_172_p2, "and_ln785_fu_172_p2");
    sc_trace(mVcdFile, xor_ln384_fu_186_p2, "xor_ln384_fu_186_p2");
    sc_trace(mVcdFile, select_ln384_fu_178_p3, "select_ln384_fu_178_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, regslice_both_data1_V_data_V_U_apdone_blk, "regslice_both_data1_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, data1_V_data_V_TDATA_int, "data1_V_data_V_TDATA_int");
    sc_trace(mVcdFile, data1_V_data_V_TVALID_int, "data1_V_data_V_TVALID_int");
    sc_trace(mVcdFile, data1_V_data_V_TREADY_int, "data1_V_data_V_TREADY_int");
    sc_trace(mVcdFile, regslice_both_data1_V_data_V_U_ack_in, "regslice_both_data1_V_data_V_U_ack_in");
#endif

    }
}

add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::~add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_data1_V_data_V_U;
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_109 = i_fu_126_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_109 = ap_const_lv10_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln15_reg_200 = icmp_ln15_fu_120_p2.read();
        icmp_ln15_reg_200_pp0_iter1_reg = icmp_ln15_reg_200.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_data_data_V_reg_215 = out_data_data_V_fu_192_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_0_V_reg_209 = data1_V_data_V_TDATA_int.read();
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_add_ln1192_fu_139_p2() {
    add_ln1192_fu_139_p2 = (!sext_ln703_fu_132_p1.read().is_01() || !sext_ln703_1_fu_135_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(sext_ln703_fu_132_p1.read()) + sc_bigint<9>(sext_ln703_1_fu_135_p1.read()));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_add_ln703_fu_153_p0() {
    add_ln703_fu_153_p0 = data2_V_data_V_dout.read();
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_add_ln703_fu_153_p2() {
    add_ln703_fu_153_p2 = (!add_ln703_fu_153_p0.read().is_01() || !tmp_data_0_V_reg_209.read().is_01())? sc_lv<8>(): (sc_bigint<8>(add_ln703_fu_153_p0.read()) + sc_bigint<8>(tmp_data_0_V_reg_209.read()));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_and_ln785_fu_172_p2() {
    and_ln785_fu_172_p2 = (tmp_4552_fu_158_p3.read() & xor_ln785_fu_166_p2.read());
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data2_V_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data1_V_data_V_TVALID_int.read())));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data2_V_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data1_V_data_V_TVALID_int.read())));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data2_V_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data1_V_data_V_TVALID_int.read())));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data1_V_data_V_TVALID_int.read()));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data2_V_data_V_empty_n.read()));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read()));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_data1_V_data_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0))) {
        data1_V_data_V_TDATA_blk_n = data1_V_data_V_TVALID_int.read();
    } else {
        data1_V_data_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_data1_V_data_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, data1_V_data_V_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data1_V_data_V_U_ack_in.read()))) {
        data1_V_data_V_TREADY = ap_const_logic_1;
    } else {
        data1_V_data_V_TREADY = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_data1_V_data_V_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data1_V_data_V_TREADY_int = ap_const_logic_1;
    } else {
        data1_V_data_V_TREADY_int = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_data2_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200.read()))) {
        data2_V_data_V_blk_n = data2_V_data_V_empty_n.read();
    } else {
        data2_V_data_V_blk_n = ap_const_logic_1;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_data2_V_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data2_V_data_V_read = ap_const_logic_1;
    } else {
        data2_V_data_V_read = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_i_fu_126_p2() {
    i_fu_126_p2 = (!i_0_reg_109.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_reg_109.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_icmp_ln15_fu_120_p2() {
    icmp_ln15_fu_120_p2 = (!i_0_reg_109.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_109.read() == ap_const_lv10_300);
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_out_data_data_V_fu_192_p3() {
    out_data_data_V_fu_192_p3 = (!xor_ln384_fu_186_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln384_fu_186_p2.read()[0].to_bool())? select_ln384_fu_178_p3.read(): add_ln703_fu_153_p2.read());
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_res_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200_pp0_iter1_reg.read()))) {
        res_V_data_V_blk_n = res_V_data_V_full_n.read();
    } else {
        res_V_data_V_blk_n = ap_const_logic_1;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_res_V_data_V_din() {
    res_V_data_V_din = out_data_data_V_reg_215.read();
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_res_V_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_200_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_V_write = ap_const_logic_1;
    } else {
        res_V_data_V_write = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_select_ln384_fu_178_p3() {
    select_ln384_fu_178_p3 = (!and_ln785_fu_172_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln785_fu_172_p2.read()[0].to_bool())? ap_const_lv8_7F: ap_const_lv8_80);
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_sext_ln703_1_fu_135_p0() {
    sext_ln703_1_fu_135_p0 = data2_V_data_V_dout.read();
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_sext_ln703_1_fu_135_p1() {
    sext_ln703_1_fu_135_p1 = esl_sext<9,8>(sext_ln703_1_fu_135_p0.read());
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_sext_ln703_fu_132_p1() {
    sext_ln703_fu_132_p1 = esl_sext<9,8>(tmp_data_0_V_reg_209.read());
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_start_out() {
    start_out = real_start.read();
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_tmp_4551_fu_145_p3() {
    tmp_4551_fu_145_p3 = add_ln1192_fu_139_p2.read().range(8, 8);
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_tmp_4552_fu_158_p3() {
    tmp_4552_fu_158_p3 = add_ln703_fu_153_p2.read().range(7, 7);
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_xor_ln384_fu_186_p2() {
    xor_ln384_fu_186_p2 = (tmp_4552_fu_158_p3.read() ^ tmp_4551_fu_145_p3.read());
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_xor_ln785_fu_166_p2() {
    xor_ln785_fu_166_p2 = (tmp_4551_fu_145_p3.read() ^ ap_const_lv1_1);
}

void add_array_array_ap_fixed_1u_array_ap_fixed_8_2_0_0_0_1u_config5_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln15_fu_120_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


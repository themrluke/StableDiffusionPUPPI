// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s_HH_
#define _compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0.h"
#include "shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s.h"

namespace ap_rtl {

struct compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > res_stream_V_data_0_V_din;
    sc_in< sc_logic > res_stream_V_data_0_V_full_n;
    sc_out< sc_logic > res_stream_V_data_0_V_write;
    sc_out< sc_lv<8> > res_stream_V_data_1_V_din;
    sc_in< sc_logic > res_stream_V_data_1_V_full_n;
    sc_out< sc_logic > res_stream_V_data_1_V_write;
    sc_out< sc_lv<8> > res_stream_V_data_2_V_din;
    sc_in< sc_logic > res_stream_V_data_2_V_full_n;
    sc_out< sc_logic > res_stream_V_data_2_V_write;
    sc_out< sc_lv<8> > res_stream_V_data_3_V_din;
    sc_in< sc_logic > res_stream_V_data_3_V_full_n;
    sc_out< sc_logic > res_stream_V_data_3_V_write;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<8> > in_elem_data_V_read;
    sc_out< sc_logic > res_stream_V_data_0_V_blk_n;
    sc_out< sc_logic > res_stream_V_data_1_V_blk_n;
    sc_out< sc_logic > res_stream_V_data_2_V_blk_n;
    sc_out< sc_logic > res_stream_V_data_3_V_blk_n;


    // Module declarations
    compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s(sc_module_name name);
    SC_HAS_PROCESS(compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s);

    ~compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s();

    sc_trace_file* mVcdFile;

    dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0* grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145;
    shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s* call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< sc_logic > io_acc_block_signal_op80;
    sc_signal< sc_lv<1> > and_ln289_6_reg_509;
    sc_signal< sc_lv<1> > and_ln289_6_reg_509_pp0_iter6_reg;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<8> > kernel_data_V_1632;
    sc_signal< sc_lv<8> > kernel_data_V_2633;
    sc_signal< sc_lv<8> > kernel_data_V_4635;
    sc_signal< sc_lv<8> > kernel_data_V_5636;
    sc_signal< sc_lv<8> > kernel_data_V_7638;
    sc_signal< sc_lv<8> > kernel_data_V_8;
    sc_signal< sc_lv<32> > sX_2;
    sc_signal< sc_lv<32> > sY_2;
    sc_signal< sc_lv<32> > pY_2;
    sc_signal< sc_lv<32> > pX_2;
    sc_signal< sc_lv<8> > kernel_data_V_6637_ret_reg_464;
    sc_signal< sc_lv<8> > kernel_data_V_3634_ret_reg_469;
    sc_signal< sc_lv<8> > kernel_data_V_0_ret_reg_474;
    sc_signal< sc_lv<8> > kernel_data_V_1632_ret_reg_479;
    sc_signal< sc_lv<8> > kernel_data_V_2633_ret_reg_484;
    sc_signal< sc_lv<8> > kernel_data_V_4635_ret_reg_489;
    sc_signal< sc_lv<8> > kernel_data_V_5636_ret_reg_494;
    sc_signal< sc_lv<8> > kernel_data_V_7638_ret_reg_499;
    sc_signal< sc_lv<8> > kernel_data_V_8_ret_reg_504;
    sc_signal< sc_lv<1> > and_ln289_6_fu_348_p2;
    sc_signal< sc_lv<1> > and_ln289_6_reg_509_pp0_iter2_reg;
    sc_signal< sc_lv<1> > and_ln289_6_reg_509_pp0_iter3_reg;
    sc_signal< sc_lv<1> > and_ln289_6_reg_509_pp0_iter4_reg;
    sc_signal< sc_lv<1> > and_ln289_6_reg_509_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln313_fu_354_p2;
    sc_signal< sc_lv<1> > icmp_ln313_reg_513;
    sc_signal< sc_lv<32> > select_ln323_fu_428_p3;
    sc_signal< sc_lv<1> > icmp_ln317_fu_404_p2;
    sc_signal< sc_lv<8> > res_out_0_V_reg_525;
    sc_signal< sc_lv<8> > res_out_1_V_reg_530;
    sc_signal< sc_lv<8> > res_out_2_V_reg_535;
    sc_signal< sc_lv<8> > res_out_3_V_reg_540;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<8> > grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_0;
    sc_signal< sc_lv<8> > grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_1;
    sc_signal< sc_lv<8> > grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_2;
    sc_signal< sc_lv<8> > grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_3;
    sc_signal< sc_logic > grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4_ignore_call0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5_ignore_call0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6_ignore_call0;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7_ignore_call0;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp46;
    sc_signal< sc_logic > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_start;
    sc_signal< sc_logic > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_done;
    sc_signal< sc_logic > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_idle;
    sc_signal< sc_logic > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ready;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_0;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_1;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_2;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_3;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_4;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_5;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_6;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_7;
    sc_signal< sc_lv<8> > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_8;
    sc_signal< sc_logic > call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call11;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call11;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call11;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call11;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4_ignore_call11;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5_ignore_call11;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6_ignore_call11;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7_ignore_call11;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp16;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_storemerge_reg_134;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_storemerge_reg_134;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter2_storemerge_reg_134;
    sc_signal< sc_lv<32> > select_ln328_fu_378_p3;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_sY_2_load;
    sc_signal< sc_lv<32> > add_ln321_fu_410_p2;
    sc_signal< sc_lv<32> > add_ln326_fu_360_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<31> > tmp_fu_300_p4;
    sc_signal< sc_lv<31> > tmp_4505_fu_320_p4;
    sc_signal< sc_lv<1> > icmp_ln289_fu_280_p2;
    sc_signal< sc_lv<1> > icmp_ln289_7_fu_290_p2;
    sc_signal< sc_lv<1> > icmp_ln289_8_fu_310_p2;
    sc_signal< sc_lv<1> > icmp_ln289_9_fu_330_p2;
    sc_signal< sc_lv<1> > and_ln289_5_fu_342_p2;
    sc_signal< sc_lv<1> > and_ln289_fu_336_p2;
    sc_signal< sc_lv<32> > add_ln328_fu_372_p2;
    sc_signal< sc_lv<32> > add_ln323_fu_422_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to6;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_314;
    sc_signal< bool > ap_condition_344;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_D;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln321_fu_410_p2();
    void thread_add_ln323_fu_422_p2();
    void thread_add_ln326_fu_360_p2();
    void thread_add_ln328_fu_372_p2();
    void thread_and_ln289_5_fu_342_p2();
    void thread_and_ln289_6_fu_348_p2();
    void thread_and_ln289_fu_336_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp16();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp46();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call0();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call11();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call0();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call11();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call0();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call11();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call0();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call11();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state5_pp0_stage0_iter4_ignore_call0();
    void thread_ap_block_state5_pp0_stage0_iter4_ignore_call11();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state6_pp0_stage0_iter5_ignore_call0();
    void thread_ap_block_state6_pp0_stage0_iter5_ignore_call11();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_block_state7_pp0_stage0_iter6_ignore_call0();
    void thread_ap_block_state7_pp0_stage0_iter6_ignore_call11();
    void thread_ap_block_state8_pp0_stage0_iter7();
    void thread_ap_block_state8_pp0_stage0_iter7_ignore_call0();
    void thread_ap_block_state8_pp0_stage0_iter7_ignore_call11();
    void thread_ap_condition_314();
    void thread_ap_condition_344();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to6();
    void thread_ap_phi_reg_pp0_iter0_storemerge_reg_134();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_sig_allocacmp_sY_2_load();
    void thread_call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ce();
    void thread_call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_start();
    void thread_grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_ce();
    void thread_icmp_ln289_7_fu_290_p2();
    void thread_icmp_ln289_8_fu_310_p2();
    void thread_icmp_ln289_9_fu_330_p2();
    void thread_icmp_ln289_fu_280_p2();
    void thread_icmp_ln313_fu_354_p2();
    void thread_icmp_ln317_fu_404_p2();
    void thread_io_acc_block_signal_op80();
    void thread_res_stream_V_data_0_V_blk_n();
    void thread_res_stream_V_data_0_V_din();
    void thread_res_stream_V_data_0_V_write();
    void thread_res_stream_V_data_1_V_blk_n();
    void thread_res_stream_V_data_1_V_din();
    void thread_res_stream_V_data_1_V_write();
    void thread_res_stream_V_data_2_V_blk_n();
    void thread_res_stream_V_data_2_V_din();
    void thread_res_stream_V_data_2_V_write();
    void thread_res_stream_V_data_3_V_blk_n();
    void thread_res_stream_V_data_3_V_din();
    void thread_res_stream_V_data_3_V_write();
    void thread_select_ln323_fu_428_p3();
    void thread_select_ln328_fu_378_p3();
    void thread_tmp_4505_fu_320_p4();
    void thread_tmp_fu_300_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

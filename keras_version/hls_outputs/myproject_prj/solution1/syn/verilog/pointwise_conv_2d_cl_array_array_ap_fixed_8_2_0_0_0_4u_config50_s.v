// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config50_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_TDATA,
        data_V_data_0_V_TVALID,
        data_V_data_0_V_TREADY,
        data_V_data_1_V_TDATA,
        data_V_data_1_V_TVALID,
        data_V_data_1_V_TREADY,
        data_V_data_2_V_TDATA,
        data_V_data_2_V_TVALID,
        data_V_data_2_V_TREADY,
        data_V_data_3_V_TDATA,
        data_V_data_3_V_TVALID,
        data_V_data_3_V_TREADY,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] data_V_data_0_V_TDATA;
input   data_V_data_0_V_TVALID;
output   data_V_data_0_V_TREADY;
input  [7:0] data_V_data_1_V_TDATA;
input   data_V_data_1_V_TVALID;
output   data_V_data_1_V_TREADY;
input  [7:0] data_V_data_2_V_TDATA;
input   data_V_data_2_V_TVALID;
output   data_V_data_2_V_TREADY;
input  [7:0] data_V_data_3_V_TDATA;
input   data_V_data_3_V_TVALID;
output   data_V_data_3_V_TREADY;
output  [7:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [7:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [7:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [7:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_TREADY;
reg data_V_data_1_V_TREADY;
reg data_V_data_2_V_TREADY;
reg data_V_data_3_V_TREADY;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    data_V_data_0_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln106_fu_649_p2;
reg    data_V_data_1_V_TDATA_blk_n;
reg    data_V_data_2_V_TDATA_blk_n;
reg    data_V_data_3_V_TDATA_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln106_reg_2387;
reg   [0:0] icmp_ln106_reg_2387_pp0_iter1_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [7:0] indvar_flatten_reg_266;
wire    io_acc_block_signal_op19;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    io_acc_block_signal_op311;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln106_fu_655_p2;
reg   [9:0] trunc_ln708_18_reg_2396;
reg   [0:0] tmp_50_reg_2401;
reg   [12:0] trunc_ln708_24_reg_2406;
reg   [13:0] trunc_ln708_25_reg_2411;
reg   [0:0] tmp_56_reg_2416;
reg   [12:0] trunc_ln708_27_reg_2421;
reg   [0:0] tmp_58_reg_2426;
reg   [12:0] trunc_ln708_28_reg_2431;
reg   [0:0] tmp_59_reg_2436;
reg   [10:0] trunc_ln708_29_reg_2441;
reg   [0:0] tmp_60_reg_2446;
wire   [9:0] add_ln415_16_fu_1216_p2;
reg   [9:0] add_ln415_16_reg_2451;
wire   [12:0] acc_0_V_fu_1256_p2;
reg   [12:0] acc_0_V_reg_2456;
wire   [9:0] add_ln1192_24_fu_1262_p2;
reg   [9:0] add_ln1192_24_reg_2461;
wire   [6:0] add_ln1192_27_fu_1290_p2;
reg   [6:0] add_ln1192_27_reg_2466;
wire   [12:0] add_ln1192_31_fu_1306_p2;
reg   [12:0] add_ln1192_31_reg_2471;
wire   [6:0] add_ln1192_33_fu_1322_p2;
reg   [6:0] add_ln1192_33_reg_2476;
reg   [0:0] tmp_62_reg_2481;
wire   [7:0] add_ln415_17_fu_1529_p2;
reg   [7:0] add_ln415_17_reg_2487;
wire   [0:0] and_ln781_fu_1629_p2;
reg   [0:0] and_ln781_reg_2493;
wire   [0:0] xor_ln785_8_fu_1647_p2;
reg   [0:0] xor_ln785_8_reg_2498;
wire   [0:0] and_ln786_fu_1659_p2;
reg   [0:0] and_ln786_reg_2503;
wire   [0:0] and_ln786_9_fu_1677_p2;
reg   [0:0] and_ln786_9_reg_2508;
wire   [0:0] or_ln340_fu_1683_p2;
reg   [0:0] or_ln340_reg_2513;
reg   [0:0] tmp_71_reg_2518;
wire   [7:0] add_ln415_18_fu_1727_p2;
reg   [7:0] add_ln415_18_reg_2524;
wire   [0:0] and_ln416_4_fu_1747_p2;
reg   [0:0] and_ln416_4_reg_2530;
wire   [0:0] tmp_75_fu_1753_p3;
reg   [0:0] tmp_75_reg_2536;
wire   [0:0] icmp_ln879_9_fu_1787_p2;
reg   [0:0] icmp_ln879_9_reg_2541;
wire   [0:0] icmp_ln768_4_fu_1793_p2;
reg   [0:0] icmp_ln768_4_reg_2547;
wire   [0:0] and_ln786_1_fu_1827_p2;
reg   [0:0] and_ln786_1_reg_2552;
wire   [7:0] add_ln415_19_fu_1863_p2;
reg   [7:0] add_ln415_19_reg_2558;
wire   [0:0] and_ln416_5_fu_1883_p2;
reg   [0:0] and_ln416_5_reg_2564;
wire   [0:0] tmp_80_fu_1889_p3;
reg   [0:0] tmp_80_reg_2570;
wire   [0:0] icmp_ln879_11_fu_1923_p2;
reg   [0:0] icmp_ln879_11_reg_2575;
wire   [0:0] icmp_ln768_5_fu_1929_p2;
reg   [0:0] icmp_ln768_5_reg_2581;
wire   [0:0] and_ln786_2_fu_1963_p2;
reg   [0:0] and_ln786_2_reg_2586;
wire   [7:0] tmp_data_3_V_39_fu_2175_p3;
reg   [7:0] tmp_data_3_V_39_reg_2592;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_01001;
wire  signed [7:0] mul_ln1118_13_fu_278_p1;
wire  signed [14:0] sext_ln1118_27_fu_1086_p1;
wire  signed [7:0] mul_ln1118_11_fu_283_p1;
wire  signed [7:0] mul_ln1118_10_fu_286_p1;
wire  signed [7:0] mul_ln1118_12_fu_288_p1;
wire  signed [7:0] mul_ln1118_fu_290_p1;
wire  signed [7:0] sext_ln1118_fu_677_p0;
wire  signed [7:0] shl_ln_fu_681_p1;
wire   [11:0] shl_ln_fu_681_p3;
wire  signed [7:0] shl_ln1118_6_fu_693_p1;
wire  signed [8:0] shl_ln1118_6_fu_693_p3;
wire  signed [12:0] sext_ln1118_16_fu_689_p1;
wire  signed [12:0] sext_ln1118_18_fu_705_p1;
wire   [12:0] sub_ln1118_fu_709_p2;
wire   [10:0] trunc_ln_fu_715_p4;
wire   [0:0] tmp_48_fu_729_p3;
wire  signed [7:0] tmp_fu_741_p1;
wire   [9:0] tmp_fu_741_p3;
wire  signed [10:0] sext_ln1118_fu_677_p1;
wire  signed [10:0] sext_ln1118_20_fu_749_p1;
wire   [10:0] sub_ln1118_10_fu_753_p2;
wire   [8:0] trunc_ln708_s_fu_759_p4;
wire   [0:0] tmp_49_fu_773_p3;
wire  signed [7:0] shl_ln1118_7_fu_785_p1;
wire   [10:0] shl_ln1118_7_fu_785_p3;
wire  signed [11:0] sext_ln1118_19_fu_793_p1;
wire  signed [11:0] sext_ln1118_17_fu_701_p1;
wire   [11:0] add_ln1118_fu_797_p2;
wire   [10:0] sub_ln1118_6_fu_821_p2;
wire   [8:0] trunc_ln708_19_fu_827_p4;
wire   [0:0] tmp_51_fu_841_p3;
wire  signed [7:0] sext_ln1118_21_fu_853_p0;
wire  signed [7:0] tmp_1_fu_857_p1;
wire   [11:0] tmp_1_fu_857_p3;
wire  signed [12:0] sext_ln1118_21_fu_853_p1;
wire  signed [12:0] sext_ln1118_32_fu_865_p1;
wire   [12:0] sub_ln1118_11_fu_869_p2;
wire   [10:0] trunc_ln708_20_fu_875_p4;
wire   [0:0] tmp_52_fu_889_p3;
wire  signed [7:0] shl_ln1118_9_fu_901_p1;
wire   [8:0] shl_ln1118_9_fu_901_p3;
wire  signed [9:0] sext_ln1118_22_fu_909_p1;
wire   [9:0] sub_ln1118_7_fu_913_p2;
wire   [7:0] trunc_ln708_21_fu_919_p4;
wire   [0:0] tmp_53_fu_933_p3;
wire  signed [7:0] trunc_ln708_22_fu_945_p1;
wire   [5:0] trunc_ln708_22_fu_945_p4;
wire  signed [7:0] tmp_54_fu_959_p1;
wire   [0:0] tmp_54_fu_959_p3;
wire  signed [6:0] sext_ln415_20_fu_955_p1;
wire   [6:0] zext_ln415_fu_967_p1;
wire  signed [7:0] sext_ln1116_fu_977_p0;
wire  signed [7:0] sext_ln1118_23_fu_982_p0;
wire  signed [7:0] sext_ln1118_24_fu_987_p0;
wire  signed [7:0] shl_ln1118_s_fu_992_p1;
wire   [11:0] shl_ln1118_s_fu_992_p3;
wire  signed [12:0] sext_ln1118_25_fu_1000_p1;
wire   [12:0] sub_ln1118_8_fu_1004_p2;
wire   [10:0] trunc_ln708_23_fu_1010_p4;
wire   [14:0] mul_ln1118_fu_290_p2;
wire   [15:0] mul_ln1118_10_fu_286_p2;
wire   [13:0] mul_ln1118_11_fu_283_p2;
wire   [11:0] trunc_ln708_26_fu_1060_p4;
wire   [0:0] tmp_57_fu_1074_p3;
wire  signed [7:0] sext_ln1118_27_fu_1086_p0;
wire  signed [7:0] sext_ln1118_28_fu_1092_p0;
wire  signed [7:0] sext_ln1118_29_fu_1096_p0;
wire   [14:0] mul_ln1118_12_fu_288_p2;
wire   [14:0] mul_ln1118_13_fu_278_p2;
wire  signed [7:0] shl_ln1118_1_fu_1136_p1;
wire   [11:0] shl_ln1118_1_fu_1136_p3;
wire  signed [12:0] sext_ln1118_30_fu_1144_p1;
wire  signed [12:0] sext_ln1118_29_fu_1096_p1;
wire   [12:0] sub_ln1118_9_fu_1148_p2;
wire  signed [7:0] shl_ln1118_2_fu_1172_p1;
wire   [9:0] shl_ln1118_2_fu_1172_p3;
wire  signed [10:0] sext_ln1118_31_fu_1180_p1;
wire  signed [10:0] sext_ln1118_28_fu_1092_p1;
wire   [10:0] add_ln1118_1_fu_1184_p2;
wire   [8:0] trunc_ln708_30_fu_1190_p4;
wire   [0:0] tmp_61_fu_1204_p3;
wire  signed [9:0] sext_ln415_30_fu_1200_p1;
wire   [9:0] zext_ln415_16_fu_1212_p1;
wire  signed [11:0] sext_ln415_18_fu_885_p1;
wire  signed [11:0] sext_ln415_fu_725_p1;
wire   [11:0] add_ln1192_fu_1222_p2;
wire   [1:0] zext_ln1118_6_fu_897_p1;
wire   [1:0] zext_ln1118_fu_737_p1;
wire   [1:0] add_ln1192_19_fu_1232_p2;
wire   [7:0] or_ln1192_2_fu_1238_p3;
wire  signed [12:0] sext_ln1192_6_fu_1246_p1;
wire  signed [12:0] sext_ln1192_fu_1228_p1;
wire   [12:0] add_ln1192_22_fu_1250_p2;
wire  signed [12:0] sext_ln1118_26_fu_1020_p1;
wire  signed [9:0] sext_ln415_15_fu_769_p1;
wire  signed [9:0] sext_ln415_19_fu_929_p1;
wire   [0:0] tmp_55_fu_1034_p3;
wire   [5:0] or_ln1192_3_fu_1268_p3;
wire   [1:0] zext_ln1118_4_fu_781_p1;
wire   [1:0] zext_ln708_fu_941_p1;
wire   [1:0] add_ln1192_26_fu_1280_p2;
wire   [6:0] zext_ln1192_3_fu_1286_p1;
wire   [6:0] zext_ln1192_fu_1276_p1;
wire  signed [10:0] sext_ln415_17_fu_837_p1;
wire   [10:0] add_ln1192_30_fu_1296_p2;
wire  signed [12:0] sext_ln1192_9_fu_1302_p1;
wire  signed [12:0] sext_ln415_24_fu_1070_p1;
wire   [1:0] zext_ln1118_7_fu_1082_p1;
wire   [1:0] zext_ln1118_5_fu_849_p1;
wire   [1:0] add_ln1192_32_fu_1312_p2;
wire   [6:0] zext_ln1192_5_fu_1318_p1;
wire   [6:0] add_ln415_fu_971_p2;
wire  signed [14:0] sext_ln415_22_fu_1334_p1;
wire   [14:0] zext_ln415_12_fu_1337_p1;
wire   [14:0] add_ln415_12_fu_1340_p2;
wire  signed [13:0] sext_ln415_25_fu_1350_p1;
wire   [13:0] zext_ln415_13_fu_1353_p1;
wire  signed [13:0] sext_ln415_26_fu_1362_p1;
wire   [13:0] zext_ln415_14_fu_1365_p1;
wire  signed [13:0] add_ln415_14_fu_1368_p2;
wire  signed [11:0] sext_ln415_28_fu_1378_p1;
wire   [11:0] zext_ln415_15_fu_1381_p1;
wire   [11:0] add_ln415_15_fu_1384_p2;
wire   [14:0] or_ln_fu_1397_p3;
wire  signed [14:0] sext_ln415_16_fu_1328_p1;
wire   [14:0] acc_2_V_fu_1404_p2;
wire  signed [13:0] sext_ln1192_7_fu_1417_p1;
wire  signed [13:0] sext_ln415_21_fu_1331_p1;
wire   [13:0] zext_ln1192_4_fu_1426_p1;
wire   [13:0] add_ln1192_25_fu_1420_p2;
wire  signed [13:0] add_ln1192_28_fu_1429_p2;
wire  signed [15:0] sext_ln415_23_fu_1346_p1;
wire  signed [15:0] sext_ln1192_4_fu_1410_p1;
wire  signed [12:0] sext_ln1192_10_fu_1445_p1;
wire  signed [13:0] sext_ln703_fu_1414_p1;
wire   [13:0] add_ln415_13_fu_1356_p2;
wire  signed [14:0] sext_ln415_27_fu_1374_p1;
wire  signed [14:0] sext_ln1192_8_fu_1435_p1;
wire   [15:0] acc_2_V_6_fu_1439_p2;
wire  signed [15:0] sext_ln415_29_fu_1390_p1;
wire   [15:0] acc_2_V_7_fu_1471_p2;
wire  signed [12:0] sext_ln415_31_fu_1394_p1;
wire   [12:0] add_ln1192_34_fu_1448_p2;
wire   [13:0] acc_0_V_2_fu_1453_p2;
wire   [0:0] tmp_65_fu_1517_p3;
wire   [7:0] trunc_ln708_31_fu_1499_p4;
wire   [7:0] zext_ln415_17_fu_1525_p1;
wire   [0:0] tmp_66_fu_1535_p3;
wire   [0:0] tmp_64_fu_1509_p3;
wire   [0:0] xor_ln416_fu_1543_p2;
wire   [1:0] tmp_69_fu_1571_p4;
wire   [0:0] and_ln416_fu_1549_p2;
wire   [0:0] icmp_ln879_fu_1581_p2;
wire   [0:0] icmp_ln768_fu_1587_p2;
wire   [0:0] tmp_70_fu_1601_p3;
wire   [0:0] tmp_68_fu_1563_p3;
wire   [0:0] xor_ln779_fu_1609_p2;
wire   [0:0] and_ln779_fu_1615_p2;
wire   [0:0] select_ln777_fu_1593_p3;
wire   [0:0] tmp_67_fu_1555_p3;
wire   [0:0] xor_ln785_fu_1635_p2;
wire   [0:0] tmp_63_fu_1491_p3;
wire   [0:0] or_ln785_fu_1641_p2;
wire   [0:0] select_ln416_fu_1621_p3;
wire   [0:0] or_ln786_fu_1665_p2;
wire   [0:0] xor_ln786_5_fu_1671_p2;
wire   [0:0] and_ln785_fu_1653_p2;
wire   [14:0] acc_1_V_fu_1465_p2;
wire   [13:0] add_ln1192_36_fu_1459_p2;
wire   [0:0] tmp_73_fu_1715_p3;
wire   [7:0] trunc_ln708_32_fu_1697_p4;
wire   [7:0] zext_ln415_18_fu_1723_p1;
wire   [0:0] tmp_74_fu_1733_p3;
wire   [0:0] tmp_72_fu_1707_p3;
wire   [0:0] xor_ln416_4_fu_1741_p2;
wire   [1:0] tmp_3_fu_1761_p4;
wire   [2:0] tmp_4_fu_1777_p4;
wire   [0:0] tmp_76_fu_1799_p3;
wire   [0:0] icmp_ln879_8_fu_1771_p2;
wire   [0:0] xor_ln779_4_fu_1807_p2;
wire   [0:0] and_ln779_1_fu_1813_p2;
wire   [0:0] select_ln416_4_fu_1819_p3;
wire   [0:0] tmp_78_fu_1851_p3;
wire   [7:0] trunc_ln708_33_fu_1833_p4;
wire   [7:0] zext_ln415_19_fu_1859_p1;
wire   [0:0] tmp_79_fu_1869_p3;
wire   [0:0] tmp_77_fu_1843_p3;
wire   [0:0] xor_ln416_5_fu_1877_p2;
wire   [2:0] p_Result_19_2_fu_1897_p4;
wire   [3:0] p_Result_20_2_fu_1913_p4;
wire   [0:0] tmp_81_fu_1935_p3;
wire   [0:0] icmp_ln879_10_fu_1907_p2;
wire   [0:0] xor_ln779_5_fu_1943_p2;
wire   [0:0] and_ln779_2_fu_1949_p2;
wire   [0:0] select_ln416_5_fu_1955_p3;
wire   [12:0] add_ln1192_35_fu_1485_p2;
wire   [0:0] tmp_84_fu_1995_p3;
wire   [7:0] trunc_ln708_34_fu_1977_p4;
wire   [7:0] zext_ln415_20_fu_2003_p1;
wire   [7:0] add_ln415_20_fu_2007_p2;
wire   [0:0] tmp_85_fu_2013_p3;
wire   [0:0] tmp_83_fu_1987_p3;
wire   [0:0] xor_ln416_6_fu_2021_p2;
wire   [0:0] tmp_88_fu_2049_p3;
wire   [0:0] xor_ln416_7_fu_2063_p2;
wire   [0:0] or_ln416_fu_2069_p2;
wire   [0:0] xor_ln779_6_fu_2057_p2;
wire   [0:0] tmp_87_fu_2041_p3;
wire   [0:0] or_ln416_1_fu_2075_p2;
wire   [0:0] and_ln416_6_fu_2027_p2;
wire   [0:0] tmp_86_fu_2033_p3;
wire   [0:0] xor_ln785_12_fu_2093_p2;
wire   [0:0] tmp_82_fu_1969_p3;
wire   [0:0] or_ln785_6_fu_2099_p2;
wire   [0:0] xor_ln785_13_fu_2105_p2;
wire   [0:0] and_ln416_7_fu_2081_p2;
wire   [0:0] and_ln781_3_fu_2087_p2;
wire   [0:0] and_ln786_3_fu_2117_p2;
wire   [0:0] or_ln786_6_fu_2123_p2;
wire   [0:0] xor_ln786_8_fu_2129_p2;
wire   [0:0] and_ln786_12_fu_2135_p2;
wire   [0:0] and_ln785_6_fu_2111_p2;
wire   [0:0] or_ln340_22_fu_2147_p2;
wire   [0:0] or_ln340_21_fu_2141_p2;
wire   [0:0] or_ln340_23_fu_2153_p2;
wire   [7:0] select_ln340_15_fu_2159_p3;
wire   [7:0] select_ln388_6_fu_2167_p3;
wire   [0:0] or_ln340_13_fu_2188_p2;
wire   [0:0] or_ln340_14_fu_2192_p2;
wire   [7:0] select_ln340_fu_2197_p3;
wire   [7:0] select_ln388_fu_2203_p3;
wire   [0:0] select_ln777_4_fu_2218_p3;
wire   [0:0] xor_ln785_9_fu_2227_p2;
wire   [0:0] or_ln785_4_fu_2233_p2;
wire   [0:0] xor_ln785_10_fu_2238_p2;
wire   [0:0] and_ln781_1_fu_2223_p2;
wire   [0:0] or_ln786_4_fu_2249_p2;
wire   [0:0] xor_ln786_6_fu_2254_p2;
wire   [0:0] and_ln786_10_fu_2260_p2;
wire   [0:0] and_ln785_4_fu_2243_p2;
wire   [0:0] or_ln340_16_fu_2271_p2;
wire   [0:0] or_ln340_15_fu_2265_p2;
wire   [0:0] or_ln340_17_fu_2276_p2;
wire   [7:0] select_ln340_11_fu_2282_p3;
wire   [7:0] select_ln388_4_fu_2289_p3;
wire   [0:0] select_ln777_5_fu_2305_p3;
wire   [0:0] xor_ln785_11_fu_2314_p2;
wire   [0:0] or_ln785_5_fu_2320_p2;
wire   [0:0] xor_ln786_fu_2183_p2;
wire   [0:0] and_ln781_2_fu_2310_p2;
wire   [0:0] or_ln786_5_fu_2331_p2;
wire   [0:0] xor_ln786_7_fu_2336_p2;
wire   [0:0] and_ln786_11_fu_2342_p2;
wire   [0:0] and_ln785_5_fu_2325_p2;
wire   [0:0] or_ln340_19_fu_2353_p2;
wire   [0:0] or_ln340_18_fu_2347_p2;
wire   [0:0] or_ln340_20_fu_2358_p2;
wire   [7:0] select_ln340_13_fu_2364_p3;
wire   [7:0] select_ln388_5_fu_2371_p3;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_data_V_data_0_V_U_apdone_blk;
wire   [7:0] data_V_data_0_V_TDATA_int;
wire    data_V_data_0_V_TVALID_int;
reg    data_V_data_0_V_TREADY_int;
wire    regslice_both_data_V_data_0_V_U_ack_in;
wire    regslice_both_data_V_data_1_V_U_apdone_blk;
wire   [7:0] data_V_data_1_V_TDATA_int;
wire    data_V_data_1_V_TVALID_int;
reg    data_V_data_1_V_TREADY_int;
wire    regslice_both_data_V_data_1_V_U_ack_in;
wire    regslice_both_data_V_data_2_V_U_apdone_blk;
wire   [7:0] data_V_data_2_V_TDATA_int;
wire    data_V_data_2_V_TVALID_int;
reg    data_V_data_2_V_TREADY_int;
wire    regslice_both_data_V_data_2_V_U_ack_in;
wire    regslice_both_data_V_data_3_V_U_apdone_blk;
wire   [7:0] data_V_data_3_V_TDATA_int;
wire    data_V_data_3_V_TVALID_int;
reg    data_V_data_3_V_TREADY_int;
wire    regslice_both_data_V_data_3_V_U_ack_in;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_V_data_0_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_0_V_TDATA),
    .vld_in(data_V_data_0_V_TVALID),
    .ack_in(regslice_both_data_V_data_0_V_U_ack_in),
    .data_out(data_V_data_0_V_TDATA_int),
    .vld_out(data_V_data_0_V_TVALID_int),
    .ack_out(data_V_data_0_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_0_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_V_data_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_1_V_TDATA),
    .vld_in(data_V_data_1_V_TVALID),
    .ack_in(regslice_both_data_V_data_1_V_U_ack_in),
    .data_out(data_V_data_1_V_TDATA_int),
    .vld_out(data_V_data_1_V_TVALID_int),
    .ack_out(data_V_data_1_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_1_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_V_data_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_2_V_TDATA),
    .vld_in(data_V_data_2_V_TVALID),
    .ack_in(regslice_both_data_V_data_2_V_U_ack_in),
    .data_out(data_V_data_2_V_TDATA_int),
    .vld_out(data_V_data_2_V_TVALID_int),
    .ack_out(data_V_data_2_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_2_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_data_V_data_3_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_3_V_TDATA),
    .vld_in(data_V_data_3_V_TVALID),
    .ack_in(regslice_both_data_V_data_3_V_U_ack_in),
    .data_out(data_V_data_3_V_TDATA_int),
    .vld_out(data_V_data_3_V_TVALID_int),
    .ack_out(data_V_data_3_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_3_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_266 <= add_ln106_fu_655_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_266 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_V_reg_2456 <= acc_0_V_fu_1256_p2;
        add_ln1192_24_reg_2461 <= add_ln1192_24_fu_1262_p2;
        add_ln1192_27_reg_2466 <= add_ln1192_27_fu_1290_p2;
        add_ln1192_31_reg_2471 <= add_ln1192_31_fu_1306_p2;
        add_ln1192_33_reg_2476 <= add_ln1192_33_fu_1322_p2;
        add_ln415_16_reg_2451 <= add_ln415_16_fu_1216_p2;
        tmp_50_reg_2401 <= add_ln1118_fu_797_p2[32'd1];
        tmp_56_reg_2416 <= mul_ln1118_10_fu_286_p2[32'd1];
        tmp_58_reg_2426 <= mul_ln1118_12_fu_288_p2[32'd1];
        tmp_59_reg_2436 <= mul_ln1118_13_fu_278_p2[32'd1];
        tmp_60_reg_2446 <= sub_ln1118_9_fu_1148_p2[32'd1];
        trunc_ln708_18_reg_2396 <= {{add_ln1118_fu_797_p2[11:2]}};
        trunc_ln708_24_reg_2406 <= {{mul_ln1118_fu_290_p2[14:2]}};
        trunc_ln708_25_reg_2411 <= {{mul_ln1118_10_fu_286_p2[15:2]}};
        trunc_ln708_27_reg_2421 <= {{mul_ln1118_12_fu_288_p2[14:2]}};
        trunc_ln708_28_reg_2431 <= {{mul_ln1118_13_fu_278_p2[14:2]}};
        trunc_ln708_29_reg_2441 <= {{sub_ln1118_9_fu_1148_p2[12:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_reg_2387 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln415_17_reg_2487 <= add_ln415_17_fu_1529_p2;
        add_ln415_18_reg_2524 <= add_ln415_18_fu_1727_p2;
        add_ln415_19_reg_2558 <= add_ln415_19_fu_1863_p2;
        and_ln416_4_reg_2530 <= and_ln416_4_fu_1747_p2;
        and_ln416_5_reg_2564 <= and_ln416_5_fu_1883_p2;
        and_ln781_reg_2493 <= and_ln781_fu_1629_p2;
        and_ln786_1_reg_2552 <= and_ln786_1_fu_1827_p2;
        and_ln786_2_reg_2586 <= and_ln786_2_fu_1963_p2;
        and_ln786_9_reg_2508 <= and_ln786_9_fu_1677_p2;
        and_ln786_reg_2503 <= and_ln786_fu_1659_p2;
        icmp_ln768_4_reg_2547 <= icmp_ln768_4_fu_1793_p2;
        icmp_ln768_5_reg_2581 <= icmp_ln768_5_fu_1929_p2;
        icmp_ln879_11_reg_2575 <= icmp_ln879_11_fu_1923_p2;
        icmp_ln879_9_reg_2541 <= icmp_ln879_9_fu_1787_p2;
        or_ln340_reg_2513 <= or_ln340_fu_1683_p2;
        tmp_62_reg_2481 <= acc_2_V_7_fu_1471_p2[32'd15];
        tmp_71_reg_2518 <= acc_1_V_fu_1465_p2[32'd14];
        tmp_75_reg_2536 <= add_ln415_18_fu_1727_p2[32'd7];
        tmp_80_reg_2570 <= add_ln415_19_fu_1863_p2[32'd7];
        tmp_data_3_V_39_reg_2592 <= tmp_data_3_V_39_fu_2175_p3;
        xor_ln785_8_reg_2498 <= xor_ln785_8_fu_1647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln106_reg_2387 <= icmp_ln106_fu_649_p2;
        icmp_ln106_reg_2387_pp0_iter1_reg <= icmp_ln106_reg_2387;
    end
end

always @ (*) begin
    if ((icmp_ln106_fu_649_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_TDATA_blk_n = data_V_data_0_V_TVALID_int;
    end else begin
        data_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_0_V_TVALID == 1'b1) & (regslice_both_data_V_data_0_V_U_ack_in == 1'b1))) begin
        data_V_data_0_V_TREADY = 1'b1;
    end else begin
        data_V_data_0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_0_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_0_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_TDATA_blk_n = data_V_data_1_V_TVALID_int;
    end else begin
        data_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_1_V_TVALID == 1'b1) & (regslice_both_data_V_data_1_V_U_ack_in == 1'b1))) begin
        data_V_data_1_V_TREADY = 1'b1;
    end else begin
        data_V_data_1_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_1_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_1_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_TDATA_blk_n = data_V_data_2_V_TVALID_int;
    end else begin
        data_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_2_V_TVALID == 1'b1) & (regslice_both_data_V_data_2_V_U_ack_in == 1'b1))) begin
        data_V_data_2_V_TREADY = 1'b1;
    end else begin
        data_V_data_2_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_2_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_2_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_TDATA_blk_n = data_V_data_3_V_TVALID_int;
    end else begin
        data_V_data_3_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_3_V_TVALID == 1'b1) & (regslice_both_data_V_data_3_V_U_ack_in == 1'b1))) begin
        data_V_data_3_V_TREADY = 1'b1;
    end else begin
        data_V_data_3_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_fu_649_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_3_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_3_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln106_fu_649_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln106_fu_649_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_2_fu_1453_p2 = ($signed(sext_ln703_fu_1414_p1) + $signed(add_ln415_13_fu_1356_p2));

assign acc_0_V_fu_1256_p2 = ($signed(add_ln1192_22_fu_1250_p2) + $signed(sext_ln1118_26_fu_1020_p1));

assign acc_1_V_fu_1465_p2 = ($signed(sext_ln415_27_fu_1374_p1) + $signed(sext_ln1192_8_fu_1435_p1));

assign acc_2_V_6_fu_1439_p2 = ($signed(sext_ln415_23_fu_1346_p1) + $signed(sext_ln1192_4_fu_1410_p1));

assign acc_2_V_7_fu_1471_p2 = ($signed(acc_2_V_6_fu_1439_p2) + $signed(sext_ln415_29_fu_1390_p1));

assign acc_2_V_fu_1404_p2 = ($signed(or_ln_fu_1397_p3) + $signed(sext_ln415_16_fu_1328_p1));

assign add_ln106_fu_655_p2 = (indvar_flatten_reg_266 + 8'd1);

assign add_ln1118_1_fu_1184_p2 = ($signed(sext_ln1118_31_fu_1180_p1) + $signed(sext_ln1118_28_fu_1092_p1));

assign add_ln1118_fu_797_p2 = ($signed(sext_ln1118_19_fu_793_p1) + $signed(sext_ln1118_17_fu_701_p1));

assign add_ln1192_19_fu_1232_p2 = (zext_ln1118_6_fu_897_p1 + zext_ln1118_fu_737_p1);

assign add_ln1192_22_fu_1250_p2 = ($signed(sext_ln1192_6_fu_1246_p1) + $signed(sext_ln1192_fu_1228_p1));

assign add_ln1192_24_fu_1262_p2 = ($signed(sext_ln415_15_fu_769_p1) + $signed(sext_ln415_19_fu_929_p1));

assign add_ln1192_25_fu_1420_p2 = ($signed(sext_ln1192_7_fu_1417_p1) + $signed(sext_ln415_21_fu_1331_p1));

assign add_ln1192_26_fu_1280_p2 = (zext_ln1118_4_fu_781_p1 + zext_ln708_fu_941_p1);

assign add_ln1192_27_fu_1290_p2 = (zext_ln1192_3_fu_1286_p1 + zext_ln1192_fu_1276_p1);

assign add_ln1192_28_fu_1429_p2 = (zext_ln1192_4_fu_1426_p1 + add_ln1192_25_fu_1420_p2);

assign add_ln1192_30_fu_1296_p2 = ($signed(11'd1632) + $signed(sext_ln415_17_fu_837_p1));

assign add_ln1192_31_fu_1306_p2 = ($signed(sext_ln1192_9_fu_1302_p1) + $signed(sext_ln415_24_fu_1070_p1));

assign add_ln1192_32_fu_1312_p2 = (zext_ln1118_7_fu_1082_p1 + zext_ln1118_5_fu_849_p1);

assign add_ln1192_33_fu_1322_p2 = (zext_ln1192_5_fu_1318_p1 + add_ln415_fu_971_p2);

assign add_ln1192_34_fu_1448_p2 = ($signed(sext_ln1192_10_fu_1445_p1) + $signed(add_ln1192_31_reg_2471));

assign add_ln1192_35_fu_1485_p2 = ($signed(sext_ln415_31_fu_1394_p1) + $signed(add_ln1192_34_fu_1448_p2));

assign add_ln1192_36_fu_1459_p2 = ($signed(add_ln1192_28_fu_1429_p2) + $signed(add_ln415_14_fu_1368_p2));

assign add_ln1192_fu_1222_p2 = ($signed(sext_ln415_18_fu_885_p1) + $signed(sext_ln415_fu_725_p1));

assign add_ln415_12_fu_1340_p2 = ($signed(sext_ln415_22_fu_1334_p1) + $signed(zext_ln415_12_fu_1337_p1));

assign add_ln415_13_fu_1356_p2 = ($signed(sext_ln415_25_fu_1350_p1) + $signed(zext_ln415_13_fu_1353_p1));

assign add_ln415_14_fu_1368_p2 = ($signed(sext_ln415_26_fu_1362_p1) + $signed(zext_ln415_14_fu_1365_p1));

assign add_ln415_15_fu_1384_p2 = ($signed(sext_ln415_28_fu_1378_p1) + $signed(zext_ln415_15_fu_1381_p1));

assign add_ln415_16_fu_1216_p2 = ($signed(sext_ln415_30_fu_1200_p1) + $signed(zext_ln415_16_fu_1212_p1));

assign add_ln415_17_fu_1529_p2 = (trunc_ln708_31_fu_1499_p4 + zext_ln415_17_fu_1525_p1);

assign add_ln415_18_fu_1727_p2 = (trunc_ln708_32_fu_1697_p4 + zext_ln415_18_fu_1723_p1);

assign add_ln415_19_fu_1863_p2 = (trunc_ln708_33_fu_1833_p4 + zext_ln415_19_fu_1859_p1);

assign add_ln415_20_fu_2007_p2 = (trunc_ln708_34_fu_1977_p4 + zext_ln415_20_fu_2003_p1);

assign add_ln415_fu_971_p2 = ($signed(sext_ln415_20_fu_955_p1) + $signed(zext_ln415_fu_967_p1));

assign and_ln416_4_fu_1747_p2 = (xor_ln416_4_fu_1741_p2 & tmp_72_fu_1707_p3);

assign and_ln416_5_fu_1883_p2 = (xor_ln416_5_fu_1877_p2 & tmp_77_fu_1843_p3);

assign and_ln416_6_fu_2027_p2 = (xor_ln416_6_fu_2021_p2 & tmp_83_fu_1987_p3);

assign and_ln416_7_fu_2081_p2 = (tmp_87_fu_2041_p3 & or_ln416_1_fu_2075_p2);

assign and_ln416_fu_1549_p2 = (xor_ln416_fu_1543_p2 & tmp_64_fu_1509_p3);

assign and_ln779_1_fu_1813_p2 = (xor_ln779_4_fu_1807_p2 & icmp_ln879_8_fu_1771_p2);

assign and_ln779_2_fu_1949_p2 = (xor_ln779_5_fu_1943_p2 & icmp_ln879_10_fu_1907_p2);

assign and_ln779_fu_1615_p2 = (xor_ln779_fu_1609_p2 & tmp_68_fu_1563_p3);

assign and_ln781_1_fu_2223_p2 = (icmp_ln879_9_reg_2541 & and_ln416_4_reg_2530);

assign and_ln781_2_fu_2310_p2 = (icmp_ln879_11_reg_2575 & and_ln416_5_reg_2564);

assign and_ln781_3_fu_2087_p2 = (tmp_87_fu_2041_p3 & and_ln416_6_fu_2027_p2);

assign and_ln781_fu_1629_p2 = (icmp_ln879_fu_1581_p2 & and_ln416_fu_1549_p2);

assign and_ln785_4_fu_2243_p2 = (xor_ln785_10_fu_2238_p2 & or_ln785_4_fu_2233_p2);

assign and_ln785_5_fu_2325_p2 = (xor_ln786_fu_2183_p2 & or_ln785_5_fu_2320_p2);

assign and_ln785_6_fu_2111_p2 = (xor_ln785_13_fu_2105_p2 & or_ln785_6_fu_2099_p2);

assign and_ln785_fu_1653_p2 = (xor_ln785_8_fu_1647_p2 & or_ln785_fu_1641_p2);

assign and_ln786_10_fu_2260_p2 = (xor_ln786_6_fu_2254_p2 & tmp_71_reg_2518);

assign and_ln786_11_fu_2342_p2 = (xor_ln786_7_fu_2336_p2 & tmp_62_reg_2481);

assign and_ln786_12_fu_2135_p2 = (xor_ln786_8_fu_2129_p2 & tmp_82_fu_1969_p3);

assign and_ln786_1_fu_1827_p2 = (tmp_75_fu_1753_p3 & select_ln416_4_fu_1819_p3);

assign and_ln786_2_fu_1963_p2 = (tmp_80_fu_1889_p3 & select_ln416_5_fu_1955_p3);

assign and_ln786_3_fu_2117_p2 = (tmp_86_fu_2033_p3 & and_ln416_7_fu_2081_p2);

assign and_ln786_9_fu_1677_p2 = (xor_ln786_5_fu_1671_p2 & tmp_63_fu_1491_p3);

assign and_ln786_fu_1659_p2 = (tmp_67_fu_1555_p3 & select_ln416_fu_1621_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (io_acc_block_signal_op311 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln106_fu_649_p2 == 1'd0) & (io_acc_block_signal_op19 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (io_acc_block_signal_op311 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln106_fu_649_p2 == 1'd0) & (io_acc_block_signal_op19 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (io_acc_block_signal_op311 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln106_fu_649_p2 == 1'd0) & (io_acc_block_signal_op19 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln106_fu_649_p2 == 1'd0) & (io_acc_block_signal_op19 == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((icmp_ln106_reg_2387_pp0_iter1_reg == 1'd0) & (io_acc_block_signal_op311 == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign icmp_ln106_fu_649_p2 = ((indvar_flatten_reg_266 == 8'd192) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_1793_p2 = ((tmp_4_fu_1777_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_1929_p2 = ((p_Result_20_2_fu_1913_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_1587_p2 = ((tmp_69_fu_1571_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_10_fu_1907_p2 = ((p_Result_19_2_fu_1897_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_11_fu_1923_p2 = ((p_Result_20_2_fu_1913_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_8_fu_1771_p2 = ((tmp_3_fu_1761_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_9_fu_1787_p2 = ((tmp_4_fu_1777_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1581_p2 = ((tmp_69_fu_1571_p4 == 2'd3) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op19 = (data_V_data_3_V_TVALID_int & data_V_data_2_V_TVALID_int & data_V_data_1_V_TVALID_int & data_V_data_0_V_TVALID_int);

assign io_acc_block_signal_op311 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign mul_ln1118_10_fu_286_p1 = sext_ln1116_fu_977_p0;

assign mul_ln1118_10_fu_286_p2 = ($signed({{1'b0}, {16'd71}}) * $signed(mul_ln1118_10_fu_286_p1));

assign mul_ln1118_11_fu_283_p1 = sext_ln1118_24_fu_987_p0;

assign mul_ln1118_11_fu_283_p2 = ($signed(14'd16362) * $signed(mul_ln1118_11_fu_283_p1));

assign mul_ln1118_12_fu_288_p1 = sext_ln1118_27_fu_1086_p1;

assign mul_ln1118_12_fu_288_p2 = ($signed({{1'b0}, {15'd51}}) * $signed(mul_ln1118_12_fu_288_p1));

assign mul_ln1118_13_fu_278_p1 = sext_ln1118_27_fu_1086_p1;

assign mul_ln1118_13_fu_278_p2 = ($signed(15'd32721) * $signed(mul_ln1118_13_fu_278_p1));

assign mul_ln1118_fu_290_p1 = sext_ln1118_23_fu_982_p0;

assign mul_ln1118_fu_290_p2 = ($signed(15'd32722) * $signed(mul_ln1118_fu_290_p1));

assign or_ln1192_2_fu_1238_p3 = {{6'd40}, {add_ln1192_19_fu_1232_p2}};

assign or_ln1192_3_fu_1268_p3 = {{5'd16}, {tmp_55_fu_1034_p3}};

assign or_ln340_13_fu_2188_p2 = (xor_ln785_8_reg_2498 | and_ln786_reg_2503);

assign or_ln340_14_fu_2192_p2 = (or_ln340_13_fu_2188_p2 | and_ln781_reg_2493);

assign or_ln340_15_fu_2265_p2 = (and_ln786_10_fu_2260_p2 | and_ln785_4_fu_2243_p2);

assign or_ln340_16_fu_2271_p2 = (xor_ln785_10_fu_2238_p2 | and_ln786_1_reg_2552);

assign or_ln340_17_fu_2276_p2 = (or_ln340_16_fu_2271_p2 | and_ln781_1_fu_2223_p2);

assign or_ln340_18_fu_2347_p2 = (and_ln786_11_fu_2342_p2 | and_ln785_5_fu_2325_p2);

assign or_ln340_19_fu_2353_p2 = (xor_ln786_fu_2183_p2 | and_ln786_2_reg_2586);

assign or_ln340_20_fu_2358_p2 = (or_ln340_19_fu_2353_p2 | and_ln781_2_fu_2310_p2);

assign or_ln340_21_fu_2141_p2 = (and_ln786_12_fu_2135_p2 | and_ln785_6_fu_2111_p2);

assign or_ln340_22_fu_2147_p2 = (xor_ln785_13_fu_2105_p2 | and_ln786_3_fu_2117_p2);

assign or_ln340_23_fu_2153_p2 = (or_ln340_22_fu_2147_p2 | and_ln781_3_fu_2087_p2);

assign or_ln340_fu_1683_p2 = (and_ln786_9_fu_1677_p2 | and_ln785_fu_1653_p2);

assign or_ln416_1_fu_2075_p2 = (xor_ln779_6_fu_2057_p2 | or_ln416_fu_2069_p2);

assign or_ln416_fu_2069_p2 = (xor_ln416_7_fu_2063_p2 | tmp_85_fu_2013_p3);

assign or_ln785_4_fu_2233_p2 = (xor_ln785_9_fu_2227_p2 | tmp_75_reg_2536);

assign or_ln785_5_fu_2320_p2 = (xor_ln785_11_fu_2314_p2 | tmp_80_reg_2570);

assign or_ln785_6_fu_2099_p2 = (xor_ln785_12_fu_2093_p2 | tmp_86_fu_2033_p3);

assign or_ln785_fu_1641_p2 = (xor_ln785_fu_1635_p2 | tmp_67_fu_1555_p3);

assign or_ln786_4_fu_2249_p2 = (and_ln786_1_reg_2552 | and_ln781_1_fu_2223_p2);

assign or_ln786_5_fu_2331_p2 = (and_ln786_2_reg_2586 | and_ln781_2_fu_2310_p2);

assign or_ln786_6_fu_2123_p2 = (and_ln786_3_fu_2117_p2 | and_ln781_3_fu_2087_p2);

assign or_ln786_fu_1665_p2 = (and_ln786_fu_1659_p2 | and_ln781_fu_1629_p2);

assign or_ln_fu_1397_p3 = {{14'd16336}, {tmp_50_reg_2401}};

assign p_Result_19_2_fu_1897_p4 = {{acc_2_V_7_fu_1471_p2[15:13]}};

assign p_Result_20_2_fu_1913_p4 = {{acc_2_V_7_fu_1471_p2[15:12]}};

assign res_V_data_0_V_din = ((or_ln340_14_fu_2192_p2[0:0] === 1'b1) ? select_ln340_fu_2197_p3 : select_ln388_fu_2203_p3);

assign res_V_data_1_V_din = ((or_ln340_17_fu_2276_p2[0:0] === 1'b1) ? select_ln340_11_fu_2282_p3 : select_ln388_4_fu_2289_p3);

assign res_V_data_2_V_din = ((or_ln340_20_fu_2358_p2[0:0] === 1'b1) ? select_ln340_13_fu_2364_p3 : select_ln388_5_fu_2371_p3);

assign res_V_data_3_V_din = tmp_data_3_V_39_reg_2592;

assign select_ln340_11_fu_2282_p3 = ((or_ln340_15_fu_2265_p2[0:0] === 1'b1) ? 8'd127 : add_ln415_18_reg_2524);

assign select_ln340_13_fu_2364_p3 = ((or_ln340_18_fu_2347_p2[0:0] === 1'b1) ? 8'd127 : add_ln415_19_reg_2558);

assign select_ln340_15_fu_2159_p3 = ((or_ln340_21_fu_2141_p2[0:0] === 1'b1) ? 8'd127 : add_ln415_20_fu_2007_p2);

assign select_ln340_fu_2197_p3 = ((or_ln340_reg_2513[0:0] === 1'b1) ? 8'd127 : add_ln415_17_reg_2487);

assign select_ln388_4_fu_2289_p3 = ((and_ln786_10_fu_2260_p2[0:0] === 1'b1) ? 8'd128 : add_ln415_18_reg_2524);

assign select_ln388_5_fu_2371_p3 = ((and_ln786_11_fu_2342_p2[0:0] === 1'b1) ? 8'd128 : add_ln415_19_reg_2558);

assign select_ln388_6_fu_2167_p3 = ((and_ln786_12_fu_2135_p2[0:0] === 1'b1) ? 8'd128 : add_ln415_20_fu_2007_p2);

assign select_ln388_fu_2203_p3 = ((and_ln786_9_reg_2508[0:0] === 1'b1) ? 8'd128 : add_ln415_17_reg_2487);

assign select_ln416_4_fu_1819_p3 = ((and_ln416_4_fu_1747_p2[0:0] === 1'b1) ? and_ln779_1_fu_1813_p2 : icmp_ln879_9_fu_1787_p2);

assign select_ln416_5_fu_1955_p3 = ((and_ln416_5_fu_1883_p2[0:0] === 1'b1) ? and_ln779_2_fu_1949_p2 : icmp_ln879_11_fu_1923_p2);

assign select_ln416_fu_1621_p3 = ((and_ln416_fu_1549_p2[0:0] === 1'b1) ? and_ln779_fu_1615_p2 : icmp_ln879_fu_1581_p2);

assign select_ln777_4_fu_2218_p3 = ((and_ln416_4_reg_2530[0:0] === 1'b1) ? icmp_ln879_9_reg_2541 : icmp_ln768_4_reg_2547);

assign select_ln777_5_fu_2305_p3 = ((and_ln416_5_reg_2564[0:0] === 1'b1) ? icmp_ln879_11_reg_2575 : icmp_ln768_5_reg_2581);

assign select_ln777_fu_1593_p3 = ((and_ln416_fu_1549_p2[0:0] === 1'b1) ? icmp_ln879_fu_1581_p2 : icmp_ln768_fu_1587_p2);

assign sext_ln1116_fu_977_p0 = data_V_data_2_V_TDATA_int;

assign sext_ln1118_16_fu_689_p1 = $signed(shl_ln_fu_681_p3);

assign sext_ln1118_17_fu_701_p1 = shl_ln1118_6_fu_693_p3;

assign sext_ln1118_18_fu_705_p1 = shl_ln1118_6_fu_693_p3;

assign sext_ln1118_19_fu_793_p1 = $signed(shl_ln1118_7_fu_785_p3);

assign sext_ln1118_20_fu_749_p1 = $signed(tmp_fu_741_p3);

assign sext_ln1118_21_fu_853_p0 = data_V_data_1_V_TDATA_int;

assign sext_ln1118_21_fu_853_p1 = sext_ln1118_21_fu_853_p0;

assign sext_ln1118_22_fu_909_p1 = $signed(shl_ln1118_9_fu_901_p3);

assign sext_ln1118_23_fu_982_p0 = data_V_data_2_V_TDATA_int;

assign sext_ln1118_24_fu_987_p0 = data_V_data_2_V_TDATA_int;

assign sext_ln1118_25_fu_1000_p1 = $signed(shl_ln1118_s_fu_992_p3);

assign sext_ln1118_26_fu_1020_p1 = $signed(trunc_ln708_23_fu_1010_p4);

assign sext_ln1118_27_fu_1086_p0 = data_V_data_3_V_TDATA_int;

assign sext_ln1118_27_fu_1086_p1 = sext_ln1118_27_fu_1086_p0;

assign sext_ln1118_28_fu_1092_p0 = data_V_data_3_V_TDATA_int;

assign sext_ln1118_28_fu_1092_p1 = sext_ln1118_28_fu_1092_p0;

assign sext_ln1118_29_fu_1096_p0 = data_V_data_3_V_TDATA_int;

assign sext_ln1118_29_fu_1096_p1 = sext_ln1118_29_fu_1096_p0;

assign sext_ln1118_30_fu_1144_p1 = $signed(shl_ln1118_1_fu_1136_p3);

assign sext_ln1118_31_fu_1180_p1 = $signed(shl_ln1118_2_fu_1172_p3);

assign sext_ln1118_32_fu_865_p1 = $signed(tmp_1_fu_857_p3);

assign sext_ln1118_fu_677_p0 = data_V_data_0_V_TDATA_int;

assign sext_ln1118_fu_677_p1 = sext_ln1118_fu_677_p0;

assign sext_ln1192_10_fu_1445_p1 = $signed(add_ln1192_33_reg_2476);

assign sext_ln1192_4_fu_1410_p1 = $signed(acc_2_V_fu_1404_p2);

assign sext_ln1192_6_fu_1246_p1 = $signed(or_ln1192_2_fu_1238_p3);

assign sext_ln1192_7_fu_1417_p1 = $signed(add_ln1192_24_reg_2461);

assign sext_ln1192_8_fu_1435_p1 = add_ln1192_28_fu_1429_p2;

assign sext_ln1192_9_fu_1302_p1 = $signed(add_ln1192_30_fu_1296_p2);

assign sext_ln1192_fu_1228_p1 = $signed(add_ln1192_fu_1222_p2);

assign sext_ln415_15_fu_769_p1 = $signed(trunc_ln708_s_fu_759_p4);

assign sext_ln415_16_fu_1328_p1 = $signed(trunc_ln708_18_reg_2396);

assign sext_ln415_17_fu_837_p1 = $signed(trunc_ln708_19_fu_827_p4);

assign sext_ln415_18_fu_885_p1 = $signed(trunc_ln708_20_fu_875_p4);

assign sext_ln415_19_fu_929_p1 = $signed(trunc_ln708_21_fu_919_p4);

assign sext_ln415_20_fu_955_p1 = $signed(trunc_ln708_22_fu_945_p4);

assign sext_ln415_21_fu_1331_p1 = $signed(trunc_ln708_24_reg_2406);

assign sext_ln415_22_fu_1334_p1 = $signed(trunc_ln708_25_reg_2411);

assign sext_ln415_23_fu_1346_p1 = $signed(add_ln415_12_fu_1340_p2);

assign sext_ln415_24_fu_1070_p1 = $signed(trunc_ln708_26_fu_1060_p4);

assign sext_ln415_25_fu_1350_p1 = $signed(trunc_ln708_27_reg_2421);

assign sext_ln415_26_fu_1362_p1 = $signed(trunc_ln708_28_reg_2431);

assign sext_ln415_27_fu_1374_p1 = add_ln415_14_fu_1368_p2;

assign sext_ln415_28_fu_1378_p1 = $signed(trunc_ln708_29_reg_2441);

assign sext_ln415_29_fu_1390_p1 = $signed(add_ln415_15_fu_1384_p2);

assign sext_ln415_30_fu_1200_p1 = $signed(trunc_ln708_30_fu_1190_p4);

assign sext_ln415_31_fu_1394_p1 = $signed(add_ln415_16_reg_2451);

assign sext_ln415_fu_725_p1 = $signed(trunc_ln_fu_715_p4);

assign sext_ln703_fu_1414_p1 = $signed(acc_0_V_reg_2456);

assign shl_ln1118_1_fu_1136_p1 = data_V_data_3_V_TDATA_int;

assign shl_ln1118_1_fu_1136_p3 = {{shl_ln1118_1_fu_1136_p1}, {4'd0}};

assign shl_ln1118_2_fu_1172_p1 = data_V_data_3_V_TDATA_int;

assign shl_ln1118_2_fu_1172_p3 = {{shl_ln1118_2_fu_1172_p1}, {2'd0}};

assign shl_ln1118_6_fu_693_p1 = data_V_data_0_V_TDATA_int;

assign shl_ln1118_6_fu_693_p3 = {{shl_ln1118_6_fu_693_p1}, {1'd0}};

assign shl_ln1118_7_fu_785_p1 = data_V_data_0_V_TDATA_int;

assign shl_ln1118_7_fu_785_p3 = {{shl_ln1118_7_fu_785_p1}, {3'd0}};

assign shl_ln1118_9_fu_901_p1 = data_V_data_1_V_TDATA_int;

assign shl_ln1118_9_fu_901_p3 = {{shl_ln1118_9_fu_901_p1}, {1'd0}};

assign shl_ln1118_s_fu_992_p1 = data_V_data_2_V_TDATA_int;

assign shl_ln1118_s_fu_992_p3 = {{shl_ln1118_s_fu_992_p1}, {4'd0}};

assign shl_ln_fu_681_p1 = data_V_data_0_V_TDATA_int;

assign shl_ln_fu_681_p3 = {{shl_ln_fu_681_p1}, {4'd0}};

assign start_out = real_start;

assign sub_ln1118_10_fu_753_p2 = ($signed(sext_ln1118_fu_677_p1) - $signed(sext_ln1118_20_fu_749_p1));

assign sub_ln1118_11_fu_869_p2 = ($signed(sext_ln1118_21_fu_853_p1) - $signed(sext_ln1118_32_fu_865_p1));

assign sub_ln1118_6_fu_821_p2 = ($signed(sext_ln1118_20_fu_749_p1) - $signed(sext_ln1118_fu_677_p1));

assign sub_ln1118_7_fu_913_p2 = ($signed(10'd0) - $signed(sext_ln1118_22_fu_909_p1));

assign sub_ln1118_8_fu_1004_p2 = ($signed(13'd0) - $signed(sext_ln1118_25_fu_1000_p1));

assign sub_ln1118_9_fu_1148_p2 = ($signed(sext_ln1118_30_fu_1144_p1) - $signed(sext_ln1118_29_fu_1096_p1));

assign sub_ln1118_fu_709_p2 = ($signed(sext_ln1118_16_fu_689_p1) - $signed(sext_ln1118_18_fu_705_p1));

assign tmp_1_fu_857_p1 = data_V_data_1_V_TDATA_int;

assign tmp_1_fu_857_p3 = {{tmp_1_fu_857_p1}, {4'd0}};

assign tmp_3_fu_1761_p4 = {{acc_1_V_fu_1465_p2[14:13]}};

assign tmp_48_fu_729_p3 = sub_ln1118_fu_709_p2[32'd1];

assign tmp_49_fu_773_p3 = sub_ln1118_10_fu_753_p2[32'd1];

assign tmp_4_fu_1777_p4 = {{acc_1_V_fu_1465_p2[14:12]}};

assign tmp_51_fu_841_p3 = sub_ln1118_6_fu_821_p2[32'd1];

assign tmp_52_fu_889_p3 = sub_ln1118_11_fu_869_p2[32'd1];

assign tmp_53_fu_933_p3 = sub_ln1118_7_fu_913_p2[32'd1];

assign tmp_54_fu_959_p1 = data_V_data_1_V_TDATA_int;

assign tmp_54_fu_959_p3 = tmp_54_fu_959_p1[32'd1];

assign tmp_55_fu_1034_p3 = mul_ln1118_fu_290_p2[32'd1];

assign tmp_57_fu_1074_p3 = mul_ln1118_11_fu_283_p2[32'd1];

assign tmp_61_fu_1204_p3 = add_ln1118_1_fu_1184_p2[32'd1];

assign tmp_63_fu_1491_p3 = acc_0_V_2_fu_1453_p2[32'd13];

assign tmp_64_fu_1509_p3 = acc_0_V_2_fu_1453_p2[32'd11];

assign tmp_65_fu_1517_p3 = acc_0_V_2_fu_1453_p2[32'd3];

assign tmp_66_fu_1535_p3 = add_ln415_17_fu_1529_p2[32'd7];

assign tmp_67_fu_1555_p3 = add_ln415_17_fu_1529_p2[32'd7];

assign tmp_68_fu_1563_p3 = acc_0_V_2_fu_1453_p2[32'd13];

assign tmp_69_fu_1571_p4 = {{acc_0_V_2_fu_1453_p2[13:12]}};

assign tmp_70_fu_1601_p3 = acc_0_V_2_fu_1453_p2[32'd12];

assign tmp_72_fu_1707_p3 = add_ln1192_36_fu_1459_p2[32'd11];

assign tmp_73_fu_1715_p3 = add_ln1192_36_fu_1459_p2[32'd3];

assign tmp_74_fu_1733_p3 = add_ln415_18_fu_1727_p2[32'd7];

assign tmp_75_fu_1753_p3 = add_ln415_18_fu_1727_p2[32'd7];

assign tmp_76_fu_1799_p3 = add_ln1192_36_fu_1459_p2[32'd12];

assign tmp_77_fu_1843_p3 = acc_2_V_7_fu_1471_p2[32'd11];

assign tmp_78_fu_1851_p3 = acc_2_V_7_fu_1471_p2[32'd3];

assign tmp_79_fu_1869_p3 = add_ln415_19_fu_1863_p2[32'd7];

assign tmp_80_fu_1889_p3 = add_ln415_19_fu_1863_p2[32'd7];

assign tmp_81_fu_1935_p3 = acc_2_V_7_fu_1471_p2[32'd12];

assign tmp_82_fu_1969_p3 = add_ln1192_35_fu_1485_p2[32'd12];

assign tmp_83_fu_1987_p3 = add_ln1192_35_fu_1485_p2[32'd11];

assign tmp_84_fu_1995_p3 = add_ln1192_35_fu_1485_p2[32'd3];

assign tmp_85_fu_2013_p3 = add_ln415_20_fu_2007_p2[32'd7];

assign tmp_86_fu_2033_p3 = add_ln415_20_fu_2007_p2[32'd7];

assign tmp_87_fu_2041_p3 = add_ln1192_35_fu_1485_p2[32'd12];

assign tmp_88_fu_2049_p3 = add_ln1192_35_fu_1485_p2[32'd12];

assign tmp_data_3_V_39_fu_2175_p3 = ((or_ln340_23_fu_2153_p2[0:0] === 1'b1) ? select_ln340_15_fu_2159_p3 : select_ln388_6_fu_2167_p3);

assign tmp_fu_741_p1 = data_V_data_0_V_TDATA_int;

assign tmp_fu_741_p3 = {{tmp_fu_741_p1}, {2'd0}};

assign trunc_ln708_19_fu_827_p4 = {{sub_ln1118_6_fu_821_p2[10:2]}};

assign trunc_ln708_20_fu_875_p4 = {{sub_ln1118_11_fu_869_p2[12:2]}};

assign trunc_ln708_21_fu_919_p4 = {{sub_ln1118_7_fu_913_p2[9:2]}};

assign trunc_ln708_22_fu_945_p1 = data_V_data_1_V_TDATA_int;

assign trunc_ln708_22_fu_945_p4 = {{trunc_ln708_22_fu_945_p1[7:2]}};

assign trunc_ln708_23_fu_1010_p4 = {{sub_ln1118_8_fu_1004_p2[12:2]}};

assign trunc_ln708_26_fu_1060_p4 = {{mul_ln1118_11_fu_283_p2[13:2]}};

assign trunc_ln708_30_fu_1190_p4 = {{add_ln1118_1_fu_1184_p2[10:2]}};

assign trunc_ln708_31_fu_1499_p4 = {{acc_0_V_2_fu_1453_p2[11:4]}};

assign trunc_ln708_32_fu_1697_p4 = {{add_ln1192_36_fu_1459_p2[11:4]}};

assign trunc_ln708_33_fu_1833_p4 = {{acc_2_V_7_fu_1471_p2[11:4]}};

assign trunc_ln708_34_fu_1977_p4 = {{add_ln1192_35_fu_1485_p2[11:4]}};

assign trunc_ln708_s_fu_759_p4 = {{sub_ln1118_10_fu_753_p2[10:2]}};

assign trunc_ln_fu_715_p4 = {{sub_ln1118_fu_709_p2[12:2]}};

assign xor_ln416_4_fu_1741_p2 = (tmp_74_fu_1733_p3 ^ 1'd1);

assign xor_ln416_5_fu_1877_p2 = (tmp_79_fu_1869_p3 ^ 1'd1);

assign xor_ln416_6_fu_2021_p2 = (tmp_85_fu_2013_p3 ^ 1'd1);

assign xor_ln416_7_fu_2063_p2 = (tmp_83_fu_1987_p3 ^ 1'd1);

assign xor_ln416_fu_1543_p2 = (tmp_66_fu_1535_p3 ^ 1'd1);

assign xor_ln779_4_fu_1807_p2 = (tmp_76_fu_1799_p3 ^ 1'd1);

assign xor_ln779_5_fu_1943_p2 = (tmp_81_fu_1935_p3 ^ 1'd1);

assign xor_ln779_6_fu_2057_p2 = (tmp_88_fu_2049_p3 ^ 1'd1);

assign xor_ln779_fu_1609_p2 = (tmp_70_fu_1601_p3 ^ 1'd1);

assign xor_ln785_10_fu_2238_p2 = (tmp_71_reg_2518 ^ 1'd1);

assign xor_ln785_11_fu_2314_p2 = (select_ln777_5_fu_2305_p3 ^ 1'd1);

assign xor_ln785_12_fu_2093_p2 = (tmp_87_fu_2041_p3 ^ and_ln416_6_fu_2027_p2);

assign xor_ln785_13_fu_2105_p2 = (tmp_82_fu_1969_p3 ^ 1'd1);

assign xor_ln785_8_fu_1647_p2 = (tmp_63_fu_1491_p3 ^ 1'd1);

assign xor_ln785_9_fu_2227_p2 = (select_ln777_4_fu_2218_p3 ^ 1'd1);

assign xor_ln785_fu_1635_p2 = (select_ln777_fu_1593_p3 ^ 1'd1);

assign xor_ln786_5_fu_1671_p2 = (or_ln786_fu_1665_p2 ^ 1'd1);

assign xor_ln786_6_fu_2254_p2 = (or_ln786_4_fu_2249_p2 ^ 1'd1);

assign xor_ln786_7_fu_2336_p2 = (or_ln786_5_fu_2331_p2 ^ 1'd1);

assign xor_ln786_8_fu_2129_p2 = (or_ln786_6_fu_2123_p2 ^ 1'd1);

assign xor_ln786_fu_2183_p2 = (tmp_62_reg_2481 ^ 1'd1);

assign zext_ln1118_4_fu_781_p1 = tmp_49_fu_773_p3;

assign zext_ln1118_5_fu_849_p1 = tmp_51_fu_841_p3;

assign zext_ln1118_6_fu_897_p1 = tmp_52_fu_889_p3;

assign zext_ln1118_7_fu_1082_p1 = tmp_57_fu_1074_p3;

assign zext_ln1118_fu_737_p1 = tmp_48_fu_729_p3;

assign zext_ln1192_3_fu_1286_p1 = add_ln1192_26_fu_1280_p2;

assign zext_ln1192_4_fu_1426_p1 = add_ln1192_27_reg_2466;

assign zext_ln1192_5_fu_1318_p1 = add_ln1192_32_fu_1312_p2;

assign zext_ln1192_fu_1276_p1 = or_ln1192_3_fu_1268_p3;

assign zext_ln415_12_fu_1337_p1 = tmp_56_reg_2416;

assign zext_ln415_13_fu_1353_p1 = tmp_58_reg_2426;

assign zext_ln415_14_fu_1365_p1 = tmp_59_reg_2436;

assign zext_ln415_15_fu_1381_p1 = tmp_60_reg_2446;

assign zext_ln415_16_fu_1212_p1 = tmp_61_fu_1204_p3;

assign zext_ln415_17_fu_1525_p1 = tmp_65_fu_1517_p3;

assign zext_ln415_18_fu_1723_p1 = tmp_73_fu_1715_p3;

assign zext_ln415_19_fu_1859_p1 = tmp_78_fu_1851_p3;

assign zext_ln415_20_fu_2003_p1 = tmp_84_fu_1995_p3;

assign zext_ln415_fu_967_p1 = tmp_54_fu_959_p3;

assign zext_ln708_fu_941_p1 = tmp_53_fu_933_p3;

endmodule //pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config50_s

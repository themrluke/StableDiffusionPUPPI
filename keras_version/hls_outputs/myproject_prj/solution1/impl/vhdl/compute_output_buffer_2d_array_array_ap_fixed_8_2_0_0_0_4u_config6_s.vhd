-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    in_elem_data_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_3_V_blk_n : OUT STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal io_acc_block_signal_op80 : STD_LOGIC;
    signal and_ln289_6_reg_509 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_6_reg_509_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal kernel_data_V_1632 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_2633 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4635 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_5636 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_7638 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_6637_ret_reg_464 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_3634_ret_reg_469 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_0_ret_reg_474 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1632_ret_reg_479 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_2633_ret_reg_484 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4635_ret_reg_489 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_5636_ret_reg_494 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_7638_ret_reg_499 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_8_ret_reg_504 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln289_6_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_6_reg_509_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_6_reg_509_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_6_reg_509_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_6_reg_509_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_reg_513 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln323_fu_428_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln317_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_out_0_V_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_out_1_V_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_out_2_V_reg_535 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_out_3_V_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp46 : BOOLEAN;
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_start : STD_LOGIC;
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_done : STD_LOGIC;
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_idle : STD_LOGIC;
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ready : STD_LOGIC;
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call11 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call11 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call11 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call11 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call11 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call11 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call11 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp16 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge_reg_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_reg_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln328_fu_378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_300_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4505_fu_320_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_7_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_8_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_9_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_5_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln328_fu_372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_314 : BOOLEAN;
    signal ap_condition_344 : BOOLEAN;

    component dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145 : component dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => kernel_data_V_0_ret_reg_474,
        data_1_V_read => kernel_data_V_1632_ret_reg_479,
        data_2_V_read => kernel_data_V_2633_ret_reg_484,
        data_3_V_read => kernel_data_V_3634_ret_reg_469,
        data_4_V_read => kernel_data_V_4635_ret_reg_489,
        data_5_V_read => kernel_data_V_5636_ret_reg_494,
        data_6_V_read => kernel_data_V_6637_ret_reg_464,
        data_7_V_read => kernel_data_V_7638_ret_reg_499,
        data_8_V_read => kernel_data_V_8_ret_reg_504,
        ap_return_0 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_3,
        ap_ce => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_ce);

    call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158 : component shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_start,
        ap_done => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_done,
        ap_idle => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_idle,
        ap_ready => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ready,
        in_elem_data_V_read => in_elem_data_V_read,
        kernel_window_1_V_read => kernel_data_V_1632,
        kernel_window_2_V_read => kernel_data_V_2633,
        kernel_window_4_V_read => kernel_data_V_4635,
        kernel_window_5_V_read => kernel_data_V_5636,
        kernel_window_7_V_read => kernel_data_V_7638,
        kernel_window_8_V_read => kernel_data_V_8,
        ap_return_0 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_0,
        ap_return_1 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_1,
        ap_return_2 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_2,
        ap_return_3 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_3,
        ap_return_4 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_4,
        ap_return_5 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_5,
        ap_return_6 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_6,
        ap_return_7 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_7,
        ap_return_8 => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_8,
        ap_ce => call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_storemerge_reg_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_314)) then
                if (((icmp_ln317_fu_404_p2 = ap_const_lv1_1) and (icmp_ln313_fu_354_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_134 <= ap_const_lv32_0;
                elsif (((icmp_ln313_fu_354_p2 = ap_const_lv1_1) and (icmp_ln317_fu_404_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_134 <= select_ln323_fu_428_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_134 <= ap_phi_reg_pp0_iter1_storemerge_reg_134;
                end if;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_314)) then
                if ((icmp_ln313_fu_354_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_354_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln326_fu_360_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_344)) then
                if ((icmp_ln317_fu_404_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_404_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln321_fu_410_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_314)) then
                if ((icmp_ln313_fu_354_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_354_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln328_fu_378_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln289_6_reg_509 <= and_ln289_6_fu_348_p2;
                icmp_ln313_reg_513 <= icmp_ln313_fu_354_p2;
                kernel_data_V_0_ret_reg_474 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_0;
                kernel_data_V_1632_ret_reg_479 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_3;
                kernel_data_V_2633_ret_reg_484 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_4;
                kernel_data_V_3634_ret_reg_469 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_1;
                kernel_data_V_4635_ret_reg_489 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_5;
                kernel_data_V_5636_ret_reg_494 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_6;
                kernel_data_V_6637_ret_reg_464 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_2;
                kernel_data_V_7638_ret_reg_499 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_7;
                kernel_data_V_8_ret_reg_504 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln289_6_reg_509_pp0_iter2_reg <= and_ln289_6_reg_509;
                and_ln289_6_reg_509_pp0_iter3_reg <= and_ln289_6_reg_509_pp0_iter2_reg;
                and_ln289_6_reg_509_pp0_iter4_reg <= and_ln289_6_reg_509_pp0_iter3_reg;
                and_ln289_6_reg_509_pp0_iter5_reg <= and_ln289_6_reg_509_pp0_iter4_reg;
                and_ln289_6_reg_509_pp0_iter6_reg <= and_ln289_6_reg_509_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_storemerge_reg_134 <= ap_phi_reg_pp0_iter0_storemerge_reg_134;
                kernel_data_V_1632 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_3;
                kernel_data_V_2633 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_4;
                kernel_data_V_4635 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_5;
                kernel_data_V_5636 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_6;
                kernel_data_V_7638 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_7;
                kernel_data_V_8 <= call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_return_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter5_reg))) then
                res_out_0_V_reg_525 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_0;
                res_out_1_V_reg_530 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_1;
                res_out_2_V_reg_535 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_2;
                res_out_3_V_reg_540 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_513 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                sY_2 <= ap_phi_reg_pp0_iter2_storemerge_reg_134;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln321_fu_410_p2 <= std_logic_vector(unsigned(pY_2) + unsigned(ap_const_lv32_1));
    add_ln323_fu_422_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_2_load) + unsigned(ap_const_lv32_1));
    add_ln326_fu_360_p2 <= std_logic_vector(unsigned(pX_2) + unsigned(ap_const_lv32_1));
    add_ln328_fu_372_p2 <= std_logic_vector(unsigned(sX_2) + unsigned(ap_const_lv32_1));
    and_ln289_5_fu_342_p2 <= (icmp_ln289_9_fu_330_p2 and icmp_ln289_8_fu_310_p2);
    and_ln289_6_fu_348_p2 <= (and_ln289_fu_336_p2 and and_ln289_5_fu_342_p2);
    and_ln289_fu_336_p2 <= (icmp_ln289_fu_280_p2 and icmp_ln289_7_fu_290_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter7, io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter7, io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp16_assign_proc : process(ap_start, ap_enable_reg_pp0_iter7, io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp16 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp46_assign_proc : process(ap_start, ap_enable_reg_pp0_iter7, io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp46 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter7, io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call11_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call11 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter7_assign_proc : process(io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
                ap_block_state8_pp0_stage0_iter7 <= ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0));
    end process;


    ap_block_state8_pp0_stage0_iter7_ignore_call0_assign_proc : process(io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
                ap_block_state8_pp0_stage0_iter7_ignore_call0 <= ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0));
    end process;


    ap_block_state8_pp0_stage0_iter7_ignore_call11_assign_proc : process(io_acc_block_signal_op80, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
                ap_block_state8_pp0_stage0_iter7_ignore_call11 <= ((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (io_acc_block_signal_op80 = ap_const_logic_0));
    end process;


    ap_condition_314_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_314 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_344_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce, icmp_ln313_fu_354_p2)
    begin
                ap_condition_344 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_354_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_134 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to6)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_sY_2_load_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, sY_2, icmp_ln313_reg_513, ap_phi_reg_pp0_iter2_storemerge_reg_134)
    begin
        if (((icmp_ln313_reg_513 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_sY_2_load <= ap_phi_reg_pp0_iter2_storemerge_reg_134;
        else 
            ap_sig_allocacmp_sY_2_load <= sY_2;
        end if; 
    end process;


    call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp16) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ce <= ap_const_logic_1;
        else 
            call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_start <= ap_const_logic_1;
        else 
            call_ret8_shift_line_buffer_array_ap_fixed_8_2_0_0_0_1u_config6_s_fu_158_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp46) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config6_mult_0_0_0_0_0_fu_145_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln289_7_fu_290_p2 <= "1" when (ap_sig_allocacmp_sY_2_load = ap_const_lv32_2) else "0";
    icmp_ln289_8_fu_310_p2 <= "1" when (signed(tmp_fu_300_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_9_fu_330_p2 <= "1" when (signed(tmp_4505_fu_320_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_280_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_354_p2 <= "1" when (pX_2 = ap_const_lv32_41) else "0";
    icmp_ln317_fu_404_p2 <= "1" when (pY_2 = ap_const_lv32_D) else "0";
    io_acc_block_signal_op80 <= (res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, res_stream_V_data_0_V_full_n, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
        if (((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= res_out_0_V_reg_525;

    res_stream_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter7, and_ln289_6_reg_509_pp0_iter6_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, res_stream_V_data_1_V_full_n, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
        if (((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= res_out_1_V_reg_530;

    res_stream_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter7, and_ln289_6_reg_509_pp0_iter6_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, res_stream_V_data_2_V_full_n, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
        if (((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= res_out_2_V_reg_535;

    res_stream_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter7, and_ln289_6_reg_509_pp0_iter6_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, res_stream_V_data_3_V_full_n, and_ln289_6_reg_509_pp0_iter6_reg)
    begin
        if (((ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= res_out_3_V_reg_540;

    res_stream_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter7, and_ln289_6_reg_509_pp0_iter6_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_6_reg_509_pp0_iter6_reg) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_428_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_7_fu_290_p2(0) = '1') else 
        add_ln323_fu_422_p2;
    select_ln328_fu_378_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_fu_280_p2(0) = '1') else 
        add_ln328_fu_372_p2;
    tmp_4505_fu_320_p4 <= pX_2(31 downto 1);
    tmp_fu_300_p4 <= pY_2(31 downto 1);
end behav;

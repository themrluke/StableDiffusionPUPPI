-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config51_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config51_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv14_3FEB : STD_LOGIC_VECTOR (13 downto 0) := "11111111101011";
    constant ap_const_lv16_FF8E : STD_LOGIC_VECTOR (15 downto 0) := "1111111110001110";
    constant ap_const_lv13_B : STD_LOGIC_VECTOR (12 downto 0) := "0000000001011";
    constant ap_const_lv16_75 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001110101";
    constant ap_const_lv13_1FF3 : STD_LOGIC_VECTOR (12 downto 0) := "1111111110011";
    constant ap_const_lv16_5A : STD_LOGIC_VECTOR (15 downto 0) := "0000000001011010";
    constant ap_const_lv14_17 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010111";
    constant ap_const_lv16_5C : STD_LOGIC_VECTOR (15 downto 0) := "0000000001011100";
    constant ap_const_lv15_31 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110001";
    constant ap_const_lv15_7FD2 : STD_LOGIC_VECTOR (14 downto 0) := "111111111010010";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv12_F40 : STD_LOGIC_VECTOR (11 downto 0) := "111101000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln106_reg_2870 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal icmp_ln106_reg_2870_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_322 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln106_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op21 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal io_acc_block_signal_op331 : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln106_reg_2870_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_reg_2870_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln106_fu_1066_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_data_0_V_reg_2879 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_1_V_reg_2888 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_2_V_reg_2896 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_3_V_reg_2901 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_6_reg_2909 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_reg_2914 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_2919 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_5_reg_2924 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_reg_2929 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_1_fu_1417_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln415_1_reg_2934 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_9_reg_2939 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_reg_2944 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_s_reg_2949 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_11_reg_2954 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_4_fu_1511_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln415_4_reg_2959 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_11_reg_2964 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_13_reg_2969 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_6_fu_1561_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln415_6_reg_2974 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_13_reg_2980 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_15_reg_2985 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_2_fu_1638_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_2_reg_2990 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_6_fu_1654_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_6_reg_2995 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_14_fu_1670_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_14_reg_3000 : STD_LOGIC_VECTOR (11 downto 0);
    signal acc_2_V_2_fu_1676_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_2_V_2_reg_3005 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln415_8_fu_1974_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_8_reg_3011 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_fu_2082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_reg_3017 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_2100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_4_fu_2112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_4_reg_3027 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_5_fu_2130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_5_reg_3032 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_reg_3037 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_3042 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_9_fu_2180_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_9_reg_3048 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_1_fu_2200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_1_reg_3054 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_2206_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3060 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_2240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_3065 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_fu_2246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_reg_3071 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_fu_2280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_reg_3076 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_10_fu_2324_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_10_reg_3082 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_2_fu_2432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_2_reg_3088 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_5_fu_2450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_5_reg_3093 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_fu_2462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_reg_3098 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_7_fu_2480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_7_reg_3103 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_2486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_reg_3108 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_3113 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_11_fu_2530_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_11_reg_3119 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_3_fu_2550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_3_reg_3125 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_2556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_3131 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_fu_2590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_reg_3136 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_fu_2596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_reg_3142 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_fu_2630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_reg_3147 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1118_9_fu_333_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_4_fu_335_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1116_fu_1384_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_1_fu_336_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_3_fu_337_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_2_fu_338_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_6_fu_341_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_342_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_5_fu_346_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_7_fu_347_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_13_fu_1477_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_8_fu_348_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_6_fu_1088_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1098_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_342_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln_fu_1117_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_1131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_2_fu_1114_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1118_fu_1143_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_1_fu_1149_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_1163_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_1175_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_1_fu_1186_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_4_fu_1193_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_3_fu_1182_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_1_fu_1197_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_2_fu_1203_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_1_fu_336_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_3_fu_1217_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_2_fu_1243_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_3_fu_1254_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_7_fu_1250_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_8_fu_1261_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1118_fu_1269_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_4_fu_1275_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1289_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_2_fu_338_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_1311_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_5_fu_1323_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_fu_1326_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln415_fu_1329_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_4_fu_1339_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_11_fu_1346_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_2_fu_1350_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_9_fu_1265_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_3_fu_1356_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_7_fu_1362_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_3_fu_337_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_8_fu_1391_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_fu_1405_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_7_fu_1401_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln415_1_fu_1413_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_4_fu_335_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_5_fu_346_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_1441_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_6_fu_341_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_7_fu_347_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_10_fu_1485_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_12_fu_1499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_10_fu_1495_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln415_4_fu_1507_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_8_fu_348_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_9_fu_333_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_12_fu_1535_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_fu_1549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_12_fu_1545_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln415_6_fu_1557_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_5_fu_1567_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_15_fu_1574_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1118_4_fu_1578_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_14_fu_1482_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1118_5_fu_1584_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_5_fu_1213_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln415_fu_1127_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_3_fu_1285_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1118_3_fu_1297_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_fu_1139_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_1_fu_1620_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_fu_1626_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1192_fu_1634_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_fu_1614_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln708_fu_1319_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_1_fu_1171_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_5_fu_1644_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1192_1_fu_1650_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln415_1_fu_1159_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal acc_2_V_fu_1608_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_10_fu_1335_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal acc_2_V_1_fu_1660_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln415_6_fu_1372_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln415_2_fu_1227_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_fu_1666_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_16_fu_1451_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_8_fu_1691_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln415_2_fu_1694_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_9_fu_1703_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln415_3_fu_1706_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_11_fu_1718_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln415_5_fu_1721_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln415_5_fu_1724_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_14_fu_1737_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln415_7_fu_1740_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln415_7_fu_1743_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln415_4_fu_1685_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_1_fu_1762_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_3_fu_1756_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_7_fu_1765_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1116_fu_1688_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_2_fu_1682_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_15_fu_1778_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln1192_1_fu_1784_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1192_4_fu_1792_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1192_2_fu_1796_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_3_fu_1775_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_16_fu_1800_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_fu_1753_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln415_2_fu_1697_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_2_fu_1771_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln415_3_fu_1709_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_5_fu_1806_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_0_V_fu_1810_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_17_fu_1715_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_1_V_fu_1815_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_18_fu_1730_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_2_fu_1842_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_3_fu_1845_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_12_fu_1848_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal acc_2_V_3_fu_1821_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln415_13_fu_1734_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_4_fu_1862_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_1868_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_1888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1906_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_5_fu_1914_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_1824_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_6_fu_1749_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_0_V_1_fu_1830_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_20_fu_1962_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_14_fu_1944_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_8_fu_1970_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_1980_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1954_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_2008_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_fu_2024_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln416_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_2034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_2040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_2054_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_2018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_2062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_2068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_2046_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_2000_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_2088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1936_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_2094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_fu_2074_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_2118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_2106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_1_V_1_fu_1836_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_28_fu_2168_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_15_fu_2150_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_9_fu_2176_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_2186_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_2160_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_2194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_2214_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_fu_2230_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_fu_2252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_1_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_1_fu_2266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_1_fu_2272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1_fu_1922_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_2312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_16_fu_2294_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_10_fu_2320_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_2330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_2304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_2_fu_2338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_8_2_fu_2358_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_9_2_fu_2374_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_2_fu_2344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_2384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_fu_2390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_2404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_2368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_2_fu_2412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_2_fu_2418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_2_fu_2396_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_2350_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_4_fu_2438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_2286_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_2_fu_2444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_2_fu_2424_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_2_fu_2468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_2_fu_2456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_3_V_1_fu_1930_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_42_fu_2518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_17_fu_2500_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_11_fu_2526_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_2536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_2510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_3_fu_2544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_2564_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_46_fu_2580_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_47_fu_2602_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_2574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_3_fu_2610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_3_fu_2616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_3_fu_2622_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_2636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_2640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_2645_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_fu_2651_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_1_fu_2666_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_2_fu_2675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_1_fu_2681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_3_fu_2686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_1_fu_2671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_1_fu_2697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_2702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_6_fu_2708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_1_fu_2691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_2719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_2713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_2724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_2730_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_1_fu_2737_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln340_8_fu_2753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_2757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_2762_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_2_fu_2768_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_3_fu_2783_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_6_fu_2792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_3_fu_2798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_7_fu_2803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_3_fu_2788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_3_fu_2814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_2819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_8_fu_2825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_3_fu_2808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_11_fu_2836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_10_fu_2830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_12_fu_2841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_2847_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_3_fu_2854_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_fu_1060_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_322 <= add_ln106_fu_1066_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_322 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2870_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_2_V_2_reg_3005 <= acc_2_V_2_fu_1676_p2;
                add_ln1192_14_reg_3000 <= add_ln1192_14_fu_1670_p2;
                add_ln1192_2_reg_2990 <= add_ln1192_2_fu_1638_p2;
                add_ln1192_6_reg_2995 <= add_ln1192_6_fu_1654_p2;
                add_ln415_1_reg_2934 <= add_ln415_1_fu_1417_p2;
                add_ln415_4_reg_2959 <= add_ln415_4_fu_1511_p2;
                add_ln415_6_reg_2974 <= add_ln415_6_fu_1561_p2;
                tmp_11_reg_2954 <= mul_ln1118_6_fu_341_p2(1 downto 1);
                tmp_13_reg_2969 <= mul_ln1118_8_fu_348_p2(1 downto 1);
                tmp_15_reg_2985 <= sub_ln1118_5_fu_1584_p2(1 downto 1);
                tmp_3_reg_2919 <= mul_ln1118_1_fu_336_p2(1 downto 1);
                tmp_7_reg_2929 <= sub_ln1118_3_fu_1356_p2(1 downto 1);
                tmp_9_reg_2944 <= mul_ln1118_4_fu_335_p2(1 downto 1);
                trunc_ln708_11_reg_2964 <= mul_ln1118_8_fu_348_p2(14 downto 2);
                trunc_ln708_13_reg_2980 <= sub_ln1118_5_fu_1584_p2(10 downto 2);
                trunc_ln708_5_reg_2924 <= mul_ln1118_2_fu_338_p2(12 downto 2);
                trunc_ln708_9_reg_2939 <= mul_ln1118_4_fu_335_p2(15 downto 2);
                trunc_ln708_s_reg_2949 <= mul_ln1118_6_fu_341_p2(15 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2870_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln415_10_reg_3082 <= add_ln415_10_fu_2324_p2;
                add_ln415_11_reg_3119 <= add_ln415_11_fu_2530_p2;
                add_ln415_8_reg_3011 <= add_ln415_8_fu_1974_p2;
                add_ln415_9_reg_3048 <= add_ln415_9_fu_2180_p2;
                and_ln416_1_reg_3054 <= and_ln416_1_fu_2200_p2;
                and_ln416_3_reg_3125 <= and_ln416_3_fu_2550_p2;
                and_ln781_2_reg_3088 <= and_ln781_2_fu_2432_p2;
                and_ln781_reg_3017 <= and_ln781_fu_2082_p2;
                and_ln786_1_reg_3076 <= and_ln786_1_fu_2280_p2;
                and_ln786_2_reg_3098 <= and_ln786_2_fu_2462_p2;
                and_ln786_3_reg_3147 <= and_ln786_3_fu_2630_p2;
                and_ln786_4_reg_3027 <= and_ln786_4_fu_2112_p2;
                and_ln786_5_reg_3032 <= and_ln786_5_fu_2130_p2;
                and_ln786_7_reg_3103 <= and_ln786_7_fu_2480_p2;
                icmp_ln768_1_reg_3071 <= icmp_ln768_1_fu_2246_p2;
                icmp_ln768_3_reg_3142 <= icmp_ln768_3_fu_2596_p2;
                icmp_ln879_3_reg_3065 <= icmp_ln879_3_fu_2240_p2;
                icmp_ln879_7_reg_3136 <= icmp_ln879_7_fu_2590_p2;
                or_ln340_1_reg_3037 <= or_ln340_1_fu_2136_p2;
                or_ln340_7_reg_3108 <= or_ln340_7_fu_2486_p2;
                tmp_26_reg_3042 <= acc_1_V_1_fu_1836_p2(14 downto 14);
                tmp_30_reg_3060 <= add_ln415_9_fu_2180_p2(7 downto 7);
                tmp_40_reg_3113 <= acc_3_V_1_fu_1930_p2(14 downto 14);
                tmp_44_reg_3131 <= add_ln415_11_fu_2530_p2(7 downto 7);
                xor_ln785_1_reg_3022 <= xor_ln785_1_fu_2100_p2;
                xor_ln785_5_reg_3093 <= xor_ln785_5_fu_2450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln106_reg_2870 <= icmp_ln106_fu_1060_p2;
                icmp_ln106_reg_2870_pp0_iter1_reg <= icmp_ln106_reg_2870;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln106_reg_2870_pp0_iter2_reg <= icmp_ln106_reg_2870_pp0_iter1_reg;
                icmp_ln106_reg_2870_pp0_iter3_reg <= icmp_ln106_reg_2870_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_6_reg_2914 <= tmp_6_fu_1098_p1(1 downto 1);
                tmp_data_0_V_reg_2879 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_2888 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_2896 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_2901 <= data_V_data_3_V_dout;
                trunc_ln708_6_reg_2909 <= trunc_ln708_6_fu_1088_p1(7 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, icmp_ln106_fu_1060_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln106_fu_1060_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln106_fu_1060_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_0_V_1_fu_1830_p2 <= std_logic_vector(unsigned(acc_0_V_fu_1810_p2) + unsigned(sext_ln1118_17_fu_1715_p1));
    acc_0_V_fu_1810_p2 <= std_logic_vector(unsigned(add_ln415_1_reg_2934) + unsigned(sext_ln1192_fu_1753_p1));
    acc_1_V_1_fu_1836_p2 <= std_logic_vector(unsigned(acc_1_V_fu_1815_p2) + unsigned(sext_ln1118_18_fu_1730_p1));
    acc_1_V_fu_1815_p2 <= std_logic_vector(unsigned(add_ln415_2_fu_1697_p2) + unsigned(sext_ln1192_2_fu_1771_p1));
    acc_2_V_1_fu_1660_p2 <= std_logic_vector(unsigned(acc_2_V_fu_1608_p2) + unsigned(sext_ln1118_10_fu_1335_p1));
    acc_2_V_2_fu_1676_p2 <= std_logic_vector(signed(sext_ln703_fu_1666_p1) + signed(sext_ln1118_16_fu_1451_p1));
        acc_2_V_3_fu_1821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_2_V_2_reg_3005),16));

    acc_2_V_4_fu_1862_p2 <= std_logic_vector(signed(acc_2_V_3_fu_1821_p1) + signed(sext_ln415_13_fu_1734_p1));
    acc_2_V_5_fu_1914_p3 <= 
        ap_const_lv16_8000 when (and_ln786_fu_1882_p2(0) = '1') else 
        acc_2_V_4_fu_1862_p2;
    acc_2_V_fu_1608_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(sext_ln1118_5_fu_1213_p1));
    acc_3_V_1_fu_1930_p2 <= std_logic_vector(unsigned(acc_3_V_fu_1824_p2) + unsigned(sext_ln1192_6_fu_1749_p1));
    acc_3_V_fu_1824_p2 <= std_logic_vector(unsigned(add_ln415_3_fu_1709_p2) + unsigned(sext_ln1192_5_fu_1806_p1));
    add_ln106_fu_1066_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_322) + unsigned(ap_const_lv10_1));
    add_ln1118_fu_1269_p2 <= std_logic_vector(signed(sext_ln1118_7_fu_1250_p1) + signed(sext_ln1118_8_fu_1261_p1));
    add_ln1192_12_fu_1848_p2 <= std_logic_vector(signed(sext_ln703_2_fu_1842_p1) + signed(sext_ln703_3_fu_1845_p1));
    add_ln1192_14_fu_1670_p2 <= std_logic_vector(signed(sext_ln415_6_fu_1372_p1) + signed(sext_ln415_2_fu_1227_p1));
    add_ln1192_15_fu_1778_p2 <= std_logic_vector(unsigned(zext_ln1116_fu_1688_p1) + unsigned(zext_ln1118_2_fu_1682_p1));
    add_ln1192_16_fu_1800_p2 <= std_logic_vector(unsigned(zext_ln1192_2_fu_1796_p1) + unsigned(sext_ln1192_3_fu_1775_p1));
    add_ln1192_1_fu_1620_p2 <= std_logic_vector(unsigned(zext_ln1118_3_fu_1297_p1) + unsigned(zext_ln1118_fu_1139_p1));
    add_ln1192_2_fu_1638_p2 <= std_logic_vector(unsigned(zext_ln1192_fu_1634_p1) + unsigned(add_ln1192_fu_1614_p2));
    add_ln1192_3_fu_1756_p2 <= std_logic_vector(signed(ap_const_lv12_F40) + signed(sext_ln415_4_fu_1685_p1));
    add_ln1192_5_fu_1644_p2 <= std_logic_vector(unsigned(zext_ln708_fu_1319_p1) + unsigned(zext_ln1118_1_fu_1171_p1));
    add_ln1192_6_fu_1654_p2 <= std_logic_vector(unsigned(zext_ln1192_1_fu_1650_p1) + unsigned(sext_ln415_1_fu_1159_p1));
    add_ln1192_7_fu_1765_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_1762_p1) + signed(add_ln1192_3_fu_1756_p2));
    add_ln1192_fu_1614_p2 <= std_logic_vector(signed(sext_ln415_fu_1127_p1) + signed(sext_ln415_3_fu_1285_p1));
    add_ln415_10_fu_2324_p2 <= std_logic_vector(unsigned(trunc_ln708_16_fu_2294_p4) + unsigned(zext_ln415_10_fu_2320_p1));
    add_ln415_11_fu_2530_p2 <= std_logic_vector(unsigned(trunc_ln708_17_fu_2500_p4) + unsigned(zext_ln415_11_fu_2526_p1));
    add_ln415_1_fu_1417_p2 <= std_logic_vector(signed(sext_ln415_7_fu_1401_p1) + signed(zext_ln415_1_fu_1413_p1));
    add_ln415_2_fu_1697_p2 <= std_logic_vector(signed(sext_ln415_8_fu_1691_p1) + signed(zext_ln415_2_fu_1694_p1));
    add_ln415_3_fu_1709_p2 <= std_logic_vector(signed(sext_ln415_9_fu_1703_p1) + signed(zext_ln415_3_fu_1706_p1));
    add_ln415_4_fu_1511_p2 <= std_logic_vector(signed(sext_ln415_10_fu_1495_p1) + signed(zext_ln415_4_fu_1507_p1));
    add_ln415_5_fu_1724_p2 <= std_logic_vector(signed(sext_ln415_11_fu_1718_p1) + signed(zext_ln415_5_fu_1721_p1));
    add_ln415_6_fu_1561_p2 <= std_logic_vector(signed(sext_ln415_12_fu_1545_p1) + signed(zext_ln415_6_fu_1557_p1));
    add_ln415_7_fu_1743_p2 <= std_logic_vector(signed(sext_ln415_14_fu_1737_p1) + signed(zext_ln415_7_fu_1740_p1));
    add_ln415_8_fu_1974_p2 <= std_logic_vector(unsigned(trunc_ln708_14_fu_1944_p4) + unsigned(zext_ln415_8_fu_1970_p1));
    add_ln415_9_fu_2180_p2 <= std_logic_vector(unsigned(trunc_ln708_15_fu_2150_p4) + unsigned(zext_ln415_9_fu_2176_p1));
    add_ln415_fu_1329_p2 <= std_logic_vector(signed(sext_ln415_5_fu_1323_p1) + signed(zext_ln415_fu_1326_p1));
    and_ln416_1_fu_2200_p2 <= (xor_ln416_1_fu_2194_p2 and tmp_27_fu_2160_p3);
    and_ln416_2_fu_2344_p2 <= (xor_ln416_2_fu_2338_p2 and tmp_35_fu_2304_p3);
    and_ln416_3_fu_2550_p2 <= (xor_ln416_3_fu_2544_p2 and tmp_41_fu_2510_p3);
    and_ln416_fu_1994_p2 <= (xor_ln416_fu_1988_p2 and tmp_19_fu_1954_p3);
    and_ln779_1_fu_2266_p2 <= (xor_ln779_1_fu_2260_p2 and icmp_ln879_2_fu_2224_p2);
    and_ln779_2_fu_2418_p2 <= (xor_ln779_2_fu_2412_p2 and icmp_ln879_4_fu_2368_p2);
    and_ln779_3_fu_2616_p2 <= (xor_ln779_3_fu_2610_p2 and icmp_ln879_6_fu_2574_p2);
    and_ln779_fu_2068_p2 <= (xor_ln779_fu_2062_p2 and icmp_ln879_fu_2018_p2);
    and_ln781_1_fu_2671_p2 <= (icmp_ln879_3_reg_3065 and and_ln416_1_reg_3054);
    and_ln781_2_fu_2432_p2 <= (icmp_ln879_5_fu_2384_p2 and and_ln416_2_fu_2344_p2);
    and_ln781_3_fu_2788_p2 <= (icmp_ln879_7_reg_3136 and and_ln416_3_reg_3125);
    and_ln781_fu_2082_p2 <= (icmp_ln879_1_fu_2034_p2 and and_ln416_fu_1994_p2);
    and_ln785_1_fu_2691_p2 <= (xor_ln785_3_fu_2686_p2 and or_ln785_1_fu_2681_p2);
    and_ln785_2_fu_2456_p2 <= (xor_ln785_5_fu_2450_p2 and or_ln785_2_fu_2444_p2);
    and_ln785_3_fu_2808_p2 <= (xor_ln785_7_fu_2803_p2 and or_ln785_3_fu_2798_p2);
    and_ln785_fu_2106_p2 <= (xor_ln785_1_fu_2100_p2 and or_ln785_fu_2094_p2);
    and_ln786_1_fu_2280_p2 <= (tmp_30_fu_2206_p3 and select_ln416_1_fu_2272_p3);
    and_ln786_2_fu_2462_p2 <= (tmp_38_fu_2350_p3 and select_ln416_2_fu_2424_p3);
    and_ln786_3_fu_2630_p2 <= (tmp_44_fu_2556_p3 and select_ln416_3_fu_2622_p3);
    and_ln786_4_fu_2112_p2 <= (tmp_22_fu_2000_p3 and select_ln416_fu_2074_p3);
    and_ln786_5_fu_2130_p2 <= (xor_ln786_1_fu_2124_p2 and tmp_18_fu_1936_p3);
    and_ln786_6_fu_2708_p2 <= (xor_ln786_2_fu_2702_p2 and tmp_26_reg_3042);
    and_ln786_7_fu_2480_p2 <= (xor_ln786_3_fu_2474_p2 and tmp_34_fu_2286_p3);
    and_ln786_8_fu_2825_p2 <= (xor_ln786_4_fu_2819_p2 and tmp_40_reg_3113);
    and_ln786_fu_1882_p2 <= (xor_ln786_fu_1876_p2 and tmp_16_fu_1854_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln106_reg_2870, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg, io_acc_block_signal_op21, io_acc_block_signal_op331)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op331 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln106_reg_2870 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln106_reg_2870, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg, io_acc_block_signal_op21, io_acc_block_signal_op331)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op331 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln106_reg_2870 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln106_reg_2870, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg, io_acc_block_signal_op21, io_acc_block_signal_op331)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op331 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln106_reg_2870 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln106_reg_2870, io_acc_block_signal_op21)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln106_reg_2870 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(icmp_ln106_reg_2870_pp0_iter3_reg, io_acc_block_signal_op331)
    begin
                ap_block_state6_pp0_stage0_iter4 <= ((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op331 = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln106_fu_1060_p2)
    begin
        if ((icmp_ln106_fu_1060_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2870)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2870, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2870)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2870, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2870)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2870, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2870)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2870, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln106_fu_1060_p2 <= "1" when (indvar_flatten_reg_322 = ap_const_lv10_300) else "0";
    icmp_ln768_1_fu_2246_p2 <= "1" when (tmp_32_fu_2230_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_2_fu_2390_p2 <= "1" when (p_Result_9_2_fu_2374_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_3_fu_2596_p2 <= "1" when (tmp_46_fu_2580_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_fu_2040_p2 <= "1" when (tmp_24_fu_2024_p4 = ap_const_lv3_0) else "0";
    icmp_ln879_1_fu_2034_p2 <= "1" when (tmp_24_fu_2024_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_2_fu_2224_p2 <= "1" when (tmp_31_fu_2214_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_3_fu_2240_p2 <= "1" when (tmp_32_fu_2230_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_4_fu_2368_p2 <= "1" when (p_Result_8_2_fu_2358_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_5_fu_2384_p2 <= "1" when (p_Result_9_2_fu_2374_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_6_fu_2574_p2 <= "1" when (tmp_45_fu_2564_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_7_fu_2590_p2 <= "1" when (tmp_46_fu_2580_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_fu_2018_p2 <= "1" when (tmp_23_fu_2008_p4 = ap_const_lv2_3) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op21 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op331 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    mul_ln1118_1_fu_336_p1 <= tmp_data_0_V_reg_2879;
    mul_ln1118_1_fu_336_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv13_B) * signed(mul_ln1118_1_fu_336_p1))), 13));
    mul_ln1118_2_fu_338_p1 <= tmp_data_1_V_reg_2888;
    mul_ln1118_2_fu_338_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv13_1FF3) * signed(mul_ln1118_2_fu_338_p1))), 13));
    mul_ln1118_3_fu_337_p1 <= sext_ln1116_fu_1384_p1(8 - 1 downto 0);
    mul_ln1118_3_fu_337_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv16_75) * signed(mul_ln1118_3_fu_337_p1))), 16));
    mul_ln1118_4_fu_335_p1 <= sext_ln1116_fu_1384_p1(8 - 1 downto 0);
    mul_ln1118_4_fu_335_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv16_FF8E) * signed(mul_ln1118_4_fu_335_p1))), 16));
    mul_ln1118_5_fu_346_p1 <= sext_ln1116_fu_1384_p1(8 - 1 downto 0);
    mul_ln1118_5_fu_346_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv16_5C) * signed(mul_ln1118_5_fu_346_p1))), 16));
    mul_ln1118_6_fu_341_p1 <= sext_ln1116_fu_1384_p1(8 - 1 downto 0);
    mul_ln1118_6_fu_341_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv16_5A) * signed(mul_ln1118_6_fu_341_p1))), 16));
    mul_ln1118_7_fu_347_p1 <= sext_ln1118_13_fu_1477_p1(8 - 1 downto 0);
    mul_ln1118_7_fu_347_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_31) * signed(mul_ln1118_7_fu_347_p1))), 15));
    mul_ln1118_8_fu_348_p1 <= sext_ln1118_13_fu_1477_p1(8 - 1 downto 0);
    mul_ln1118_8_fu_348_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FD2) * signed(mul_ln1118_8_fu_348_p1))), 15));
    mul_ln1118_9_fu_333_p1 <= tmp_data_3_V_reg_2901;
    mul_ln1118_9_fu_333_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv14_3FEB) * signed(mul_ln1118_9_fu_333_p1))), 14));
    mul_ln1118_fu_342_p1 <= tmp_data_0_V_reg_2879;
    mul_ln1118_fu_342_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_17) * signed(mul_ln1118_fu_342_p1))), 14));
    or_ln1192_1_fu_1784_p3 <= (ap_const_lv3_4 & add_ln1192_15_fu_1778_p2);
    or_ln340_10_fu_2830_p2 <= (and_ln786_8_fu_2825_p2 or and_ln785_3_fu_2808_p2);
    or_ln340_11_fu_2836_p2 <= (xor_ln785_7_fu_2803_p2 or and_ln786_3_reg_3147);
    or_ln340_12_fu_2841_p2 <= (or_ln340_11_fu_2836_p2 or and_ln781_3_fu_2788_p2);
    or_ln340_1_fu_2136_p2 <= (and_ln786_5_fu_2130_p2 or and_ln785_fu_2106_p2);
    or_ln340_2_fu_2636_p2 <= (xor_ln785_1_reg_3022 or and_ln786_4_reg_3027);
    or_ln340_3_fu_2640_p2 <= (or_ln340_2_fu_2636_p2 or and_ln781_reg_3017);
    or_ln340_4_fu_2713_p2 <= (and_ln786_6_fu_2708_p2 or and_ln785_1_fu_2691_p2);
    or_ln340_5_fu_2719_p2 <= (xor_ln785_3_fu_2686_p2 or and_ln786_1_reg_3076);
    or_ln340_6_fu_2724_p2 <= (or_ln340_5_fu_2719_p2 or and_ln781_1_fu_2671_p2);
    or_ln340_7_fu_2486_p2 <= (and_ln786_7_fu_2480_p2 or and_ln785_2_fu_2456_p2);
    or_ln340_8_fu_2753_p2 <= (xor_ln785_5_reg_3093 or and_ln786_2_reg_3098);
    or_ln340_9_fu_2757_p2 <= (or_ln340_8_fu_2753_p2 or and_ln781_2_reg_3088);
    or_ln340_fu_1900_p2 <= (xor_ln340_1_fu_1894_p2 or tmp_17_fu_1868_p3);
    or_ln785_1_fu_2681_p2 <= (xor_ln785_2_fu_2675_p2 or tmp_30_reg_3060);
    or_ln785_2_fu_2444_p2 <= (xor_ln785_4_fu_2438_p2 or tmp_38_fu_2350_p3);
    or_ln785_3_fu_2798_p2 <= (xor_ln785_6_fu_2792_p2 or tmp_44_reg_3131);
    or_ln785_fu_2094_p2 <= (xor_ln785_fu_2088_p2 or tmp_22_fu_2000_p3);
    or_ln786_1_fu_2697_p2 <= (and_ln786_1_reg_3076 or and_ln781_1_fu_2671_p2);
    or_ln786_2_fu_2468_p2 <= (and_ln786_2_fu_2462_p2 or and_ln781_2_fu_2432_p2);
    or_ln786_3_fu_2814_p2 <= (and_ln786_3_reg_3147 or and_ln781_3_fu_2788_p2);
    or_ln786_fu_2118_p2 <= (and_ln786_4_fu_2112_p2 or and_ln781_fu_2082_p2);
    or_ln_fu_1626_p3 <= (ap_const_lv4_8 & add_ln1192_1_fu_1620_p2);
    p_Result_8_2_fu_2358_p4 <= select_ln340_1_fu_1922_p3(15 downto 13);
    p_Result_9_2_fu_2374_p4 <= select_ln340_1_fu_1922_p3(15 downto 12);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= 
        select_ln340_2_fu_2645_p3 when (or_ln340_3_fu_2640_p2(0) = '1') else 
        select_ln388_fu_2651_p3;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= 
        select_ln340_4_fu_2730_p3 when (or_ln340_6_fu_2724_p2(0) = '1') else 
        select_ln388_1_fu_2737_p3;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= 
        select_ln340_6_fu_2762_p3 when (or_ln340_9_fu_2757_p2(0) = '1') else 
        select_ln388_2_fu_2768_p3;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= 
        select_ln340_8_fu_2847_p3 when (or_ln340_12_fu_2841_p2(0) = '1') else 
        select_ln388_3_fu_2854_p3;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2870_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2870_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_1_fu_1922_p3 <= 
        select_ln340_fu_1906_p3 when (or_ln340_fu_1900_p2(0) = '1') else 
        acc_2_V_5_fu_1914_p3;
    select_ln340_2_fu_2645_p3 <= 
        ap_const_lv8_7F when (or_ln340_1_reg_3037(0) = '1') else 
        add_ln415_8_reg_3011;
    select_ln340_4_fu_2730_p3 <= 
        ap_const_lv8_7F when (or_ln340_4_fu_2713_p2(0) = '1') else 
        add_ln415_9_reg_3048;
    select_ln340_6_fu_2762_p3 <= 
        ap_const_lv8_7F when (or_ln340_7_reg_3108(0) = '1') else 
        add_ln415_10_reg_3082;
    select_ln340_8_fu_2847_p3 <= 
        ap_const_lv8_7F when (or_ln340_10_fu_2830_p2(0) = '1') else 
        add_ln415_11_reg_3119;
    select_ln340_fu_1906_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_fu_1888_p2(0) = '1') else 
        acc_2_V_4_fu_1862_p2;
    select_ln388_1_fu_2737_p3 <= 
        ap_const_lv8_80 when (and_ln786_6_fu_2708_p2(0) = '1') else 
        add_ln415_9_reg_3048;
    select_ln388_2_fu_2768_p3 <= 
        ap_const_lv8_80 when (and_ln786_7_reg_3103(0) = '1') else 
        add_ln415_10_reg_3082;
    select_ln388_3_fu_2854_p3 <= 
        ap_const_lv8_80 when (and_ln786_8_fu_2825_p2(0) = '1') else 
        add_ln415_11_reg_3119;
    select_ln388_fu_2651_p3 <= 
        ap_const_lv8_80 when (and_ln786_5_reg_3032(0) = '1') else 
        add_ln415_8_reg_3011;
    select_ln416_1_fu_2272_p3 <= 
        and_ln779_1_fu_2266_p2 when (and_ln416_1_fu_2200_p2(0) = '1') else 
        icmp_ln879_3_fu_2240_p2;
    select_ln416_2_fu_2424_p3 <= 
        and_ln779_2_fu_2418_p2 when (and_ln416_2_fu_2344_p2(0) = '1') else 
        icmp_ln879_5_fu_2384_p2;
    select_ln416_3_fu_2622_p3 <= 
        and_ln779_3_fu_2616_p2 when (and_ln416_3_fu_2550_p2(0) = '1') else 
        icmp_ln879_7_fu_2590_p2;
    select_ln416_fu_2074_p3 <= 
        and_ln779_fu_2068_p2 when (and_ln416_fu_1994_p2(0) = '1') else 
        icmp_ln879_1_fu_2034_p2;
    select_ln777_1_fu_2666_p3 <= 
        icmp_ln879_3_reg_3065 when (and_ln416_1_reg_3054(0) = '1') else 
        icmp_ln768_1_reg_3071;
    select_ln777_2_fu_2396_p3 <= 
        icmp_ln879_5_fu_2384_p2 when (and_ln416_2_fu_2344_p2(0) = '1') else 
        icmp_ln768_2_fu_2390_p2;
    select_ln777_3_fu_2783_p3 <= 
        icmp_ln879_7_reg_3136 when (and_ln416_3_reg_3125(0) = '1') else 
        icmp_ln768_3_reg_3142;
    select_ln777_fu_2046_p3 <= 
        icmp_ln879_1_fu_2034_p2 when (and_ln416_fu_1994_p2(0) = '1') else 
        icmp_ln768_fu_2040_p2;
        sext_ln1116_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_2_V_reg_2896),16));

        sext_ln1118_10_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_fu_1329_p2),12));

        sext_ln1118_11_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_1339_p3),13));

        sext_ln1118_13_fu_1477_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_3_V_reg_2901),15));

        sext_ln1118_14_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_3_V_reg_2901),11));

        sext_ln1118_15_fu_1574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_1567_p3),11));

        sext_ln1118_16_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1441_p4),15));

        sext_ln1118_17_fu_1715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_4_reg_2959),15));

        sext_ln1118_18_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_5_fu_1724_p2),15));

        sext_ln1118_2_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_0_V_reg_2879),9));

        sext_ln1118_3_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1175_p3),13));

        sext_ln1118_4_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_1186_p3),13));

        sext_ln1118_5_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2_fu_1203_p4),12));

        sext_ln1118_7_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1243_p3),12));

        sext_ln1118_8_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1254_p3),12));

        sext_ln1118_9_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1254_p3),13));

        sext_ln1192_1_fu_1762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_6_reg_2995),12));

        sext_ln1192_2_fu_1771_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_7_fu_1765_p2),15));

        sext_ln1192_3_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_14_reg_3000),13));

        sext_ln1192_4_fu_1792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln1192_1_fu_1784_p3),7));

        sext_ln1192_5_fu_1806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_16_fu_1800_p2),15));

        sext_ln1192_6_fu_1749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_7_fu_1743_p2),15));

        sext_ln1192_fu_1753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_2_reg_2990),15));

        sext_ln415_10_fu_1495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_fu_1485_p4),14));

        sext_ln415_11_fu_1718_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_11_reg_2964),14));

        sext_ln415_12_fu_1545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_12_fu_1535_p4),13));

        sext_ln415_13_fu_1734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_6_reg_2974),16));

        sext_ln415_14_fu_1737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_13_reg_2980),10));

        sext_ln415_1_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_1_fu_1149_p4),8));

        sext_ln415_2_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_3_fu_1217_p4),12));

        sext_ln415_3_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_4_fu_1275_p4),13));

        sext_ln415_4_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_5_reg_2924),12));

        sext_ln415_5_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_6_reg_2909),7));

        sext_ln415_6_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_7_fu_1362_p4),12));

        sext_ln415_7_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_8_fu_1391_p4),15));

        sext_ln415_8_fu_1691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_9_reg_2939),15));

        sext_ln415_9_fu_1703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_reg_2949),15));

        sext_ln415_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_1117_p4),13));

        sext_ln703_2_fu_1842_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_2_V_2_reg_3005),17));

        sext_ln703_3_fu_1845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_6_reg_2974),17));

        sext_ln703_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_2_V_1_fu_1660_p2),15));

    shl_ln1118_1_fu_1186_p3 <= (tmp_data_0_V_reg_2879 & ap_const_lv2_0);
    shl_ln1118_2_fu_1243_p3 <= (tmp_data_1_V_reg_2888 & ap_const_lv3_0);
    shl_ln1118_3_fu_1254_p3 <= (tmp_data_1_V_reg_2888 & ap_const_lv1_0);
    shl_ln1118_4_fu_1339_p3 <= (tmp_data_1_V_reg_2888 & ap_const_lv4_0);
    shl_ln1118_5_fu_1567_p3 <= (tmp_data_3_V_reg_2901 & ap_const_lv2_0);
    shl_ln_fu_1175_p3 <= (tmp_data_0_V_reg_2879 & ap_const_lv4_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_1_fu_1197_p2 <= std_logic_vector(signed(sext_ln1118_4_fu_1193_p1) - signed(sext_ln1118_3_fu_1182_p1));
    sub_ln1118_2_fu_1350_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_11_fu_1346_p1));
    sub_ln1118_3_fu_1356_p2 <= std_logic_vector(unsigned(sub_ln1118_2_fu_1350_p2) - unsigned(sext_ln1118_9_fu_1265_p1));
    sub_ln1118_4_fu_1578_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(sext_ln1118_15_fu_1574_p1));
    sub_ln1118_5_fu_1584_p2 <= std_logic_vector(unsigned(sub_ln1118_4_fu_1578_p2) - unsigned(sext_ln1118_14_fu_1482_p1));
    sub_ln1118_fu_1143_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sext_ln1118_2_fu_1114_p1));
    tmp_10_fu_1441_p4 <= mul_ln1118_5_fu_346_p2(15 downto 2);
    tmp_12_fu_1499_p3 <= mul_ln1118_7_fu_347_p2(1 downto 1);
    tmp_14_fu_1549_p3 <= mul_ln1118_9_fu_333_p2(1 downto 1);
    tmp_16_fu_1854_p3 <= add_ln1192_12_fu_1848_p2(16 downto 16);
    tmp_17_fu_1868_p3 <= acc_2_V_4_fu_1862_p2(15 downto 15);
    tmp_18_fu_1936_p3 <= acc_0_V_1_fu_1830_p2(14 downto 14);
    tmp_19_fu_1954_p3 <= acc_0_V_1_fu_1830_p2(11 downto 11);
    tmp_20_fu_1962_p3 <= acc_0_V_1_fu_1830_p2(3 downto 3);
    tmp_21_fu_1980_p3 <= add_ln415_8_fu_1974_p2(7 downto 7);
    tmp_22_fu_2000_p3 <= add_ln415_8_fu_1974_p2(7 downto 7);
    tmp_23_fu_2008_p4 <= acc_0_V_1_fu_1830_p2(14 downto 13);
    tmp_24_fu_2024_p4 <= acc_0_V_1_fu_1830_p2(14 downto 12);
    tmp_25_fu_2054_p3 <= acc_0_V_1_fu_1830_p2(12 downto 12);
    tmp_27_fu_2160_p3 <= acc_1_V_1_fu_1836_p2(11 downto 11);
    tmp_28_fu_2168_p3 <= acc_1_V_1_fu_1836_p2(3 downto 3);
    tmp_29_fu_2186_p3 <= add_ln415_9_fu_2180_p2(7 downto 7);
    tmp_2_fu_1163_p3 <= sub_ln1118_fu_1143_p2(1 downto 1);
    tmp_30_fu_2206_p3 <= add_ln415_9_fu_2180_p2(7 downto 7);
    tmp_31_fu_2214_p4 <= acc_1_V_1_fu_1836_p2(14 downto 13);
    tmp_32_fu_2230_p4 <= acc_1_V_1_fu_1836_p2(14 downto 12);
    tmp_33_fu_2252_p3 <= acc_1_V_1_fu_1836_p2(12 downto 12);
    tmp_34_fu_2286_p3 <= select_ln340_1_fu_1922_p3(15 downto 15);
    tmp_35_fu_2304_p3 <= select_ln340_1_fu_1922_p3(11 downto 11);
    tmp_36_fu_2312_p3 <= select_ln340_1_fu_1922_p3(3 downto 3);
    tmp_37_fu_2330_p3 <= add_ln415_10_fu_2324_p2(7 downto 7);
    tmp_38_fu_2350_p3 <= add_ln415_10_fu_2324_p2(7 downto 7);
    tmp_39_fu_2404_p3 <= select_ln340_1_fu_1922_p3(12 downto 12);
    tmp_41_fu_2510_p3 <= acc_3_V_1_fu_1930_p2(11 downto 11);
    tmp_42_fu_2518_p3 <= acc_3_V_1_fu_1930_p2(3 downto 3);
    tmp_43_fu_2536_p3 <= add_ln415_11_fu_2530_p2(7 downto 7);
    tmp_44_fu_2556_p3 <= add_ln415_11_fu_2530_p2(7 downto 7);
    tmp_45_fu_2564_p4 <= acc_3_V_1_fu_1930_p2(14 downto 13);
    tmp_46_fu_2580_p4 <= acc_3_V_1_fu_1930_p2(14 downto 12);
    tmp_47_fu_2602_p3 <= acc_3_V_1_fu_1930_p2(12 downto 12);
    tmp_4_fu_1289_p3 <= add_ln1118_fu_1269_p2(1 downto 1);
    tmp_5_fu_1311_p3 <= mul_ln1118_2_fu_338_p2(1 downto 1);
    tmp_6_fu_1098_p1 <= data_V_data_1_V_dout;
    tmp_8_fu_1405_p3 <= mul_ln1118_3_fu_337_p2(1 downto 1);
    tmp_fu_1131_p3 <= mul_ln1118_fu_342_p2(1 downto 1);
    trunc_ln708_10_fu_1485_p4 <= mul_ln1118_7_fu_347_p2(14 downto 2);
    trunc_ln708_12_fu_1535_p4 <= mul_ln1118_9_fu_333_p2(13 downto 2);
    trunc_ln708_14_fu_1944_p4 <= acc_0_V_1_fu_1830_p2(11 downto 4);
    trunc_ln708_15_fu_2150_p4 <= acc_1_V_1_fu_1836_p2(11 downto 4);
    trunc_ln708_16_fu_2294_p4 <= select_ln340_1_fu_1922_p3(11 downto 4);
    trunc_ln708_17_fu_2500_p4 <= acc_3_V_1_fu_1930_p2(11 downto 4);
    trunc_ln708_1_fu_1149_p4 <= sub_ln1118_fu_1143_p2(8 downto 2);
    trunc_ln708_2_fu_1203_p4 <= sub_ln1118_1_fu_1197_p2(12 downto 2);
    trunc_ln708_3_fu_1217_p4 <= mul_ln1118_1_fu_336_p2(12 downto 2);
    trunc_ln708_4_fu_1275_p4 <= add_ln1118_fu_1269_p2(11 downto 2);
    trunc_ln708_6_fu_1088_p1 <= data_V_data_1_V_dout;
    trunc_ln708_7_fu_1362_p4 <= sub_ln1118_3_fu_1356_p2(12 downto 2);
    trunc_ln708_8_fu_1391_p4 <= mul_ln1118_3_fu_337_p2(15 downto 2);
    trunc_ln_fu_1117_p4 <= mul_ln1118_fu_342_p2(13 downto 2);
    xor_ln340_1_fu_1894_p2 <= (tmp_16_fu_1854_p3 xor ap_const_lv1_1);
    xor_ln340_fu_1888_p2 <= (tmp_17_fu_1868_p3 xor tmp_16_fu_1854_p3);
    xor_ln416_1_fu_2194_p2 <= (tmp_29_fu_2186_p3 xor ap_const_lv1_1);
    xor_ln416_2_fu_2338_p2 <= (tmp_37_fu_2330_p3 xor ap_const_lv1_1);
    xor_ln416_3_fu_2544_p2 <= (tmp_43_fu_2536_p3 xor ap_const_lv1_1);
    xor_ln416_fu_1988_p2 <= (tmp_21_fu_1980_p3 xor ap_const_lv1_1);
    xor_ln779_1_fu_2260_p2 <= (tmp_33_fu_2252_p3 xor ap_const_lv1_1);
    xor_ln779_2_fu_2412_p2 <= (tmp_39_fu_2404_p3 xor ap_const_lv1_1);
    xor_ln779_3_fu_2610_p2 <= (tmp_47_fu_2602_p3 xor ap_const_lv1_1);
    xor_ln779_fu_2062_p2 <= (tmp_25_fu_2054_p3 xor ap_const_lv1_1);
    xor_ln785_1_fu_2100_p2 <= (tmp_18_fu_1936_p3 xor ap_const_lv1_1);
    xor_ln785_2_fu_2675_p2 <= (select_ln777_1_fu_2666_p3 xor ap_const_lv1_1);
    xor_ln785_3_fu_2686_p2 <= (tmp_26_reg_3042 xor ap_const_lv1_1);
    xor_ln785_4_fu_2438_p2 <= (select_ln777_2_fu_2396_p3 xor ap_const_lv1_1);
    xor_ln785_5_fu_2450_p2 <= (tmp_34_fu_2286_p3 xor ap_const_lv1_1);
    xor_ln785_6_fu_2792_p2 <= (select_ln777_3_fu_2783_p3 xor ap_const_lv1_1);
    xor_ln785_7_fu_2803_p2 <= (tmp_40_reg_3113 xor ap_const_lv1_1);
    xor_ln785_fu_2088_p2 <= (select_ln777_fu_2046_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_2124_p2 <= (or_ln786_fu_2118_p2 xor ap_const_lv1_1);
    xor_ln786_2_fu_2702_p2 <= (or_ln786_1_fu_2697_p2 xor ap_const_lv1_1);
    xor_ln786_3_fu_2474_p2 <= (or_ln786_2_fu_2468_p2 xor ap_const_lv1_1);
    xor_ln786_4_fu_2819_p2 <= (or_ln786_3_fu_2814_p2 xor ap_const_lv1_1);
    xor_ln786_fu_1876_p2 <= (tmp_17_fu_1868_p3 xor ap_const_lv1_1);
    zext_ln1116_fu_1688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_reg_2929),2));
    zext_ln1118_1_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1163_p3),2));
    zext_ln1118_2_fu_1682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2919),2));
    zext_ln1118_3_fu_1297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1289_p3),2));
    zext_ln1118_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1131_p3),2));
    zext_ln1192_1_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_5_fu_1644_p2),8));
    zext_ln1192_2_fu_1796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1192_4_fu_1792_p1),13));
    zext_ln1192_fu_1634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_1626_p3),13));
    zext_ln415_10_fu_2320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_2312_p3),8));
    zext_ln415_11_fu_2526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_2518_p3),8));
    zext_ln415_1_fu_1413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1405_p3),15));
    zext_ln415_2_fu_1694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_2944),15));
    zext_ln415_3_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_2954),15));
    zext_ln415_4_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1499_p3),14));
    zext_ln415_5_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_2969),14));
    zext_ln415_6_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_1549_p3),13));
    zext_ln415_7_fu_1740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_reg_2985),10));
    zext_ln415_8_fu_1970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_1962_p3),8));
    zext_ln415_9_fu_2176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_2168_p3),8));
    zext_ln415_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_2914),7));
    zext_ln708_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1311_p3),2));
end behav;

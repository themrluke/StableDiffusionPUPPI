-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config51_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config51_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv15_35 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110101";
    constant ap_const_lv13_1FF5 : STD_LOGIC_VECTOR (12 downto 0) := "1111111110101";
    constant ap_const_lv14_1A : STD_LOGIC_VECTOR (13 downto 0) := "00000000011010";
    constant ap_const_lv15_32 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110010";
    constant ap_const_lv15_7FCD : STD_LOGIC_VECTOR (14 downto 0) := "111111111001101";
    constant ap_const_lv15_7FDA : STD_LOGIC_VECTOR (14 downto 0) := "111111111011010";
    constant ap_const_lv15_29 : STD_LOGIC_VECTOR (14 downto 0) := "000000000101001";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln106_reg_2460 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal icmp_ln106_reg_2460_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_280 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln106_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op21 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal io_acc_block_signal_op305 : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln106_reg_2460_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_reg_2460_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln106_fu_811_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_data_0_V_reg_2469 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_1_V_reg_2476 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_2_V_reg_2485 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_3_V_reg_2494 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_3_V_reg_2494_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_1_reg_2502 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_2507 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_2512 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2517 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_7_reg_2522 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_8_reg_2527 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_9_reg_2533 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_s_reg_2538 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_reg_2543 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_10_reg_2548 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_14_reg_2553 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_11_reg_2558 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_12_reg_2564 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_reg_2569 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_fu_1302_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_reg_2574 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_6_fu_1324_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_6_reg_2579 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_8_fu_1330_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_8_reg_2584 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_11_fu_1342_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_11_reg_2589 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_17_fu_1348_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_17_reg_2594 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_reg_2600 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_fu_1593_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_reg_2606 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_reg_2612 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1619_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2618 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_2623 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_1659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_reg_2629 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_reg_2634 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_5_fu_1737_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_5_reg_2640 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_1_fu_1837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_1_reg_2646 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_3_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_3_reg_2651 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_reg_2656 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_5_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_5_reg_2661 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_reg_2666 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_2671 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_6_fu_1935_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_6_reg_2677 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_2_fu_1955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_2_reg_2683 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1961_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_2689 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_1987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_2694 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_fu_1993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_reg_2700 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_fu_2027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_reg_2705 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_2711 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_7_fu_2071_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_7_reg_2717 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_3_fu_2091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_3_reg_2723 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_2097_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2729 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_reg_2734 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_fu_2129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_reg_2740 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_reg_2745 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1118_fu_292_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_1_fu_293_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_2_fu_296_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_5_fu_300_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_16_fu_1205_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_3_fu_303_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_6_fu_305_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_4_fu_306_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_1_fu_833_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_843_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_292_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_fu_863_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_1_fu_885_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_fu_888_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_1_fu_293_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_2_fu_897_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_fu_911_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_2_fu_296_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_3_fu_923_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_937_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_956_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_5_fu_963_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_4_fu_953_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1118_fu_967_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_4_fu_973_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1118_1_fu_995_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_6_fu_1002_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_2_fu_1012_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1118_fu_1006_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_7_fu_1019_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_1_fu_1023_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_5_fu_1029_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_1043_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_3_fu_303_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_6_fu_1055_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_11_fu_1069_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1118_3_fu_1088_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_4_fu_1099_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_10_fu_1095_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_11_fu_1106_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1118_1_fu_1110_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_2_fu_1126_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_3_fu_1132_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_4_fu_306_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_12_fu_1158_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1118_5_fu_1170_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_14_fu_1177_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_9_fu_1085_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_4_fu_1181_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1118_5_fu_300_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_6_fu_305_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_15_fu_1238_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1118_6_fu_1250_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_17_fu_1257_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_7_fu_1267_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1118_5_fu_1261_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_18_fu_1274_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_6_fu_1278_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_fu_873_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_4_fu_983_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_6_fu_1065_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_3_fu_933_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1118_4_fu_1077_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_1_fu_945_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_4_fu_1314_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1192_1_fu_1320_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_3_fu_1308_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_5_fu_1039_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln415_2_fu_907_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1118_fu_919_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_3_fu_1051_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_10_fu_1336_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_5_fu_1166_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal acc_1_V_fu_891_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1118_6_fu_1246_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln415_8_fu_1369_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln415_1_fu_1372_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_2_fu_1375_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln415_9_fu_1385_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln415_2_fu_1388_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln415_3_fu_1391_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_12_fu_1404_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln415_3_fu_1407_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_4_fu_1410_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_8_fu_1420_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_20_fu_1427_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_7_fu_1431_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_17_fu_1437_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_2_fu_1357_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln708_fu_1354_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_1_fu_1451_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1192_fu_1457_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_2_fu_1461_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_12_fu_1360_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal acc_0_V_fu_1466_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_1_fu_1476_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_7_fu_1366_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1192_2_fu_1485_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_9_fu_1479_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_15_fu_1381_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_fu_1472_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_10_fu_1397_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_11_fu_1401_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_13_fu_1363_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_2_fu_1511_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_3_fu_1520_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_16_fu_1514_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_18_fu_1523_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_4_fu_1528_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_19_fu_1416_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_12_fu_1488_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal acc_3_V_fu_1494_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_fu_1447_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal acc_0_V_1_fu_1505_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1192_14_fu_1499_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_20_fu_1581_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_13_fu_1563_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_4_fu_1589_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_1599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1573_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1627_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1643_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_23_fu_1665_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_1673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_1679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_fu_1685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_19_fu_1531_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_26_fu_1725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_14_fu_1707_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_5_fu_1733_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_1743_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1717_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_1751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_1779_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln416_1_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_1789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_fu_1795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_fu_1537_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_30_fu_1809_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_1_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_1_fu_1823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_1_fu_1801_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1763_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_2_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_1_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_1_fu_1829_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_1_fu_1873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_1_fu_1861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_2_V_fu_1543_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_33_fu_1923_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_15_fu_1905_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_6_fu_1931_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_1941_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1915_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_2_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1977_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_fu_1999_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1969_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_2_fu_2007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_2_fu_2013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_2_fu_2019_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_3_V_1_fu_1549_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_40_fu_2059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_16_fu_2041_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_7_fu_2067_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_2077_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_2051_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_3_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_2113_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_fu_2135_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_2105_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_3_fu_2143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_3_fu_2149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_3_fu_2155_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_2169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_2178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_2184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_2189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_2174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_2200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_2205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_4_fu_2211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_2194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_2222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_2216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_2233_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_fu_2240_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln340_4_fu_2256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_2265_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_1_fu_2271_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_2_fu_2286_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_4_fu_2295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_2_fu_2301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_5_fu_2306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_2_fu_2291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_2_fu_2317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_2322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_6_fu_2328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_2_fu_2311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_2339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_2333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_2344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_2350_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_2_fu_2357_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_3_fu_2373_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_6_fu_2382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_3_fu_2388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_7_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_3_fu_2378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_3_fu_2404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_2409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_7_fu_2415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_3_fu_2398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_10_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_2420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_11_fu_2431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_2437_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_3_fu_2444_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_fu_805_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_280 <= add_ln106_fu_811_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_280 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2460_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln1192_11_reg_2589 <= add_ln1192_11_fu_1342_p2;
                add_ln1192_17_reg_2594 <= add_ln1192_17_fu_1348_p2;
                add_ln1192_6_reg_2579 <= add_ln1192_6_fu_1324_p2;
                add_ln1192_8_reg_2584 <= add_ln1192_8_fu_1330_p2;
                add_ln1192_reg_2574 <= add_ln1192_fu_1302_p2;
                tmp_13_reg_2543 <= sub_ln1118_4_fu_1181_p2(1 downto 1);
                tmp_14_reg_2553 <= mul_ln1118_5_fu_300_p2(1 downto 1);
                tmp_16_reg_2569 <= sub_ln1118_6_fu_1278_p2(1 downto 1);
                tmp_2_reg_2512 <= mul_ln1118_fu_292_p2(1 downto 1);
                tmp_9_reg_2517 <= add_ln1118_fu_967_p2(1 downto 1);
                trunc_ln708_10_reg_2548 <= mul_ln1118_5_fu_300_p2(14 downto 2);
                trunc_ln708_11_reg_2558 <= mul_ln1118_6_fu_305_p2(14 downto 2);
                trunc_ln708_12_reg_2564 <= sub_ln1118_6_fu_1278_p2(12 downto 2);
                trunc_ln708_7_reg_2522 <= add_ln1118_1_fu_1110_p2(13 downto 2);
                trunc_ln708_8_reg_2527 <= sub_ln1118_3_fu_1132_p2(13 downto 2);
                trunc_ln708_9_reg_2533 <= mul_ln1118_4_fu_306_p2(14 downto 2);
                trunc_ln708_s_reg_2538 <= sub_ln1118_4_fu_1181_p2(12 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2460_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln415_5_reg_2640 <= add_ln415_5_fu_1737_p2;
                add_ln415_6_reg_2677 <= add_ln415_6_fu_1935_p2;
                add_ln415_7_reg_2717 <= add_ln415_7_fu_2071_p2;
                add_ln415_reg_2606 <= add_ln415_fu_1593_p2;
                and_ln416_2_reg_2683 <= and_ln416_2_fu_1955_p2;
                and_ln416_3_reg_2723 <= and_ln416_3_fu_2091_p2;
                and_ln416_reg_2612 <= and_ln416_fu_1613_p2;
                and_ln781_1_reg_2646 <= and_ln781_1_fu_1837_p2;
                and_ln786_1_reg_2656 <= and_ln786_1_fu_1867_p2;
                and_ln786_2_reg_2705 <= and_ln786_2_fu_2027_p2;
                and_ln786_3_reg_2745 <= and_ln786_3_fu_2163_p2;
                and_ln786_5_reg_2661 <= and_ln786_5_fu_1885_p2;
                and_ln786_reg_2634 <= and_ln786_fu_1693_p2;
                icmp_ln768_2_reg_2700 <= icmp_ln768_2_fu_1993_p2;
                icmp_ln768_3_reg_2740 <= icmp_ln768_3_fu_2129_p2;
                icmp_ln768_reg_2629 <= icmp_ln768_fu_1659_p2;
                icmp_ln879_1_reg_2623 <= icmp_ln879_1_fu_1653_p2;
                icmp_ln879_3_reg_2694 <= icmp_ln879_3_fu_1987_p2;
                icmp_ln879_4_reg_2734 <= icmp_ln879_4_fu_2123_p2;
                or_ln340_3_reg_2666 <= or_ln340_3_fu_1891_p2;
                tmp_18_reg_2600 <= acc_0_V_1_fu_1505_p2(14 downto 14);
                tmp_22_reg_2618 <= add_ln415_fu_1593_p2(7 downto 7);
                tmp_31_reg_2671 <= acc_2_V_fu_1543_p2(13 downto 13);
                tmp_35_reg_2689 <= add_ln415_6_fu_1935_p2(7 downto 7);
                tmp_38_reg_2711 <= acc_3_V_1_fu_1549_p2(13 downto 13);
                tmp_42_reg_2729 <= add_ln415_7_fu_2071_p2(7 downto 7);
                xor_ln785_3_reg_2651 <= xor_ln785_3_fu_1855_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln106_reg_2460 <= icmp_ln106_fu_805_p2;
                icmp_ln106_reg_2460_pp0_iter1_reg <= icmp_ln106_reg_2460;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln106_reg_2460_pp0_iter2_reg <= icmp_ln106_reg_2460_pp0_iter1_reg;
                icmp_ln106_reg_2460_pp0_iter3_reg <= icmp_ln106_reg_2460_pp0_iter2_reg;
                tmp_data_3_V_reg_2494_pp0_iter2_reg <= tmp_data_3_V_reg_2494;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_5_reg_2507 <= tmp_5_fu_843_p1(1 downto 1);
                tmp_data_0_V_reg_2469 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_2476 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_2485 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_2494 <= data_V_data_3_V_dout;
                trunc_ln708_1_reg_2502 <= trunc_ln708_1_fu_833_p1(7 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, icmp_ln106_fu_805_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln106_fu_805_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln106_fu_805_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_0_V_1_fu_1505_p2 <= std_logic_vector(signed(sext_ln1192_fu_1472_p1) + signed(sext_ln415_10_fu_1397_p1));
    acc_0_V_fu_1466_p2 <= std_logic_vector(unsigned(add_ln1192_2_fu_1461_p2) + unsigned(sext_ln1118_12_fu_1360_p1));
    acc_1_V_fu_891_p2 <= std_logic_vector(signed(sext_ln415_1_fu_885_p1) + signed(zext_ln415_fu_888_p1));
    acc_2_V_fu_1543_p2 <= std_logic_vector(signed(sext_ln1118_19_fu_1416_p1) + signed(add_ln1192_12_fu_1488_p2));
    acc_3_V_1_fu_1549_p2 <= std_logic_vector(unsigned(acc_3_V_fu_1494_p2) + unsigned(sext_ln703_fu_1447_p1));
    acc_3_V_fu_1494_p2 <= std_logic_vector(signed(sext_ln1118_15_fu_1381_p1) + signed(add_ln1192_6_reg_2579));
    add_ln106_fu_811_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_280) + unsigned(ap_const_lv13_1));
    add_ln1118_1_fu_1110_p2 <= std_logic_vector(signed(sext_ln1118_10_fu_1095_p1) + signed(sext_ln1118_11_fu_1106_p1));
    add_ln1118_fu_967_p2 <= std_logic_vector(signed(sext_ln1118_5_fu_963_p1) + signed(sext_ln1118_4_fu_953_p1));
    add_ln1192_10_fu_1336_p2 <= std_logic_vector(unsigned(zext_ln1118_fu_919_p1) + unsigned(zext_ln1118_3_fu_1051_p1));
    add_ln1192_11_fu_1342_p2 <= std_logic_vector(unsigned(add_ln1192_10_fu_1336_p2) + unsigned(zext_ln1118_5_fu_1166_p1));
    add_ln1192_12_fu_1488_p2 <= std_logic_vector(unsigned(zext_ln1192_2_fu_1485_p1) + unsigned(add_ln1192_9_fu_1479_p2));
    add_ln1192_14_fu_1499_p2 <= std_logic_vector(signed(add_ln415_3_fu_1391_p2) + signed(acc_0_V_fu_1466_p2));
    add_ln1192_16_fu_1514_p2 <= std_logic_vector(signed(sext_ln415_11_fu_1401_p1) + signed(sext_ln1118_13_fu_1363_p1));
    add_ln1192_17_fu_1348_p2 <= std_logic_vector(unsigned(acc_1_V_fu_891_p2) + unsigned(zext_ln1118_6_fu_1246_p1));
    add_ln1192_18_fu_1523_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_1511_p1) + signed(trunc_ln708_11_reg_2558));
    add_ln1192_19_fu_1531_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_1520_p1) + signed(add_ln1192_16_fu_1514_p2));
    add_ln1192_1_fu_1451_p2 <= std_logic_vector(unsigned(zext_ln1118_2_fu_1357_p1) + unsigned(zext_ln708_fu_1354_p1));
    add_ln1192_2_fu_1461_p2 <= std_logic_vector(unsigned(zext_ln1192_fu_1457_p1) + unsigned(add_ln1192_reg_2574));
    add_ln1192_3_fu_1308_p2 <= std_logic_vector(signed(sext_ln415_6_fu_1065_p1) + signed(sext_ln415_3_fu_933_p1));
    add_ln1192_4_fu_1314_p2 <= std_logic_vector(unsigned(zext_ln1118_4_fu_1077_p1) + unsigned(zext_ln1118_1_fu_945_p1));
    add_ln1192_6_fu_1324_p2 <= std_logic_vector(unsigned(zext_ln1192_1_fu_1320_p1) + unsigned(add_ln1192_3_fu_1308_p2));
    add_ln1192_8_fu_1330_p2 <= std_logic_vector(signed(sext_ln415_5_fu_1039_p1) + signed(sext_ln415_2_fu_907_p1));
    add_ln1192_9_fu_1479_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_1476_p1) + signed(sext_ln415_7_fu_1366_p1));
    add_ln1192_fu_1302_p2 <= std_logic_vector(signed(sext_ln415_fu_873_p1) + signed(sext_ln415_4_fu_983_p1));
    add_ln415_2_fu_1375_p2 <= std_logic_vector(signed(sext_ln415_8_fu_1369_p1) + signed(zext_ln415_1_fu_1372_p1));
    add_ln415_3_fu_1391_p2 <= std_logic_vector(signed(sext_ln415_9_fu_1385_p1) + signed(zext_ln415_2_fu_1388_p1));
    add_ln415_4_fu_1410_p2 <= std_logic_vector(signed(sext_ln415_12_fu_1404_p1) + signed(zext_ln415_3_fu_1407_p1));
    add_ln415_5_fu_1737_p2 <= std_logic_vector(unsigned(trunc_ln708_14_fu_1707_p4) + unsigned(zext_ln415_5_fu_1733_p1));
    add_ln415_6_fu_1935_p2 <= std_logic_vector(unsigned(trunc_ln708_15_fu_1905_p4) + unsigned(zext_ln415_6_fu_1931_p1));
    add_ln415_7_fu_2071_p2 <= std_logic_vector(unsigned(trunc_ln708_16_fu_2041_p4) + unsigned(zext_ln415_7_fu_2067_p1));
    add_ln415_fu_1593_p2 <= std_logic_vector(unsigned(trunc_ln708_13_fu_1563_p4) + unsigned(zext_ln415_4_fu_1589_p1));
    add_ln703_fu_1537_p2 <= std_logic_vector(unsigned(add_ln1192_18_fu_1523_p2) + unsigned(sext_ln1192_4_fu_1528_p1));
    and_ln416_1_fu_1757_p2 <= (xor_ln416_1_fu_1751_p2 and tmp_25_fu_1717_p3);
    and_ln416_2_fu_1955_p2 <= (xor_ln416_2_fu_1949_p2 and tmp_32_fu_1915_p3);
    and_ln416_3_fu_2091_p2 <= (xor_ln416_3_fu_2085_p2 and tmp_39_fu_2051_p3);
    and_ln416_fu_1613_p2 <= (xor_ln416_fu_1607_p2 and tmp_19_fu_1573_p3);
    and_ln779_1_fu_1823_p2 <= (xor_ln779_1_fu_1817_p2 and tmp_29_fu_1771_p3);
    and_ln779_2_fu_2013_p2 <= (xor_ln779_2_fu_2007_p2 and tmp_36_fu_1969_p3);
    and_ln779_3_fu_2149_p2 <= (xor_ln779_3_fu_2143_p2 and tmp_43_fu_2105_p3);
    and_ln779_fu_1679_p2 <= (xor_ln779_fu_1673_p2 and icmp_ln879_fu_1637_p2);
    and_ln781_1_fu_1837_p2 <= (icmp_ln879_2_fu_1789_p2 and and_ln416_1_fu_1757_p2);
    and_ln781_2_fu_2291_p2 <= (icmp_ln879_3_reg_2694 and and_ln416_2_reg_2683);
    and_ln781_3_fu_2378_p2 <= (icmp_ln879_4_reg_2734 and and_ln416_3_reg_2723);
    and_ln781_fu_2174_p2 <= (icmp_ln879_1_reg_2623 and and_ln416_reg_2612);
    and_ln785_1_fu_1861_p2 <= (xor_ln785_3_fu_1855_p2 and or_ln785_1_fu_1849_p2);
    and_ln785_2_fu_2311_p2 <= (xor_ln785_5_fu_2306_p2 and or_ln785_2_fu_2301_p2);
    and_ln785_3_fu_2398_p2 <= (xor_ln785_7_fu_2393_p2 and or_ln785_3_fu_2388_p2);
    and_ln785_fu_2194_p2 <= (xor_ln785_1_fu_2189_p2 and or_ln785_fu_2184_p2);
    and_ln786_1_fu_1867_p2 <= (tmp_28_fu_1763_p3 and select_ln416_1_fu_1829_p3);
    and_ln786_2_fu_2027_p2 <= (tmp_35_fu_1961_p3 and select_ln416_2_fu_2019_p3);
    and_ln786_3_fu_2163_p2 <= (tmp_42_fu_2097_p3 and select_ln416_3_fu_2155_p3);
    and_ln786_4_fu_2211_p2 <= (xor_ln786_fu_2205_p2 and tmp_18_reg_2600);
    and_ln786_5_fu_1885_p2 <= (xor_ln786_1_fu_1879_p2 and tmp_24_fu_1699_p3);
    and_ln786_6_fu_2328_p2 <= (xor_ln786_2_fu_2322_p2 and tmp_31_reg_2671);
    and_ln786_7_fu_2415_p2 <= (xor_ln786_3_fu_2409_p2 and tmp_38_reg_2711);
    and_ln786_fu_1693_p2 <= (tmp_22_fu_1619_p3 and select_ln416_fu_1685_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln106_reg_2460, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg, io_acc_block_signal_op21, io_acc_block_signal_op305)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op305 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln106_reg_2460 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln106_reg_2460, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg, io_acc_block_signal_op21, io_acc_block_signal_op305)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op305 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln106_reg_2460 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln106_reg_2460, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg, io_acc_block_signal_op21, io_acc_block_signal_op305)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op305 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln106_reg_2460 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln106_reg_2460, io_acc_block_signal_op21)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln106_reg_2460 = ap_const_lv1_0) and (io_acc_block_signal_op21 = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(icmp_ln106_reg_2460_pp0_iter3_reg, io_acc_block_signal_op305)
    begin
                ap_block_state6_pp0_stage0_iter4 <= ((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op305 = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln106_fu_805_p2)
    begin
        if ((icmp_ln106_fu_805_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2460)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2460, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2460)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2460, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2460)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2460, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln106_reg_2460)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln106_reg_2460, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln106_fu_805_p2 <= "1" when (indvar_flatten_reg_280 = ap_const_lv13_1000) else "0";
    icmp_ln768_1_fu_1795_p2 <= "1" when (tmp_3_fu_1779_p4 = ap_const_lv2_0) else "0";
    icmp_ln768_2_fu_1993_p2 <= "1" when (tmp_6_fu_1977_p4 = ap_const_lv2_0) else "0";
    icmp_ln768_3_fu_2129_p2 <= "1" when (tmp_44_fu_2113_p4 = ap_const_lv2_0) else "0";
    icmp_ln768_fu_1659_p2 <= "1" when (tmp_4_fu_1643_p4 = ap_const_lv3_0) else "0";
    icmp_ln879_1_fu_1653_p2 <= "1" when (tmp_4_fu_1643_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_2_fu_1789_p2 <= "1" when (tmp_3_fu_1779_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_3_fu_1987_p2 <= "1" when (tmp_6_fu_1977_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_4_fu_2123_p2 <= "1" when (tmp_44_fu_2113_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_fu_1637_p2 <= "1" when (tmp_fu_1627_p4 = ap_const_lv2_3) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op21 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op305 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    mul_ln1118_1_fu_293_p1 <= tmp_data_0_V_reg_2469;
    mul_ln1118_1_fu_293_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv13_1FF5) * signed(mul_ln1118_1_fu_293_p1))), 13));
    mul_ln1118_2_fu_296_p1 <= tmp_data_0_V_reg_2469;
    mul_ln1118_2_fu_296_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_1A) * signed(mul_ln1118_2_fu_296_p1))), 14));
    mul_ln1118_3_fu_303_p1 <= tmp_data_1_V_reg_2476;
    mul_ln1118_3_fu_303_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FCD) * signed(mul_ln1118_3_fu_303_p1))), 15));
    mul_ln1118_4_fu_306_p1 <= tmp_data_2_V_reg_2485;
    mul_ln1118_4_fu_306_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_29) * signed(mul_ln1118_4_fu_306_p1))), 15));
    mul_ln1118_5_fu_300_p1 <= sext_ln1118_16_fu_1205_p1(8 - 1 downto 0);
    mul_ln1118_5_fu_300_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_32) * signed(mul_ln1118_5_fu_300_p1))), 15));
    mul_ln1118_6_fu_305_p1 <= sext_ln1118_16_fu_1205_p1(8 - 1 downto 0);
    mul_ln1118_6_fu_305_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FDA) * signed(mul_ln1118_6_fu_305_p1))), 15));
    mul_ln1118_fu_292_p1 <= tmp_data_0_V_reg_2469;
    mul_ln1118_fu_292_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_35) * signed(mul_ln1118_fu_292_p1))), 15));
    or_ln340_10_fu_2426_p2 <= (xor_ln785_7_fu_2393_p2 or and_ln786_3_reg_2745);
    or_ln340_11_fu_2431_p2 <= (or_ln340_10_fu_2426_p2 or and_ln781_3_fu_2378_p2);
    or_ln340_1_fu_2222_p2 <= (xor_ln785_1_fu_2189_p2 or and_ln786_reg_2634);
    or_ln340_2_fu_2227_p2 <= (or_ln340_1_fu_2222_p2 or and_ln781_fu_2174_p2);
    or_ln340_3_fu_1891_p2 <= (and_ln786_5_fu_1885_p2 or and_ln785_1_fu_1861_p2);
    or_ln340_4_fu_2256_p2 <= (xor_ln785_3_reg_2651 or and_ln786_1_reg_2656);
    or_ln340_5_fu_2260_p2 <= (or_ln340_4_fu_2256_p2 or and_ln781_1_reg_2646);
    or_ln340_6_fu_2333_p2 <= (and_ln786_6_fu_2328_p2 or and_ln785_2_fu_2311_p2);
    or_ln340_7_fu_2339_p2 <= (xor_ln785_5_fu_2306_p2 or and_ln786_2_reg_2705);
    or_ln340_8_fu_2344_p2 <= (or_ln340_7_fu_2339_p2 or and_ln781_2_fu_2291_p2);
    or_ln340_9_fu_2420_p2 <= (and_ln786_7_fu_2415_p2 or and_ln785_3_fu_2398_p2);
    or_ln340_fu_2216_p2 <= (and_ln786_4_fu_2211_p2 or and_ln785_fu_2194_p2);
    or_ln785_1_fu_1849_p2 <= (xor_ln785_2_fu_1843_p2 or tmp_28_fu_1763_p3);
    or_ln785_2_fu_2301_p2 <= (xor_ln785_4_fu_2295_p2 or tmp_35_reg_2689);
    or_ln785_3_fu_2388_p2 <= (xor_ln785_6_fu_2382_p2 or tmp_42_reg_2729);
    or_ln785_fu_2184_p2 <= (xor_ln785_fu_2178_p2 or tmp_22_reg_2618);
    or_ln786_1_fu_1873_p2 <= (and_ln786_1_fu_1867_p2 or and_ln781_1_fu_1837_p2);
    or_ln786_2_fu_2317_p2 <= (and_ln786_2_reg_2705 or and_ln781_2_fu_2291_p2);
    or_ln786_3_fu_2404_p2 <= (and_ln786_3_reg_2745 or and_ln781_3_fu_2378_p2);
    or_ln786_fu_2200_p2 <= (and_ln786_reg_2634 or and_ln781_fu_2174_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= 
        select_ln340_fu_2233_p3 when (or_ln340_2_fu_2227_p2(0) = '1') else 
        select_ln388_fu_2240_p3;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= 
        select_ln340_2_fu_2265_p3 when (or_ln340_5_fu_2260_p2(0) = '1') else 
        select_ln388_1_fu_2271_p3;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= 
        select_ln340_4_fu_2350_p3 when (or_ln340_8_fu_2344_p2(0) = '1') else 
        select_ln388_2_fu_2357_p3;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= 
        select_ln340_6_fu_2437_p3 when (or_ln340_11_fu_2431_p2(0) = '1') else 
        select_ln388_3_fu_2444_p3;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln106_reg_2460_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2460_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_2_fu_2265_p3 <= 
        ap_const_lv8_7F when (or_ln340_3_reg_2666(0) = '1') else 
        add_ln415_5_reg_2640;
    select_ln340_4_fu_2350_p3 <= 
        ap_const_lv8_7F when (or_ln340_6_fu_2333_p2(0) = '1') else 
        add_ln415_6_reg_2677;
    select_ln340_6_fu_2437_p3 <= 
        ap_const_lv8_7F when (or_ln340_9_fu_2420_p2(0) = '1') else 
        add_ln415_7_reg_2717;
    select_ln340_fu_2233_p3 <= 
        ap_const_lv8_7F when (or_ln340_fu_2216_p2(0) = '1') else 
        add_ln415_reg_2606;
    select_ln388_1_fu_2271_p3 <= 
        ap_const_lv8_80 when (and_ln786_5_reg_2661(0) = '1') else 
        add_ln415_5_reg_2640;
    select_ln388_2_fu_2357_p3 <= 
        ap_const_lv8_80 when (and_ln786_6_fu_2328_p2(0) = '1') else 
        add_ln415_6_reg_2677;
    select_ln388_3_fu_2444_p3 <= 
        ap_const_lv8_80 when (and_ln786_7_fu_2415_p2(0) = '1') else 
        add_ln415_7_reg_2717;
    select_ln388_fu_2240_p3 <= 
        ap_const_lv8_80 when (and_ln786_4_fu_2211_p2(0) = '1') else 
        add_ln415_reg_2606;
    select_ln416_1_fu_1829_p3 <= 
        and_ln779_1_fu_1823_p2 when (and_ln416_1_fu_1757_p2(0) = '1') else 
        icmp_ln879_2_fu_1789_p2;
    select_ln416_2_fu_2019_p3 <= 
        and_ln779_2_fu_2013_p2 when (and_ln416_2_fu_1955_p2(0) = '1') else 
        icmp_ln879_3_fu_1987_p2;
    select_ln416_3_fu_2155_p3 <= 
        and_ln779_3_fu_2149_p2 when (and_ln416_3_fu_2091_p2(0) = '1') else 
        icmp_ln879_4_fu_2123_p2;
    select_ln416_fu_1685_p3 <= 
        and_ln779_fu_1679_p2 when (and_ln416_fu_1613_p2(0) = '1') else 
        icmp_ln879_1_fu_1653_p2;
    select_ln777_1_fu_1801_p3 <= 
        icmp_ln879_2_fu_1789_p2 when (and_ln416_1_fu_1757_p2(0) = '1') else 
        icmp_ln768_1_fu_1795_p2;
    select_ln777_2_fu_2286_p3 <= 
        icmp_ln879_3_reg_2694 when (and_ln416_2_reg_2683(0) = '1') else 
        icmp_ln768_2_reg_2700;
    select_ln777_3_fu_2373_p3 <= 
        icmp_ln879_4_reg_2734 when (and_ln416_3_reg_2723(0) = '1') else 
        icmp_ln768_3_reg_2740;
    select_ln777_fu_2169_p3 <= 
        icmp_ln879_1_reg_2623 when (and_ln416_reg_2612(0) = '1') else 
        icmp_ln768_reg_2629;
        sext_ln1118_10_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1088_p3),14));

        sext_ln1118_11_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_1099_p3),14));

        sext_ln1118_12_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_7_reg_2522),14));

        sext_ln1118_13_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_8_reg_2527),14));

        sext_ln1118_14_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_1170_p3),13));

        sext_ln1118_15_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_2_fu_1375_p2),14));

        sext_ln1118_16_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_3_V_reg_2494),15));

        sext_ln1118_17_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_1250_p3),13));

        sext_ln1118_18_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_1267_p3),13));

        sext_ln1118_19_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_4_fu_1410_p2),14));

        sext_ln1118_20_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_1420_p3),12));

        sext_ln1118_4_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_1_V_reg_2476),11));

        sext_ln1118_5_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_956_p3),11));

        sext_ln1118_6_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_995_p3),13));

        sext_ln1118_7_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1012_p3),13));

        sext_ln1118_9_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_2_V_reg_2485),13));

        sext_ln1192_1_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_8_reg_2584),14));

        sext_ln1192_2_fu_1511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_8_reg_2527),13));

        sext_ln1192_3_fu_1520_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_17_reg_2594),14));

        sext_ln1192_4_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_17_reg_2594),13));

        sext_ln1192_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_0_V_fu_1466_p2),15));

        sext_ln415_10_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_3_fu_1391_p2),15));

        sext_ln415_11_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_11_reg_2558),14));

        sext_ln415_12_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_12_reg_2564),12));

        sext_ln415_1_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_1_reg_2502),7));

        sext_ln415_2_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2_fu_897_p4),12));

        sext_ln415_3_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_3_fu_923_p4),14));

        sext_ln415_4_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_4_fu_973_p4),14));

        sext_ln415_5_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_5_fu_1029_p4),12));

        sext_ln415_6_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_6_fu_1055_p4),14));

        sext_ln415_7_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_9_reg_2533),14));

        sext_ln415_8_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_reg_2538),12));

        sext_ln415_9_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_reg_2548),14));

        sext_ln415_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_863_p4),14));

        sext_ln703_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_1437_p4),14));

    shl_ln1118_1_fu_995_p3 <= (tmp_data_1_V_reg_2476 & ap_const_lv4_0);
    shl_ln1118_2_fu_1012_p3 <= (tmp_data_1_V_reg_2476 & ap_const_lv1_0);
    shl_ln1118_3_fu_1088_p3 <= (tmp_data_2_V_reg_2485 & ap_const_lv5_0);
    shl_ln1118_4_fu_1099_p3 <= (tmp_data_2_V_reg_2485 & ap_const_lv3_0);
    shl_ln1118_5_fu_1170_p3 <= (tmp_data_2_V_reg_2485 & ap_const_lv4_0);
    shl_ln1118_6_fu_1250_p3 <= (tmp_data_3_V_reg_2494 & ap_const_lv4_0);
    shl_ln1118_7_fu_1267_p3 <= (tmp_data_3_V_reg_2494 & ap_const_lv1_0);
    shl_ln1118_8_fu_1420_p3 <= (tmp_data_3_V_reg_2494_pp0_iter2_reg & ap_const_lv3_0);
    shl_ln_fu_956_p3 <= (tmp_data_1_V_reg_2476 & ap_const_lv2_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_1_fu_1023_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_1006_p2) - unsigned(sext_ln1118_7_fu_1019_p1));
    sub_ln1118_2_fu_1126_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sext_ln1118_10_fu_1095_p1));
    sub_ln1118_3_fu_1132_p2 <= std_logic_vector(unsigned(sub_ln1118_2_fu_1126_p2) - unsigned(sext_ln1118_11_fu_1106_p1));
    sub_ln1118_4_fu_1181_p2 <= std_logic_vector(signed(sext_ln1118_14_fu_1177_p1) - signed(sext_ln1118_9_fu_1085_p1));
    sub_ln1118_5_fu_1261_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_17_fu_1257_p1));
    sub_ln1118_6_fu_1278_p2 <= std_logic_vector(unsigned(sub_ln1118_5_fu_1261_p2) - unsigned(sext_ln1118_18_fu_1274_p1));
    sub_ln1118_7_fu_1431_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_20_fu_1427_p1));
    sub_ln1118_fu_1006_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_6_fu_1002_p1));
    tmp_10_fu_1043_p3 <= sub_ln1118_1_fu_1023_p2(1 downto 1);
    tmp_11_fu_1069_p3 <= mul_ln1118_3_fu_303_p2(1 downto 1);
    tmp_12_fu_1158_p3 <= mul_ln1118_4_fu_306_p2(1 downto 1);
    tmp_15_fu_1238_p3 <= mul_ln1118_6_fu_305_p2(1 downto 1);
    tmp_17_fu_1437_p4 <= sub_ln1118_7_fu_1431_p2(11 downto 2);
    tmp_19_fu_1573_p3 <= add_ln1192_14_fu_1499_p2(11 downto 11);
    tmp_20_fu_1581_p3 <= add_ln1192_14_fu_1499_p2(3 downto 3);
    tmp_21_fu_1599_p3 <= add_ln415_fu_1593_p2(7 downto 7);
    tmp_22_fu_1619_p3 <= add_ln415_fu_1593_p2(7 downto 7);
    tmp_23_fu_1665_p3 <= add_ln1192_14_fu_1499_p2(12 downto 12);
    tmp_24_fu_1699_p3 <= add_ln1192_19_fu_1531_p2(13 downto 13);
    tmp_25_fu_1717_p3 <= add_ln1192_19_fu_1531_p2(11 downto 11);
    tmp_26_fu_1725_p3 <= add_ln1192_19_fu_1531_p2(3 downto 3);
    tmp_27_fu_1743_p3 <= add_ln415_5_fu_1737_p2(7 downto 7);
    tmp_28_fu_1763_p3 <= add_ln415_5_fu_1737_p2(7 downto 7);
    tmp_29_fu_1771_p3 <= add_ln1192_19_fu_1531_p2(13 downto 13);
    tmp_30_fu_1809_p3 <= add_ln703_fu_1537_p2(12 downto 12);
    tmp_32_fu_1915_p3 <= acc_2_V_fu_1543_p2(11 downto 11);
    tmp_33_fu_1923_p3 <= acc_2_V_fu_1543_p2(3 downto 3);
    tmp_34_fu_1941_p3 <= add_ln415_6_fu_1935_p2(7 downto 7);
    tmp_35_fu_1961_p3 <= add_ln415_6_fu_1935_p2(7 downto 7);
    tmp_36_fu_1969_p3 <= acc_2_V_fu_1543_p2(13 downto 13);
    tmp_37_fu_1999_p3 <= acc_2_V_fu_1543_p2(12 downto 12);
    tmp_39_fu_2051_p3 <= acc_3_V_1_fu_1549_p2(11 downto 11);
    tmp_3_fu_1779_p4 <= add_ln1192_19_fu_1531_p2(13 downto 12);
    tmp_40_fu_2059_p3 <= acc_3_V_1_fu_1549_p2(3 downto 3);
    tmp_41_fu_2077_p3 <= add_ln415_7_fu_2071_p2(7 downto 7);
    tmp_42_fu_2097_p3 <= add_ln415_7_fu_2071_p2(7 downto 7);
    tmp_43_fu_2105_p3 <= acc_3_V_1_fu_1549_p2(13 downto 13);
    tmp_44_fu_2113_p4 <= acc_3_V_1_fu_1549_p2(13 downto 12);
    tmp_45_fu_2135_p3 <= acc_3_V_1_fu_1549_p2(12 downto 12);
    tmp_4_fu_1643_p4 <= acc_0_V_1_fu_1505_p2(14 downto 12);
    tmp_5_fu_843_p1 <= data_V_data_0_V_dout;
    tmp_6_fu_1977_p4 <= acc_2_V_fu_1543_p2(13 downto 12);
    tmp_7_fu_911_p3 <= mul_ln1118_1_fu_293_p2(1 downto 1);
    tmp_8_fu_937_p3 <= mul_ln1118_2_fu_296_p2(1 downto 1);
    tmp_fu_1627_p4 <= acc_0_V_1_fu_1505_p2(14 downto 13);
    trunc_ln708_13_fu_1563_p4 <= add_ln1192_14_fu_1499_p2(11 downto 4);
    trunc_ln708_14_fu_1707_p4 <= add_ln1192_19_fu_1531_p2(11 downto 4);
    trunc_ln708_15_fu_1905_p4 <= acc_2_V_fu_1543_p2(11 downto 4);
    trunc_ln708_16_fu_2041_p4 <= acc_3_V_1_fu_1549_p2(11 downto 4);
    trunc_ln708_1_fu_833_p1 <= data_V_data_0_V_dout;
    trunc_ln708_2_fu_897_p4 <= mul_ln1118_1_fu_293_p2(12 downto 2);
    trunc_ln708_3_fu_923_p4 <= mul_ln1118_2_fu_296_p2(13 downto 2);
    trunc_ln708_4_fu_973_p4 <= add_ln1118_fu_967_p2(10 downto 2);
    trunc_ln708_5_fu_1029_p4 <= sub_ln1118_1_fu_1023_p2(12 downto 2);
    trunc_ln708_6_fu_1055_p4 <= mul_ln1118_3_fu_303_p2(14 downto 2);
    trunc_ln_fu_863_p4 <= mul_ln1118_fu_292_p2(14 downto 2);
    xor_ln416_1_fu_1751_p2 <= (tmp_27_fu_1743_p3 xor ap_const_lv1_1);
    xor_ln416_2_fu_1949_p2 <= (tmp_34_fu_1941_p3 xor ap_const_lv1_1);
    xor_ln416_3_fu_2085_p2 <= (tmp_41_fu_2077_p3 xor ap_const_lv1_1);
    xor_ln416_fu_1607_p2 <= (tmp_21_fu_1599_p3 xor ap_const_lv1_1);
    xor_ln779_1_fu_1817_p2 <= (tmp_30_fu_1809_p3 xor ap_const_lv1_1);
    xor_ln779_2_fu_2007_p2 <= (tmp_37_fu_1999_p3 xor ap_const_lv1_1);
    xor_ln779_3_fu_2143_p2 <= (tmp_45_fu_2135_p3 xor ap_const_lv1_1);
    xor_ln779_fu_1673_p2 <= (tmp_23_fu_1665_p3 xor ap_const_lv1_1);
    xor_ln785_1_fu_2189_p2 <= (tmp_18_reg_2600 xor ap_const_lv1_1);
    xor_ln785_2_fu_1843_p2 <= (select_ln777_1_fu_1801_p3 xor ap_const_lv1_1);
    xor_ln785_3_fu_1855_p2 <= (tmp_24_fu_1699_p3 xor ap_const_lv1_1);
    xor_ln785_4_fu_2295_p2 <= (select_ln777_2_fu_2286_p3 xor ap_const_lv1_1);
    xor_ln785_5_fu_2306_p2 <= (tmp_31_reg_2671 xor ap_const_lv1_1);
    xor_ln785_6_fu_2382_p2 <= (select_ln777_3_fu_2373_p3 xor ap_const_lv1_1);
    xor_ln785_7_fu_2393_p2 <= (tmp_38_reg_2711 xor ap_const_lv1_1);
    xor_ln785_fu_2178_p2 <= (select_ln777_fu_2169_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_1879_p2 <= (or_ln786_1_fu_1873_p2 xor ap_const_lv1_1);
    xor_ln786_2_fu_2322_p2 <= (or_ln786_2_fu_2317_p2 xor ap_const_lv1_1);
    xor_ln786_3_fu_2409_p2 <= (or_ln786_3_fu_2404_p2 xor ap_const_lv1_1);
    xor_ln786_fu_2205_p2 <= (or_ln786_fu_2200_p2 xor ap_const_lv1_1);
    zext_ln1118_1_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_937_p3),2));
    zext_ln1118_2_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_2517),2));
    zext_ln1118_3_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1043_p3),2));
    zext_ln1118_4_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1069_p3),2));
    zext_ln1118_5_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1158_p3),2));
    zext_ln1118_6_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1238_p3),7));
    zext_ln1118_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_911_p3),2));
    zext_ln1192_1_fu_1320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_4_fu_1314_p2),14));
    zext_ln1192_2_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_11_reg_2589),14));
    zext_ln1192_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_1_fu_1451_p2),14));
    zext_ln415_1_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_2543),12));
    zext_ln415_2_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_2553),14));
    zext_ln415_3_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_reg_2569),12));
    zext_ln415_4_fu_1589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_1581_p3),8));
    zext_ln415_5_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_1725_p3),8));
    zext_ln415_6_fu_1931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_1923_p3),8));
    zext_ln415_7_fu_2067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_2059_p3),8));
    zext_ln415_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_2507),7));
    zext_ln708_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_2512),2));
end behav;

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config42_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_3_V_blk_n : OUT STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_8_2_0_0_0_4u_config42_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal io_acc_block_signal_op174 : STD_LOGIC;
    signal and_ln289_8_reg_1083 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal kernel_data_V_4_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_9 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_10 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_11 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_16 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_17 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_18 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_19 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_20 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_21 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_22 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_23 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_28 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_29 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_30 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_31 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_32 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_33 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_34 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_4_35 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal sX_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_27_ret_reg_903 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_26_ret_reg_908 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_25_ret_reg_913 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_24_ret_reg_918 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_15_ret_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_14_ret_reg_928 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_13_ret_reg_933 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_12_ret_reg_938 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_3_ret_reg_943 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_2_ret_reg_948 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_1_ret_reg_953 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_0_ret_reg_958 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_4_ret_reg_963 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_5_ret_reg_968 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_6_ret_reg_973 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_7_ret_reg_978 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_8_ret_reg_983 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_9_ret_reg_988 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_10_ret_reg_993 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_11_ret_reg_998 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_16_ret_reg_1003 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_17_ret_reg_1008 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_18_ret_reg_1013 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_19_ret_reg_1018 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_20_ret_reg_1023 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_21_ret_reg_1028 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_22_ret_reg_1033 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_23_ret_reg_1038 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_28_ret_reg_1043 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_29_ret_reg_1048 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_30_ret_reg_1053 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_31_ret_reg_1058 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_32_ret_reg_1063 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_33_ret_reg_1068 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_34_ret_reg_1073 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_4_35_ret_reg_1078 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln289_8_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_8_reg_1083_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_reg_1087 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln323_fu_867_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln317_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_out_0_V_reg_1099 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_out_1_V_reg_1104 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_out_2_V_reg_1109 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_out_3_V_reg_1114 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call0 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call0 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call0 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call0 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call0 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call0 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call0 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call0 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp126 : BOOLEAN;
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_start : STD_LOGIC;
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_done : STD_LOGIC;
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_idle : STD_LOGIC;
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_ready : STD_LOGIC;
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_17 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_18 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_19 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_20 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_21 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_22 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_23 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_24 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_25 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_26 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_27 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_28 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_29 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_30 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_31 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_32 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_33 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_34 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_35 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call32 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call32 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call32 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call32 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call32 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call32 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call32 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call32 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call32 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call32 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call32 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call32 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call32 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call32 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call32 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call32 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call32 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call32 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call32 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call32 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call32 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call32 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp51 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln328_fu_817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_5_load : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_799_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_739_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4823_fu_759_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_10_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_11_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_12_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_7_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln328_fu_811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to20 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_1270 : BOOLEAN;
    signal ap_condition_1339 : BOOLEAN;

    component dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_18_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_19_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_20_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_32_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_33_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_34_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_35_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215 : component dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => kernel_data_V_4_0_ret_reg_958,
        data_1_V_read => kernel_data_V_4_1_ret_reg_953,
        data_2_V_read => kernel_data_V_4_2_ret_reg_948,
        data_3_V_read => kernel_data_V_4_3_ret_reg_943,
        data_4_V_read => kernel_data_V_4_4_ret_reg_963,
        data_5_V_read => kernel_data_V_4_5_ret_reg_968,
        data_6_V_read => kernel_data_V_4_6_ret_reg_973,
        data_7_V_read => kernel_data_V_4_7_ret_reg_978,
        data_8_V_read => kernel_data_V_4_8_ret_reg_983,
        data_9_V_read => kernel_data_V_4_9_ret_reg_988,
        data_10_V_read => kernel_data_V_4_10_ret_reg_993,
        data_11_V_read => kernel_data_V_4_11_ret_reg_998,
        data_12_V_read => kernel_data_V_4_12_ret_reg_938,
        data_13_V_read => kernel_data_V_4_13_ret_reg_933,
        data_14_V_read => kernel_data_V_4_14_ret_reg_928,
        data_15_V_read => kernel_data_V_4_15_ret_reg_923,
        data_16_V_read => kernel_data_V_4_16_ret_reg_1003,
        data_17_V_read => kernel_data_V_4_17_ret_reg_1008,
        data_18_V_read => kernel_data_V_4_18_ret_reg_1013,
        data_19_V_read => kernel_data_V_4_19_ret_reg_1018,
        data_20_V_read => kernel_data_V_4_20_ret_reg_1023,
        data_21_V_read => kernel_data_V_4_21_ret_reg_1028,
        data_22_V_read => kernel_data_V_4_22_ret_reg_1033,
        data_23_V_read => kernel_data_V_4_23_ret_reg_1038,
        data_24_V_read => kernel_data_V_4_24_ret_reg_918,
        data_25_V_read => kernel_data_V_4_25_ret_reg_913,
        data_26_V_read => kernel_data_V_4_26_ret_reg_908,
        data_27_V_read => kernel_data_V_4_27_ret_reg_903,
        data_28_V_read => kernel_data_V_4_28_ret_reg_1043,
        data_29_V_read => kernel_data_V_4_29_ret_reg_1048,
        data_30_V_read => kernel_data_V_4_30_ret_reg_1053,
        data_31_V_read => kernel_data_V_4_31_ret_reg_1058,
        data_32_V_read => kernel_data_V_4_32_ret_reg_1063,
        data_33_V_read => kernel_data_V_4_33_ret_reg_1068,
        data_34_V_read => kernel_data_V_4_34_ret_reg_1073,
        data_35_V_read => kernel_data_V_4_35_ret_reg_1078,
        ap_return_0 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_3,
        ap_ce => grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_ce);

    call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255 : component shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_start,
        ap_done => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_done,
        ap_idle => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_idle,
        ap_ready => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_ready,
        in_elem_data_0_V_read => in_elem_data_0_V_read,
        in_elem_data_1_V_read => in_elem_data_1_V_read,
        in_elem_data_2_V_read => in_elem_data_2_V_read,
        in_elem_data_3_V_read => in_elem_data_3_V_read,
        kernel_window_4_V_read => kernel_data_V_4_4,
        kernel_window_5_V_read => kernel_data_V_4_5,
        kernel_window_6_V_read => kernel_data_V_4_6,
        kernel_window_7_V_read => kernel_data_V_4_7,
        kernel_window_8_V_read => kernel_data_V_4_8,
        kernel_window_9_V_read => kernel_data_V_4_9,
        kernel_window_10_V_read => kernel_data_V_4_10,
        kernel_window_11_V_read => kernel_data_V_4_11,
        kernel_window_16_V_read => kernel_data_V_4_16,
        kernel_window_17_V_read => kernel_data_V_4_17,
        kernel_window_18_V_read => kernel_data_V_4_18,
        kernel_window_19_V_read => kernel_data_V_4_19,
        kernel_window_20_V_read => kernel_data_V_4_20,
        kernel_window_21_V_read => kernel_data_V_4_21,
        kernel_window_22_V_read => kernel_data_V_4_22,
        kernel_window_23_V_read => kernel_data_V_4_23,
        kernel_window_28_V_read => kernel_data_V_4_28,
        kernel_window_29_V_read => kernel_data_V_4_29,
        kernel_window_30_V_read => kernel_data_V_4_30,
        kernel_window_31_V_read => kernel_data_V_4_31,
        kernel_window_32_V_read => kernel_data_V_4_32,
        kernel_window_33_V_read => kernel_data_V_4_33,
        kernel_window_34_V_read => kernel_data_V_4_34,
        kernel_window_35_V_read => kernel_data_V_4_35,
        ap_return_0 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_0,
        ap_return_1 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_1,
        ap_return_2 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_2,
        ap_return_3 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_3,
        ap_return_4 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_4,
        ap_return_5 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_5,
        ap_return_6 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_6,
        ap_return_7 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_7,
        ap_return_8 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_8,
        ap_return_9 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_9,
        ap_return_10 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_10,
        ap_return_11 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_11,
        ap_return_12 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_12,
        ap_return_13 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_13,
        ap_return_14 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_14,
        ap_return_15 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_15,
        ap_return_16 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_16,
        ap_return_17 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_17,
        ap_return_18 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_18,
        ap_return_19 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_19,
        ap_return_20 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_20,
        ap_return_21 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_21,
        ap_return_22 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_22,
        ap_return_23 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_23,
        ap_return_24 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_24,
        ap_return_25 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_25,
        ap_return_26 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_26,
        ap_return_27 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_27,
        ap_return_28 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_28,
        ap_return_29 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_29,
        ap_return_30 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_30,
        ap_return_31 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_31,
        ap_return_32 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_32,
        ap_return_33 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_33,
        ap_return_34 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_34,
        ap_return_35 => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_35,
        ap_ce => call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_storemerge_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1270)) then
                if (((icmp_ln317_fu_843_p2 = ap_const_lv1_1) and (icmp_ln313_fu_793_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_204 <= ap_const_lv32_0;
                elsif (((icmp_ln313_fu_793_p2 = ap_const_lv1_1) and (icmp_ln317_fu_843_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_204 <= select_ln323_fu_867_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_204 <= ap_phi_reg_pp0_iter1_storemerge_reg_204;
                end if;
            end if; 
        end if;
    end process;

    pX_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1270)) then
                if ((icmp_ln313_fu_793_p2 = ap_const_lv1_1)) then 
                    pX_5 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_793_p2 = ap_const_lv1_0)) then 
                    pX_5 <= add_ln326_fu_799_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1339)) then
                if ((icmp_ln317_fu_843_p2 = ap_const_lv1_1)) then 
                    pY_5 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_843_p2 = ap_const_lv1_0)) then 
                    pY_5 <= add_ln321_fu_849_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1270)) then
                if ((icmp_ln313_fu_793_p2 = ap_const_lv1_1)) then 
                    sX_5 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_793_p2 = ap_const_lv1_0)) then 
                    sX_5 <= select_ln328_fu_817_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln289_8_reg_1083 <= and_ln289_8_fu_787_p2;
                icmp_ln313_reg_1087 <= icmp_ln313_fu_793_p2;
                kernel_data_V_4_0_ret_reg_958 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_0;
                kernel_data_V_4_10_ret_reg_993 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_18;
                kernel_data_V_4_11_ret_reg_998 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_19;
                kernel_data_V_4_12_ret_reg_938 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_4;
                kernel_data_V_4_13_ret_reg_933 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_5;
                kernel_data_V_4_14_ret_reg_928 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_6;
                kernel_data_V_4_15_ret_reg_923 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_7;
                kernel_data_V_4_16_ret_reg_1003 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_20;
                kernel_data_V_4_17_ret_reg_1008 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_21;
                kernel_data_V_4_18_ret_reg_1013 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_22;
                kernel_data_V_4_19_ret_reg_1018 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_23;
                kernel_data_V_4_1_ret_reg_953 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_1;
                kernel_data_V_4_20_ret_reg_1023 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_24;
                kernel_data_V_4_21_ret_reg_1028 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_25;
                kernel_data_V_4_22_ret_reg_1033 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_26;
                kernel_data_V_4_23_ret_reg_1038 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_27;
                kernel_data_V_4_24_ret_reg_918 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_8;
                kernel_data_V_4_25_ret_reg_913 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_9;
                kernel_data_V_4_26_ret_reg_908 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_10;
                kernel_data_V_4_27_ret_reg_903 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_11;
                kernel_data_V_4_28_ret_reg_1043 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_28;
                kernel_data_V_4_29_ret_reg_1048 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_29;
                kernel_data_V_4_2_ret_reg_948 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_2;
                kernel_data_V_4_30_ret_reg_1053 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_30;
                kernel_data_V_4_31_ret_reg_1058 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_31;
                kernel_data_V_4_32_ret_reg_1063 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_32;
                kernel_data_V_4_33_ret_reg_1068 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_33;
                kernel_data_V_4_34_ret_reg_1073 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_34;
                kernel_data_V_4_35_ret_reg_1078 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_35;
                kernel_data_V_4_3_ret_reg_943 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_3;
                kernel_data_V_4_4_ret_reg_963 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_12;
                kernel_data_V_4_5_ret_reg_968 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_13;
                kernel_data_V_4_6_ret_reg_973 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_14;
                kernel_data_V_4_7_ret_reg_978 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_15;
                kernel_data_V_4_8_ret_reg_983 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_16;
                kernel_data_V_4_9_ret_reg_988 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_17;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln289_8_reg_1083_pp0_iter10_reg <= and_ln289_8_reg_1083_pp0_iter9_reg;
                and_ln289_8_reg_1083_pp0_iter11_reg <= and_ln289_8_reg_1083_pp0_iter10_reg;
                and_ln289_8_reg_1083_pp0_iter12_reg <= and_ln289_8_reg_1083_pp0_iter11_reg;
                and_ln289_8_reg_1083_pp0_iter13_reg <= and_ln289_8_reg_1083_pp0_iter12_reg;
                and_ln289_8_reg_1083_pp0_iter14_reg <= and_ln289_8_reg_1083_pp0_iter13_reg;
                and_ln289_8_reg_1083_pp0_iter15_reg <= and_ln289_8_reg_1083_pp0_iter14_reg;
                and_ln289_8_reg_1083_pp0_iter16_reg <= and_ln289_8_reg_1083_pp0_iter15_reg;
                and_ln289_8_reg_1083_pp0_iter17_reg <= and_ln289_8_reg_1083_pp0_iter16_reg;
                and_ln289_8_reg_1083_pp0_iter18_reg <= and_ln289_8_reg_1083_pp0_iter17_reg;
                and_ln289_8_reg_1083_pp0_iter19_reg <= and_ln289_8_reg_1083_pp0_iter18_reg;
                and_ln289_8_reg_1083_pp0_iter20_reg <= and_ln289_8_reg_1083_pp0_iter19_reg;
                and_ln289_8_reg_1083_pp0_iter2_reg <= and_ln289_8_reg_1083;
                and_ln289_8_reg_1083_pp0_iter3_reg <= and_ln289_8_reg_1083_pp0_iter2_reg;
                and_ln289_8_reg_1083_pp0_iter4_reg <= and_ln289_8_reg_1083_pp0_iter3_reg;
                and_ln289_8_reg_1083_pp0_iter5_reg <= and_ln289_8_reg_1083_pp0_iter4_reg;
                and_ln289_8_reg_1083_pp0_iter6_reg <= and_ln289_8_reg_1083_pp0_iter5_reg;
                and_ln289_8_reg_1083_pp0_iter7_reg <= and_ln289_8_reg_1083_pp0_iter6_reg;
                and_ln289_8_reg_1083_pp0_iter8_reg <= and_ln289_8_reg_1083_pp0_iter7_reg;
                and_ln289_8_reg_1083_pp0_iter9_reg <= and_ln289_8_reg_1083_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_storemerge_reg_204 <= ap_phi_reg_pp0_iter0_storemerge_reg_204;
                kernel_data_V_4_10 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_18;
                kernel_data_V_4_11 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_19;
                kernel_data_V_4_16 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_20;
                kernel_data_V_4_17 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_21;
                kernel_data_V_4_18 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_22;
                kernel_data_V_4_19 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_23;
                kernel_data_V_4_20 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_24;
                kernel_data_V_4_21 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_25;
                kernel_data_V_4_22 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_26;
                kernel_data_V_4_23 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_27;
                kernel_data_V_4_28 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_28;
                kernel_data_V_4_29 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_29;
                kernel_data_V_4_30 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_30;
                kernel_data_V_4_31 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_31;
                kernel_data_V_4_32 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_32;
                kernel_data_V_4_33 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_33;
                kernel_data_V_4_34 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_34;
                kernel_data_V_4_35 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_35;
                kernel_data_V_4_4 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_12;
                kernel_data_V_4_5 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_13;
                kernel_data_V_4_6 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_14;
                kernel_data_V_4_7 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_15;
                kernel_data_V_4_8 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_16;
                kernel_data_V_4_9 <= call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_return_17;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter19_reg))) then
                res_out_0_V_reg_1099 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_0;
                res_out_1_V_reg_1104 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_1;
                res_out_2_V_reg_1109 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_2;
                res_out_3_V_reg_1114 <= grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1087 = ap_const_lv1_1))) then
                sY_5 <= ap_phi_reg_pp0_iter2_storemerge_reg_204;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln321_fu_849_p2 <= std_logic_vector(unsigned(pY_5) + unsigned(ap_const_lv32_1));
    add_ln323_fu_861_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_5_load) + unsigned(ap_const_lv32_1));
    add_ln326_fu_799_p2 <= std_logic_vector(unsigned(pX_5) + unsigned(ap_const_lv32_1));
    add_ln328_fu_811_p2 <= std_logic_vector(unsigned(sX_5) + unsigned(ap_const_lv32_1));
    and_ln289_7_fu_781_p2 <= (icmp_ln289_12_fu_769_p2 and icmp_ln289_11_fu_749_p2);
    and_ln289_8_fu_787_p2 <= (and_ln289_fu_775_p2 and and_ln289_7_fu_781_p2);
    and_ln289_fu_775_p2 <= (icmp_ln289_fu_719_p2 and icmp_ln289_10_fu_729_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter21, io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter21, io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp126_assign_proc : process(ap_start, ap_enable_reg_pp0_iter21, io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp126 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp51_assign_proc : process(ap_start, ap_enable_reg_pp0_iter21, io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp51 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter21, io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call32_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call32 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_pp0_stage0_iter21_assign_proc : process(io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
                ap_block_state22_pp0_stage0_iter21 <= ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg));
    end process;


    ap_block_state22_pp0_stage0_iter21_ignore_call0_assign_proc : process(io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
                ap_block_state22_pp0_stage0_iter21_ignore_call0 <= ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg));
    end process;


    ap_block_state22_pp0_stage0_iter21_ignore_call32_assign_proc : process(io_acc_block_signal_op174, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
                ap_block_state22_pp0_stage0_iter21_ignore_call32 <= ((io_acc_block_signal_op174 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1270_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_1270 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1339_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce, icmp_ln313_fu_793_p2)
    begin
                ap_condition_1339 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_793_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to20_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to20 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to20 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_204 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to20)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to20 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_sY_5_load_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, sY_5, icmp_ln313_reg_1087, ap_phi_reg_pp0_iter2_storemerge_reg_204)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln313_reg_1087 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_sY_5_load <= ap_phi_reg_pp0_iter2_storemerge_reg_204;
        else 
            ap_sig_allocacmp_sY_5_load <= sY_5;
        end if; 
    end process;


    call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp51))) then 
            call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_ce <= ap_const_logic_1;
        else 
            call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_start <= ap_const_logic_1;
        else 
            call_ret4_shift_line_buffer_array_ap_fixed_8_2_0_0_0_4u_config42_s_fu_255_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp126)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp126))) then 
            grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_ap_fixed_8_2_0_0_0_config42_mult_0_0_0_0_0_fu_215_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln289_10_fu_729_p2 <= "1" when (ap_sig_allocacmp_sY_5_load = ap_const_lv32_2) else "0";
    icmp_ln289_11_fu_749_p2 <= "1" when (signed(tmp_fu_739_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_12_fu_769_p2 <= "1" when (signed(tmp_4823_fu_759_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_719_p2 <= "1" when (sX_5 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_793_p2 <= "1" when (pX_5 = ap_const_lv32_41) else "0";
    icmp_ln317_fu_843_p2 <= "1" when (pY_5 = ap_const_lv32_41) else "0";
    io_acc_block_signal_op174 <= (res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, res_stream_V_data_0_V_full_n, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= res_out_0_V_reg_1099;

    res_stream_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter21, and_ln289_8_reg_1083_pp0_iter20_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, res_stream_V_data_1_V_full_n, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= res_out_1_V_reg_1104;

    res_stream_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter21, and_ln289_8_reg_1083_pp0_iter20_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, res_stream_V_data_2_V_full_n, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= res_out_2_V_reg_1109;

    res_stream_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter21, and_ln289_8_reg_1083_pp0_iter20_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, res_stream_V_data_3_V_full_n, and_ln289_8_reg_1083_pp0_iter20_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= res_out_3_V_reg_1114;

    res_stream_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter21, and_ln289_8_reg_1083_pp0_iter20_reg, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_8_reg_1083_pp0_iter20_reg))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_867_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_10_fu_729_p2(0) = '1') else 
        add_ln323_fu_861_p2;
    select_ln328_fu_817_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_fu_719_p2(0) = '1') else 
        add_ln328_fu_811_p2;
    tmp_4823_fu_759_p4 <= pX_5(31 downto 1);
    tmp_fu_739_p4 <= pY_5(31 downto 1);
end behav;

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config50_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_0_V_TVALID : IN STD_LOGIC;
    data_V_data_0_V_TREADY : OUT STD_LOGIC;
    data_V_data_1_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_1_V_TVALID : IN STD_LOGIC;
    data_V_data_1_V_TREADY : OUT STD_LOGIC;
    data_V_data_2_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_2_V_TVALID : IN STD_LOGIC;
    data_V_data_2_V_TREADY : OUT STD_LOGIC;
    data_V_data_3_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_3_V_TVALID : IN STD_LOGIC;
    data_V_data_3_V_TREADY : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config50_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv15_7FD1 : STD_LOGIC_VECTOR (14 downto 0) := "111111111010001";
    constant ap_const_lv14_3FEA : STD_LOGIC_VECTOR (13 downto 0) := "11111111101010";
    constant ap_const_lv16_47 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000111";
    constant ap_const_lv15_33 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110011";
    constant ap_const_lv15_7FD2 : STD_LOGIC_VECTOR (14 downto 0) := "111111111010010";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv11_660 : STD_LOGIC_VECTOR (10 downto 0) := "11001100000";
    constant ap_const_lv14_3FD0 : STD_LOGIC_VECTOR (13 downto 0) := "11111111010000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln106_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal data_V_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal data_V_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln106_reg_2387 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_reg_2387_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal io_acc_block_signal_op19 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal io_acc_block_signal_op311 : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln106_fu_655_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_18_reg_2396 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_50_reg_2401 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_24_reg_2406 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_25_reg_2411 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_56_reg_2416 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_27_reg_2421 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_58_reg_2426 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_28_reg_2431 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_59_reg_2436 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_29_reg_2441 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_60_reg_2446 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_16_fu_1216_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln415_16_reg_2451 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_0_V_fu_1256_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal acc_0_V_reg_2456 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_24_fu_1262_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_24_reg_2461 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_27_fu_1290_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_27_reg_2466 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_31_fu_1306_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_31_reg_2471 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_33_fu_1322_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_33_reg_2476 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_62_reg_2481 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_17_fu_1529_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_17_reg_2487 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_fu_1629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_reg_2493 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_8_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_8_reg_2498 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_1659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_reg_2503 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_9_fu_1677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_9_reg_2508 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_reg_2513 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_2518 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_18_fu_1727_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_18_reg_2524 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_4_fu_1747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_4_reg_2530 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_1753_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_fu_1787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_reg_2541 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_reg_2547 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_fu_1827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_reg_2552 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_19_fu_1863_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_19_reg_2558 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_5_fu_1883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_5_reg_2564 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_1889_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_2570 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_fu_1923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_reg_2581 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_fu_1963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_reg_2586 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_3_V_39_fu_2175_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_3_V_39_reg_2592 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1118_13_fu_278_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_27_fu_1086_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_11_fu_283_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_10_fu_286_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_12_fu_288_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_290_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_fu_677_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_681_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_681_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_6_fu_693_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_6_fu_693_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_16_fu_689_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_18_fu_705_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_fu_709_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln_fu_715_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_48_fu_729_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_741_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_741_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_fu_677_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_20_fu_749_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1118_10_fu_753_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_s_fu_759_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_fu_773_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1118_7_fu_785_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_7_fu_785_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_19_fu_793_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_17_fu_701_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1118_fu_797_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_6_fu_821_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_19_fu_827_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_fu_841_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_21_fu_853_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_857_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_857_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_21_fu_853_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_32_fu_865_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_11_fu_869_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_20_fu_875_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_fu_889_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1118_9_fu_901_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_9_fu_901_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_22_fu_909_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1118_7_fu_913_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_21_fu_919_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_933_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_22_fu_945_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_22_fu_945_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_54_fu_959_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_fu_959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_20_fu_955_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_fu_967_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_fu_977_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_23_fu_982_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_24_fu_987_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_s_fu_992_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_s_fu_992_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_25_fu_1000_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_8_fu_1004_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_23_fu_1010_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_fu_290_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_10_fu_286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_11_fu_283_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_26_fu_1060_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_57_fu_1074_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_27_fu_1086_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_28_fu_1092_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_29_fu_1096_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_12_fu_288_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_13_fu_278_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_1_fu_1136_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_1_fu_1136_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_30_fu_1144_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_29_fu_1096_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_9_fu_1148_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_2_fu_1172_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_2_fu_1172_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_31_fu_1180_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_28_fu_1092_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1118_1_fu_1184_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_30_fu_1190_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_61_fu_1204_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_30_fu_1200_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln415_16_fu_1212_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln415_18_fu_885_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln415_fu_725_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_fu_1222_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1118_6_fu_897_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_fu_737_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_19_fu_1232_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln1192_2_fu_1238_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1192_6_fu_1246_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_fu_1228_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_22_fu_1250_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_26_fu_1020_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_15_fu_769_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln415_19_fu_929_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_fu_1034_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1192_3_fu_1268_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1118_4_fu_781_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln708_fu_941_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_26_fu_1280_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1192_3_fu_1286_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1192_fu_1276_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln415_17_fu_837_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_30_fu_1296_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1192_9_fu_1302_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_24_fu_1070_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1118_7_fu_1082_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_5_fu_849_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_32_fu_1312_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1192_5_fu_1318_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln415_fu_971_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln415_22_fu_1334_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln415_12_fu_1337_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln415_12_fu_1340_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_25_fu_1350_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln415_13_fu_1353_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_26_fu_1362_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln415_14_fu_1365_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln415_14_fu_1368_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_28_fu_1378_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln415_15_fu_1381_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_15_fu_1384_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln_fu_1397_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_16_fu_1328_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_2_V_fu_1404_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_7_fu_1417_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_21_fu_1331_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1192_4_fu_1426_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_25_fu_1420_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_28_fu_1429_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_23_fu_1346_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_4_fu_1410_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_10_fu_1445_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_fu_1414_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln415_13_fu_1356_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_27_fu_1374_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_8_fu_1435_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal acc_2_V_6_fu_1439_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln415_29_fu_1390_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_7_fu_1471_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln415_31_fu_1394_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_34_fu_1448_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal acc_0_V_2_fu_1453_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_65_fu_1517_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_31_fu_1499_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_17_fu_1525_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_66_fu_1535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1509_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1571_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln416_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_1601_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_1563_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_1593_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_1555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_fu_1621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_1665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_1_V_fu_1465_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1192_36_fu_1459_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_73_fu_1715_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_32_fu_1697_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_18_fu_1723_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_1733_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_1707_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_4_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_1761_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1777_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_76_fu_1799_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_4_fu_1807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_1_fu_1813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_4_fu_1819_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_1851_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_33_fu_1833_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_19_fu_1859_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_1869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_1843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_5_fu_1877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_19_2_fu_1897_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_20_2_fu_1913_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_1935_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_10_fu_1907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_5_fu_1943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_2_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_5_fu_1955_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_35_fu_1485_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_84_fu_1995_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_34_fu_1977_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_20_fu_2003_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_20_fu_2007_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_85_fu_2013_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_1987_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_6_fu_2021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_2049_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_7_fu_2063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln416_fu_2069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_6_fu_2057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_2041_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln416_1_fu_2075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_6_fu_2027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_2033_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_12_fu_2093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_1969_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_6_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_13_fu_2105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_7_fu_2081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_3_fu_2087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_fu_2117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_6_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_2129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_12_fu_2135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_6_fu_2111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_22_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_21_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_23_fu_2153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_15_fu_2159_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_6_fu_2167_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln340_13_fu_2188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_14_fu_2192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_2197_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_fu_2203_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_4_fu_2218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_9_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_4_fu_2233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_10_fu_2238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_1_fu_2223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_4_fu_2249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_2254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_10_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_4_fu_2243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_16_fu_2271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_15_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_17_fu_2276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_11_fu_2282_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_4_fu_2289_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_5_fu_2305_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_11_fu_2314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_5_fu_2320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_2_fu_2310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_5_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_2336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_11_fu_2342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_5_fu_2325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_19_fu_2353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_18_fu_2347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_20_fu_2358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_13_fu_2364_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_5_fu_2371_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_data_V_data_0_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_0_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_0_V_TVALID_int : STD_LOGIC;
    signal data_V_data_0_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_0_V_U_ack_in : STD_LOGIC;
    signal regslice_both_data_V_data_1_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_1_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_1_V_TVALID_int : STD_LOGIC;
    signal data_V_data_1_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_1_V_U_ack_in : STD_LOGIC;
    signal regslice_both_data_V_data_2_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_2_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_2_V_TVALID_int : STD_LOGIC;
    signal data_V_data_2_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_2_V_U_ack_in : STD_LOGIC;
    signal regslice_both_data_V_data_3_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_3_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_3_V_TVALID_int : STD_LOGIC;
    signal data_V_data_3_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_3_V_U_ack_in : STD_LOGIC;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_data_V_data_0_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_0_V_TDATA,
        vld_in => data_V_data_0_V_TVALID,
        ack_in => regslice_both_data_V_data_0_V_U_ack_in,
        data_out => data_V_data_0_V_TDATA_int,
        vld_out => data_V_data_0_V_TVALID_int,
        ack_out => data_V_data_0_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_0_V_U_apdone_blk);

    regslice_both_data_V_data_1_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_1_V_TDATA,
        vld_in => data_V_data_1_V_TVALID,
        ack_in => regslice_both_data_V_data_1_V_U_ack_in,
        data_out => data_V_data_1_V_TDATA_int,
        vld_out => data_V_data_1_V_TVALID_int,
        ack_out => data_V_data_1_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_1_V_U_apdone_blk);

    regslice_both_data_V_data_2_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_2_V_TDATA,
        vld_in => data_V_data_2_V_TVALID,
        ack_in => regslice_both_data_V_data_2_V_U_ack_in,
        data_out => data_V_data_2_V_TDATA_int,
        vld_out => data_V_data_2_V_TVALID_int,
        ack_out => data_V_data_2_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_2_V_U_apdone_blk);

    regslice_both_data_V_data_3_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_3_V_TDATA,
        vld_in => data_V_data_3_V_TVALID,
        ack_in => regslice_both_data_V_data_3_V_U_ack_in,
        data_out => data_V_data_3_V_TDATA_int,
        vld_out => data_V_data_3_V_TVALID_int,
        ack_out => data_V_data_3_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_3_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_266 <= add_ln106_fu_655_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_266 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_0_V_reg_2456 <= acc_0_V_fu_1256_p2;
                add_ln1192_24_reg_2461 <= add_ln1192_24_fu_1262_p2;
                add_ln1192_27_reg_2466 <= add_ln1192_27_fu_1290_p2;
                add_ln1192_31_reg_2471 <= add_ln1192_31_fu_1306_p2;
                add_ln1192_33_reg_2476 <= add_ln1192_33_fu_1322_p2;
                add_ln415_16_reg_2451 <= add_ln415_16_fu_1216_p2;
                tmp_50_reg_2401 <= add_ln1118_fu_797_p2(1 downto 1);
                tmp_56_reg_2416 <= mul_ln1118_10_fu_286_p2(1 downto 1);
                tmp_58_reg_2426 <= mul_ln1118_12_fu_288_p2(1 downto 1);
                tmp_59_reg_2436 <= mul_ln1118_13_fu_278_p2(1 downto 1);
                tmp_60_reg_2446 <= sub_ln1118_9_fu_1148_p2(1 downto 1);
                trunc_ln708_18_reg_2396 <= add_ln1118_fu_797_p2(11 downto 2);
                trunc_ln708_24_reg_2406 <= mul_ln1118_fu_290_p2(14 downto 2);
                trunc_ln708_25_reg_2411 <= mul_ln1118_10_fu_286_p2(15 downto 2);
                trunc_ln708_27_reg_2421 <= mul_ln1118_12_fu_288_p2(14 downto 2);
                trunc_ln708_28_reg_2431 <= mul_ln1118_13_fu_278_p2(14 downto 2);
                trunc_ln708_29_reg_2441 <= sub_ln1118_9_fu_1148_p2(12 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2387 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln415_17_reg_2487 <= add_ln415_17_fu_1529_p2;
                add_ln415_18_reg_2524 <= add_ln415_18_fu_1727_p2;
                add_ln415_19_reg_2558 <= add_ln415_19_fu_1863_p2;
                and_ln416_4_reg_2530 <= and_ln416_4_fu_1747_p2;
                and_ln416_5_reg_2564 <= and_ln416_5_fu_1883_p2;
                and_ln781_reg_2493 <= and_ln781_fu_1629_p2;
                and_ln786_1_reg_2552 <= and_ln786_1_fu_1827_p2;
                and_ln786_2_reg_2586 <= and_ln786_2_fu_1963_p2;
                and_ln786_9_reg_2508 <= and_ln786_9_fu_1677_p2;
                and_ln786_reg_2503 <= and_ln786_fu_1659_p2;
                icmp_ln768_4_reg_2547 <= icmp_ln768_4_fu_1793_p2;
                icmp_ln768_5_reg_2581 <= icmp_ln768_5_fu_1929_p2;
                icmp_ln879_11_reg_2575 <= icmp_ln879_11_fu_1923_p2;
                icmp_ln879_9_reg_2541 <= icmp_ln879_9_fu_1787_p2;
                or_ln340_reg_2513 <= or_ln340_fu_1683_p2;
                tmp_62_reg_2481 <= acc_2_V_7_fu_1471_p2(15 downto 15);
                tmp_71_reg_2518 <= acc_1_V_fu_1465_p2(14 downto 14);
                tmp_75_reg_2536 <= add_ln415_18_fu_1727_p2(7 downto 7);
                tmp_80_reg_2570 <= add_ln415_19_fu_1863_p2(7 downto 7);
                tmp_data_3_V_39_reg_2592 <= tmp_data_3_V_39_fu_2175_p3;
                xor_ln785_8_reg_2498 <= xor_ln785_8_fu_1647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln106_reg_2387 <= icmp_ln106_fu_649_p2;
                icmp_ln106_reg_2387_pp0_iter1_reg <= icmp_ln106_reg_2387;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln106_fu_649_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_649_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_0_V_2_fu_1453_p2 <= std_logic_vector(signed(sext_ln703_fu_1414_p1) + signed(add_ln415_13_fu_1356_p2));
    acc_0_V_fu_1256_p2 <= std_logic_vector(unsigned(add_ln1192_22_fu_1250_p2) + unsigned(sext_ln1118_26_fu_1020_p1));
    acc_1_V_fu_1465_p2 <= std_logic_vector(signed(sext_ln415_27_fu_1374_p1) + signed(sext_ln1192_8_fu_1435_p1));
    acc_2_V_6_fu_1439_p2 <= std_logic_vector(signed(sext_ln415_23_fu_1346_p1) + signed(sext_ln1192_4_fu_1410_p1));
    acc_2_V_7_fu_1471_p2 <= std_logic_vector(unsigned(acc_2_V_6_fu_1439_p2) + unsigned(sext_ln415_29_fu_1390_p1));
    acc_2_V_fu_1404_p2 <= std_logic_vector(unsigned(or_ln_fu_1397_p3) + unsigned(sext_ln415_16_fu_1328_p1));
    add_ln106_fu_655_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_266) + unsigned(ap_const_lv8_1));
    add_ln1118_1_fu_1184_p2 <= std_logic_vector(signed(sext_ln1118_31_fu_1180_p1) + signed(sext_ln1118_28_fu_1092_p1));
    add_ln1118_fu_797_p2 <= std_logic_vector(signed(sext_ln1118_19_fu_793_p1) + signed(sext_ln1118_17_fu_701_p1));
    add_ln1192_19_fu_1232_p2 <= std_logic_vector(unsigned(zext_ln1118_6_fu_897_p1) + unsigned(zext_ln1118_fu_737_p1));
    add_ln1192_22_fu_1250_p2 <= std_logic_vector(signed(sext_ln1192_6_fu_1246_p1) + signed(sext_ln1192_fu_1228_p1));
    add_ln1192_24_fu_1262_p2 <= std_logic_vector(signed(sext_ln415_15_fu_769_p1) + signed(sext_ln415_19_fu_929_p1));
    add_ln1192_25_fu_1420_p2 <= std_logic_vector(signed(sext_ln1192_7_fu_1417_p1) + signed(sext_ln415_21_fu_1331_p1));
    add_ln1192_26_fu_1280_p2 <= std_logic_vector(unsigned(zext_ln1118_4_fu_781_p1) + unsigned(zext_ln708_fu_941_p1));
    add_ln1192_27_fu_1290_p2 <= std_logic_vector(unsigned(zext_ln1192_3_fu_1286_p1) + unsigned(zext_ln1192_fu_1276_p1));
    add_ln1192_28_fu_1429_p2 <= std_logic_vector(unsigned(zext_ln1192_4_fu_1426_p1) + unsigned(add_ln1192_25_fu_1420_p2));
    add_ln1192_30_fu_1296_p2 <= std_logic_vector(signed(ap_const_lv11_660) + signed(sext_ln415_17_fu_837_p1));
    add_ln1192_31_fu_1306_p2 <= std_logic_vector(signed(sext_ln1192_9_fu_1302_p1) + signed(sext_ln415_24_fu_1070_p1));
    add_ln1192_32_fu_1312_p2 <= std_logic_vector(unsigned(zext_ln1118_7_fu_1082_p1) + unsigned(zext_ln1118_5_fu_849_p1));
    add_ln1192_33_fu_1322_p2 <= std_logic_vector(unsigned(zext_ln1192_5_fu_1318_p1) + unsigned(add_ln415_fu_971_p2));
    add_ln1192_34_fu_1448_p2 <= std_logic_vector(signed(sext_ln1192_10_fu_1445_p1) + signed(add_ln1192_31_reg_2471));
    add_ln1192_35_fu_1485_p2 <= std_logic_vector(signed(sext_ln415_31_fu_1394_p1) + signed(add_ln1192_34_fu_1448_p2));
    add_ln1192_36_fu_1459_p2 <= std_logic_vector(signed(add_ln1192_28_fu_1429_p2) + signed(add_ln415_14_fu_1368_p2));
    add_ln1192_fu_1222_p2 <= std_logic_vector(signed(sext_ln415_18_fu_885_p1) + signed(sext_ln415_fu_725_p1));
    add_ln415_12_fu_1340_p2 <= std_logic_vector(signed(sext_ln415_22_fu_1334_p1) + signed(zext_ln415_12_fu_1337_p1));
    add_ln415_13_fu_1356_p2 <= std_logic_vector(signed(sext_ln415_25_fu_1350_p1) + signed(zext_ln415_13_fu_1353_p1));
    add_ln415_14_fu_1368_p2 <= std_logic_vector(signed(sext_ln415_26_fu_1362_p1) + signed(zext_ln415_14_fu_1365_p1));
    add_ln415_15_fu_1384_p2 <= std_logic_vector(signed(sext_ln415_28_fu_1378_p1) + signed(zext_ln415_15_fu_1381_p1));
    add_ln415_16_fu_1216_p2 <= std_logic_vector(signed(sext_ln415_30_fu_1200_p1) + signed(zext_ln415_16_fu_1212_p1));
    add_ln415_17_fu_1529_p2 <= std_logic_vector(unsigned(trunc_ln708_31_fu_1499_p4) + unsigned(zext_ln415_17_fu_1525_p1));
    add_ln415_18_fu_1727_p2 <= std_logic_vector(unsigned(trunc_ln708_32_fu_1697_p4) + unsigned(zext_ln415_18_fu_1723_p1));
    add_ln415_19_fu_1863_p2 <= std_logic_vector(unsigned(trunc_ln708_33_fu_1833_p4) + unsigned(zext_ln415_19_fu_1859_p1));
    add_ln415_20_fu_2007_p2 <= std_logic_vector(unsigned(trunc_ln708_34_fu_1977_p4) + unsigned(zext_ln415_20_fu_2003_p1));
    add_ln415_fu_971_p2 <= std_logic_vector(signed(sext_ln415_20_fu_955_p1) + signed(zext_ln415_fu_967_p1));
    and_ln416_4_fu_1747_p2 <= (xor_ln416_4_fu_1741_p2 and tmp_72_fu_1707_p3);
    and_ln416_5_fu_1883_p2 <= (xor_ln416_5_fu_1877_p2 and tmp_77_fu_1843_p3);
    and_ln416_6_fu_2027_p2 <= (xor_ln416_6_fu_2021_p2 and tmp_83_fu_1987_p3);
    and_ln416_7_fu_2081_p2 <= (tmp_87_fu_2041_p3 and or_ln416_1_fu_2075_p2);
    and_ln416_fu_1549_p2 <= (xor_ln416_fu_1543_p2 and tmp_64_fu_1509_p3);
    and_ln779_1_fu_1813_p2 <= (xor_ln779_4_fu_1807_p2 and icmp_ln879_8_fu_1771_p2);
    and_ln779_2_fu_1949_p2 <= (xor_ln779_5_fu_1943_p2 and icmp_ln879_10_fu_1907_p2);
    and_ln779_fu_1615_p2 <= (xor_ln779_fu_1609_p2 and tmp_68_fu_1563_p3);
    and_ln781_1_fu_2223_p2 <= (icmp_ln879_9_reg_2541 and and_ln416_4_reg_2530);
    and_ln781_2_fu_2310_p2 <= (icmp_ln879_11_reg_2575 and and_ln416_5_reg_2564);
    and_ln781_3_fu_2087_p2 <= (tmp_87_fu_2041_p3 and and_ln416_6_fu_2027_p2);
    and_ln781_fu_1629_p2 <= (icmp_ln879_fu_1581_p2 and and_ln416_fu_1549_p2);
    and_ln785_4_fu_2243_p2 <= (xor_ln785_10_fu_2238_p2 and or_ln785_4_fu_2233_p2);
    and_ln785_5_fu_2325_p2 <= (xor_ln786_fu_2183_p2 and or_ln785_5_fu_2320_p2);
    and_ln785_6_fu_2111_p2 <= (xor_ln785_13_fu_2105_p2 and or_ln785_6_fu_2099_p2);
    and_ln785_fu_1653_p2 <= (xor_ln785_8_fu_1647_p2 and or_ln785_fu_1641_p2);
    and_ln786_10_fu_2260_p2 <= (xor_ln786_6_fu_2254_p2 and tmp_71_reg_2518);
    and_ln786_11_fu_2342_p2 <= (xor_ln786_7_fu_2336_p2 and tmp_62_reg_2481);
    and_ln786_12_fu_2135_p2 <= (xor_ln786_8_fu_2129_p2 and tmp_82_fu_1969_p3);
    and_ln786_1_fu_1827_p2 <= (tmp_75_fu_1753_p3 and select_ln416_4_fu_1819_p3);
    and_ln786_2_fu_1963_p2 <= (tmp_80_fu_1889_p3 and select_ln416_5_fu_1955_p3);
    and_ln786_3_fu_2117_p2 <= (tmp_86_fu_2033_p3 and and_ln416_7_fu_2081_p2);
    and_ln786_9_fu_1677_p2 <= (xor_ln786_5_fu_1671_p2 and tmp_63_fu_1491_p3);
    and_ln786_fu_1659_p2 <= (tmp_67_fu_1555_p3 and select_ln416_fu_1621_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg, io_acc_block_signal_op19, io_acc_block_signal_op311)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op311 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg, io_acc_block_signal_op19, io_acc_block_signal_op311)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op311 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg, io_acc_block_signal_op19, io_acc_block_signal_op311)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op311 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(icmp_ln106_fu_649_p2, io_acc_block_signal_op19)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(icmp_ln106_reg_2387_pp0_iter1_reg, io_acc_block_signal_op311)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op311 = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln106_fu_649_p2)
    begin
        if ((icmp_ln106_fu_649_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_649_p2, data_V_data_0_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_TDATA_blk_n <= data_V_data_0_V_TVALID_int;
        else 
            data_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_TREADY_assign_proc : process(data_V_data_0_V_TVALID, regslice_both_data_V_data_0_V_U_ack_in)
    begin
        if (((data_V_data_0_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_0_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_0_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_0_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_0_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_649_p2, data_V_data_1_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_TDATA_blk_n <= data_V_data_1_V_TVALID_int;
        else 
            data_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_TREADY_assign_proc : process(data_V_data_1_V_TVALID, regslice_both_data_V_data_1_V_U_ack_in)
    begin
        if (((data_V_data_1_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_1_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_1_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_1_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_1_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_649_p2, data_V_data_2_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_TDATA_blk_n <= data_V_data_2_V_TVALID_int;
        else 
            data_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_TREADY_assign_proc : process(data_V_data_2_V_TVALID, regslice_both_data_V_data_2_V_U_ack_in)
    begin
        if (((data_V_data_2_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_2_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_2_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_2_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_2_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_649_p2, data_V_data_3_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_TDATA_blk_n <= data_V_data_3_V_TVALID_int;
        else 
            data_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_TREADY_assign_proc : process(data_V_data_3_V_TVALID, regslice_both_data_V_data_3_V_U_ack_in)
    begin
        if (((data_V_data_3_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_3_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_3_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_3_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_649_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_649_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_3_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln106_fu_649_p2 <= "1" when (indvar_flatten_reg_266 = ap_const_lv8_C0) else "0";
    icmp_ln768_4_fu_1793_p2 <= "1" when (tmp_4_fu_1777_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_5_fu_1929_p2 <= "1" when (p_Result_20_2_fu_1913_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_fu_1587_p2 <= "1" when (tmp_69_fu_1571_p4 = ap_const_lv2_0) else "0";
    icmp_ln879_10_fu_1907_p2 <= "1" when (p_Result_19_2_fu_1897_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_11_fu_1923_p2 <= "1" when (p_Result_20_2_fu_1913_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_8_fu_1771_p2 <= "1" when (tmp_3_fu_1761_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_9_fu_1787_p2 <= "1" when (tmp_4_fu_1777_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_fu_1581_p2 <= "1" when (tmp_69_fu_1571_p4 = ap_const_lv2_3) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op19 <= (data_V_data_3_V_TVALID_int and data_V_data_2_V_TVALID_int and data_V_data_1_V_TVALID_int and data_V_data_0_V_TVALID_int);
    io_acc_block_signal_op311 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    mul_ln1118_10_fu_286_p1 <= sext_ln1116_fu_977_p0;
    mul_ln1118_10_fu_286_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv16_47) * signed(mul_ln1118_10_fu_286_p1))), 16));
    mul_ln1118_11_fu_283_p1 <= sext_ln1118_24_fu_987_p0;
    mul_ln1118_11_fu_283_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv14_3FEA) * signed(mul_ln1118_11_fu_283_p1))), 14));
    mul_ln1118_12_fu_288_p1 <= sext_ln1118_27_fu_1086_p1(8 - 1 downto 0);
    mul_ln1118_12_fu_288_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_33) * signed(mul_ln1118_12_fu_288_p1))), 15));
    mul_ln1118_13_fu_278_p1 <= sext_ln1118_27_fu_1086_p1(8 - 1 downto 0);
    mul_ln1118_13_fu_278_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FD1) * signed(mul_ln1118_13_fu_278_p1))), 15));
    mul_ln1118_fu_290_p1 <= sext_ln1118_23_fu_982_p0;
    mul_ln1118_fu_290_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FD2) * signed(mul_ln1118_fu_290_p1))), 15));
    or_ln1192_2_fu_1238_p3 <= (ap_const_lv6_28 & add_ln1192_19_fu_1232_p2);
    or_ln1192_3_fu_1268_p3 <= (ap_const_lv5_10 & tmp_55_fu_1034_p3);
    or_ln340_13_fu_2188_p2 <= (xor_ln785_8_reg_2498 or and_ln786_reg_2503);
    or_ln340_14_fu_2192_p2 <= (or_ln340_13_fu_2188_p2 or and_ln781_reg_2493);
    or_ln340_15_fu_2265_p2 <= (and_ln786_10_fu_2260_p2 or and_ln785_4_fu_2243_p2);
    or_ln340_16_fu_2271_p2 <= (xor_ln785_10_fu_2238_p2 or and_ln786_1_reg_2552);
    or_ln340_17_fu_2276_p2 <= (or_ln340_16_fu_2271_p2 or and_ln781_1_fu_2223_p2);
    or_ln340_18_fu_2347_p2 <= (and_ln786_11_fu_2342_p2 or and_ln785_5_fu_2325_p2);
    or_ln340_19_fu_2353_p2 <= (xor_ln786_fu_2183_p2 or and_ln786_2_reg_2586);
    or_ln340_20_fu_2358_p2 <= (or_ln340_19_fu_2353_p2 or and_ln781_2_fu_2310_p2);
    or_ln340_21_fu_2141_p2 <= (and_ln786_12_fu_2135_p2 or and_ln785_6_fu_2111_p2);
    or_ln340_22_fu_2147_p2 <= (xor_ln785_13_fu_2105_p2 or and_ln786_3_fu_2117_p2);
    or_ln340_23_fu_2153_p2 <= (or_ln340_22_fu_2147_p2 or and_ln781_3_fu_2087_p2);
    or_ln340_fu_1683_p2 <= (and_ln786_9_fu_1677_p2 or and_ln785_fu_1653_p2);
    or_ln416_1_fu_2075_p2 <= (xor_ln779_6_fu_2057_p2 or or_ln416_fu_2069_p2);
    or_ln416_fu_2069_p2 <= (xor_ln416_7_fu_2063_p2 or tmp_85_fu_2013_p3);
    or_ln785_4_fu_2233_p2 <= (xor_ln785_9_fu_2227_p2 or tmp_75_reg_2536);
    or_ln785_5_fu_2320_p2 <= (xor_ln785_11_fu_2314_p2 or tmp_80_reg_2570);
    or_ln785_6_fu_2099_p2 <= (xor_ln785_12_fu_2093_p2 or tmp_86_fu_2033_p3);
    or_ln785_fu_1641_p2 <= (xor_ln785_fu_1635_p2 or tmp_67_fu_1555_p3);
    or_ln786_4_fu_2249_p2 <= (and_ln786_1_reg_2552 or and_ln781_1_fu_2223_p2);
    or_ln786_5_fu_2331_p2 <= (and_ln786_2_reg_2586 or and_ln781_2_fu_2310_p2);
    or_ln786_6_fu_2123_p2 <= (and_ln786_3_fu_2117_p2 or and_ln781_3_fu_2087_p2);
    or_ln786_fu_1665_p2 <= (and_ln786_fu_1659_p2 or and_ln781_fu_1629_p2);
    or_ln_fu_1397_p3 <= (ap_const_lv14_3FD0 & tmp_50_reg_2401);
    p_Result_19_2_fu_1897_p4 <= acc_2_V_7_fu_1471_p2(15 downto 13);
    p_Result_20_2_fu_1913_p4 <= acc_2_V_7_fu_1471_p2(15 downto 12);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= 
        select_ln340_fu_2197_p3 when (or_ln340_14_fu_2192_p2(0) = '1') else 
        select_ln388_fu_2203_p3;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= 
        select_ln340_11_fu_2282_p3 when (or_ln340_17_fu_2276_p2(0) = '1') else 
        select_ln388_4_fu_2289_p3;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= 
        select_ln340_13_fu_2364_p3 when (or_ln340_20_fu_2358_p2(0) = '1') else 
        select_ln388_5_fu_2371_p3;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_39_reg_2592;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2387_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2387_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_11_fu_2282_p3 <= 
        ap_const_lv8_7F when (or_ln340_15_fu_2265_p2(0) = '1') else 
        add_ln415_18_reg_2524;
    select_ln340_13_fu_2364_p3 <= 
        ap_const_lv8_7F when (or_ln340_18_fu_2347_p2(0) = '1') else 
        add_ln415_19_reg_2558;
    select_ln340_15_fu_2159_p3 <= 
        ap_const_lv8_7F when (or_ln340_21_fu_2141_p2(0) = '1') else 
        add_ln415_20_fu_2007_p2;
    select_ln340_fu_2197_p3 <= 
        ap_const_lv8_7F when (or_ln340_reg_2513(0) = '1') else 
        add_ln415_17_reg_2487;
    select_ln388_4_fu_2289_p3 <= 
        ap_const_lv8_80 when (and_ln786_10_fu_2260_p2(0) = '1') else 
        add_ln415_18_reg_2524;
    select_ln388_5_fu_2371_p3 <= 
        ap_const_lv8_80 when (and_ln786_11_fu_2342_p2(0) = '1') else 
        add_ln415_19_reg_2558;
    select_ln388_6_fu_2167_p3 <= 
        ap_const_lv8_80 when (and_ln786_12_fu_2135_p2(0) = '1') else 
        add_ln415_20_fu_2007_p2;
    select_ln388_fu_2203_p3 <= 
        ap_const_lv8_80 when (and_ln786_9_reg_2508(0) = '1') else 
        add_ln415_17_reg_2487;
    select_ln416_4_fu_1819_p3 <= 
        and_ln779_1_fu_1813_p2 when (and_ln416_4_fu_1747_p2(0) = '1') else 
        icmp_ln879_9_fu_1787_p2;
    select_ln416_5_fu_1955_p3 <= 
        and_ln779_2_fu_1949_p2 when (and_ln416_5_fu_1883_p2(0) = '1') else 
        icmp_ln879_11_fu_1923_p2;
    select_ln416_fu_1621_p3 <= 
        and_ln779_fu_1615_p2 when (and_ln416_fu_1549_p2(0) = '1') else 
        icmp_ln879_fu_1581_p2;
    select_ln777_4_fu_2218_p3 <= 
        icmp_ln879_9_reg_2541 when (and_ln416_4_reg_2530(0) = '1') else 
        icmp_ln768_4_reg_2547;
    select_ln777_5_fu_2305_p3 <= 
        icmp_ln879_11_reg_2575 when (and_ln416_5_reg_2564(0) = '1') else 
        icmp_ln768_5_reg_2581;
    select_ln777_fu_1593_p3 <= 
        icmp_ln879_fu_1581_p2 when (and_ln416_fu_1549_p2(0) = '1') else 
        icmp_ln768_fu_1587_p2;
    sext_ln1116_fu_977_p0 <= data_V_data_2_V_TDATA_int;
        sext_ln1118_16_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_681_p3),13));

        sext_ln1118_17_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_693_p3),12));

        sext_ln1118_18_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_693_p3),13));

        sext_ln1118_19_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_785_p3),12));

        sext_ln1118_20_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_741_p3),11));

    sext_ln1118_21_fu_853_p0 <= data_V_data_1_V_TDATA_int;
        sext_ln1118_21_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_21_fu_853_p0),13));

        sext_ln1118_22_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_901_p3),10));

    sext_ln1118_23_fu_982_p0 <= data_V_data_2_V_TDATA_int;
    sext_ln1118_24_fu_987_p0 <= data_V_data_2_V_TDATA_int;
        sext_ln1118_25_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_992_p3),13));

        sext_ln1118_26_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_23_fu_1010_p4),13));

    sext_ln1118_27_fu_1086_p0 <= data_V_data_3_V_TDATA_int;
        sext_ln1118_27_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_27_fu_1086_p0),15));

    sext_ln1118_28_fu_1092_p0 <= data_V_data_3_V_TDATA_int;
        sext_ln1118_28_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_28_fu_1092_p0),11));

    sext_ln1118_29_fu_1096_p0 <= data_V_data_3_V_TDATA_int;
        sext_ln1118_29_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_29_fu_1096_p0),13));

        sext_ln1118_30_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_1136_p3),13));

        sext_ln1118_31_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1172_p3),11));

        sext_ln1118_32_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_857_p3),13));

    sext_ln1118_fu_677_p0 <= data_V_data_0_V_TDATA_int;
        sext_ln1118_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_fu_677_p0),11));

        sext_ln1192_10_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_33_reg_2476),13));

        sext_ln1192_4_fu_1410_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_2_V_fu_1404_p2),16));

        sext_ln1192_6_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln1192_2_fu_1238_p3),13));

        sext_ln1192_7_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_24_reg_2461),14));

        sext_ln1192_8_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_28_fu_1429_p2),15));

        sext_ln1192_9_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_30_fu_1296_p2),13));

        sext_ln1192_fu_1228_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_fu_1222_p2),13));

        sext_ln415_15_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_fu_759_p4),10));

        sext_ln415_16_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_18_reg_2396),15));

        sext_ln415_17_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_19_fu_827_p4),11));

        sext_ln415_18_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_20_fu_875_p4),12));

        sext_ln415_19_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_21_fu_919_p4),10));

        sext_ln415_20_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_22_fu_945_p4),7));

        sext_ln415_21_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_24_reg_2406),14));

        sext_ln415_22_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_25_reg_2411),15));

        sext_ln415_23_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_12_fu_1340_p2),16));

        sext_ln415_24_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_26_fu_1060_p4),13));

        sext_ln415_25_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_27_reg_2421),14));

        sext_ln415_26_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_28_reg_2431),14));

        sext_ln415_27_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_14_fu_1368_p2),15));

        sext_ln415_28_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_29_reg_2441),12));

        sext_ln415_29_fu_1390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_15_fu_1384_p2),16));

        sext_ln415_30_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_30_fu_1190_p4),10));

        sext_ln415_31_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_16_reg_2451),13));

        sext_ln415_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_715_p4),12));

        sext_ln703_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_0_V_reg_2456),14));

    shl_ln1118_1_fu_1136_p1 <= data_V_data_3_V_TDATA_int;
    shl_ln1118_1_fu_1136_p3 <= (shl_ln1118_1_fu_1136_p1 & ap_const_lv4_0);
    shl_ln1118_2_fu_1172_p1 <= data_V_data_3_V_TDATA_int;
    shl_ln1118_2_fu_1172_p3 <= (shl_ln1118_2_fu_1172_p1 & ap_const_lv2_0);
    shl_ln1118_6_fu_693_p1 <= data_V_data_0_V_TDATA_int;
    shl_ln1118_6_fu_693_p3 <= (shl_ln1118_6_fu_693_p1 & ap_const_lv1_0);
    shl_ln1118_7_fu_785_p1 <= data_V_data_0_V_TDATA_int;
    shl_ln1118_7_fu_785_p3 <= (shl_ln1118_7_fu_785_p1 & ap_const_lv3_0);
    shl_ln1118_9_fu_901_p1 <= data_V_data_1_V_TDATA_int;
    shl_ln1118_9_fu_901_p3 <= (shl_ln1118_9_fu_901_p1 & ap_const_lv1_0);
    shl_ln1118_s_fu_992_p1 <= data_V_data_2_V_TDATA_int;
    shl_ln1118_s_fu_992_p3 <= (shl_ln1118_s_fu_992_p1 & ap_const_lv4_0);
    shl_ln_fu_681_p1 <= data_V_data_0_V_TDATA_int;
    shl_ln_fu_681_p3 <= (shl_ln_fu_681_p1 & ap_const_lv4_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_10_fu_753_p2 <= std_logic_vector(signed(sext_ln1118_fu_677_p1) - signed(sext_ln1118_20_fu_749_p1));
    sub_ln1118_11_fu_869_p2 <= std_logic_vector(signed(sext_ln1118_21_fu_853_p1) - signed(sext_ln1118_32_fu_865_p1));
    sub_ln1118_6_fu_821_p2 <= std_logic_vector(signed(sext_ln1118_20_fu_749_p1) - signed(sext_ln1118_fu_677_p1));
    sub_ln1118_7_fu_913_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(sext_ln1118_22_fu_909_p1));
    sub_ln1118_8_fu_1004_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_25_fu_1000_p1));
    sub_ln1118_9_fu_1148_p2 <= std_logic_vector(signed(sext_ln1118_30_fu_1144_p1) - signed(sext_ln1118_29_fu_1096_p1));
    sub_ln1118_fu_709_p2 <= std_logic_vector(signed(sext_ln1118_16_fu_689_p1) - signed(sext_ln1118_18_fu_705_p1));
    tmp_1_fu_857_p1 <= data_V_data_1_V_TDATA_int;
    tmp_1_fu_857_p3 <= (tmp_1_fu_857_p1 & ap_const_lv4_0);
    tmp_3_fu_1761_p4 <= acc_1_V_fu_1465_p2(14 downto 13);
    tmp_48_fu_729_p3 <= sub_ln1118_fu_709_p2(1 downto 1);
    tmp_49_fu_773_p3 <= sub_ln1118_10_fu_753_p2(1 downto 1);
    tmp_4_fu_1777_p4 <= acc_1_V_fu_1465_p2(14 downto 12);
    tmp_51_fu_841_p3 <= sub_ln1118_6_fu_821_p2(1 downto 1);
    tmp_52_fu_889_p3 <= sub_ln1118_11_fu_869_p2(1 downto 1);
    tmp_53_fu_933_p3 <= sub_ln1118_7_fu_913_p2(1 downto 1);
    tmp_54_fu_959_p1 <= data_V_data_1_V_TDATA_int;
    tmp_54_fu_959_p3 <= tmp_54_fu_959_p1(1 downto 1);
    tmp_55_fu_1034_p3 <= mul_ln1118_fu_290_p2(1 downto 1);
    tmp_57_fu_1074_p3 <= mul_ln1118_11_fu_283_p2(1 downto 1);
    tmp_61_fu_1204_p3 <= add_ln1118_1_fu_1184_p2(1 downto 1);
    tmp_63_fu_1491_p3 <= acc_0_V_2_fu_1453_p2(13 downto 13);
    tmp_64_fu_1509_p3 <= acc_0_V_2_fu_1453_p2(11 downto 11);
    tmp_65_fu_1517_p3 <= acc_0_V_2_fu_1453_p2(3 downto 3);
    tmp_66_fu_1535_p3 <= add_ln415_17_fu_1529_p2(7 downto 7);
    tmp_67_fu_1555_p3 <= add_ln415_17_fu_1529_p2(7 downto 7);
    tmp_68_fu_1563_p3 <= acc_0_V_2_fu_1453_p2(13 downto 13);
    tmp_69_fu_1571_p4 <= acc_0_V_2_fu_1453_p2(13 downto 12);
    tmp_70_fu_1601_p3 <= acc_0_V_2_fu_1453_p2(12 downto 12);
    tmp_72_fu_1707_p3 <= add_ln1192_36_fu_1459_p2(11 downto 11);
    tmp_73_fu_1715_p3 <= add_ln1192_36_fu_1459_p2(3 downto 3);
    tmp_74_fu_1733_p3 <= add_ln415_18_fu_1727_p2(7 downto 7);
    tmp_75_fu_1753_p3 <= add_ln415_18_fu_1727_p2(7 downto 7);
    tmp_76_fu_1799_p3 <= add_ln1192_36_fu_1459_p2(12 downto 12);
    tmp_77_fu_1843_p3 <= acc_2_V_7_fu_1471_p2(11 downto 11);
    tmp_78_fu_1851_p3 <= acc_2_V_7_fu_1471_p2(3 downto 3);
    tmp_79_fu_1869_p3 <= add_ln415_19_fu_1863_p2(7 downto 7);
    tmp_80_fu_1889_p3 <= add_ln415_19_fu_1863_p2(7 downto 7);
    tmp_81_fu_1935_p3 <= acc_2_V_7_fu_1471_p2(12 downto 12);
    tmp_82_fu_1969_p3 <= add_ln1192_35_fu_1485_p2(12 downto 12);
    tmp_83_fu_1987_p3 <= add_ln1192_35_fu_1485_p2(11 downto 11);
    tmp_84_fu_1995_p3 <= add_ln1192_35_fu_1485_p2(3 downto 3);
    tmp_85_fu_2013_p3 <= add_ln415_20_fu_2007_p2(7 downto 7);
    tmp_86_fu_2033_p3 <= add_ln415_20_fu_2007_p2(7 downto 7);
    tmp_87_fu_2041_p3 <= add_ln1192_35_fu_1485_p2(12 downto 12);
    tmp_88_fu_2049_p3 <= add_ln1192_35_fu_1485_p2(12 downto 12);
    tmp_data_3_V_39_fu_2175_p3 <= 
        select_ln340_15_fu_2159_p3 when (or_ln340_23_fu_2153_p2(0) = '1') else 
        select_ln388_6_fu_2167_p3;
    tmp_fu_741_p1 <= data_V_data_0_V_TDATA_int;
    tmp_fu_741_p3 <= (tmp_fu_741_p1 & ap_const_lv2_0);
    trunc_ln708_19_fu_827_p4 <= sub_ln1118_6_fu_821_p2(10 downto 2);
    trunc_ln708_20_fu_875_p4 <= sub_ln1118_11_fu_869_p2(12 downto 2);
    trunc_ln708_21_fu_919_p4 <= sub_ln1118_7_fu_913_p2(9 downto 2);
    trunc_ln708_22_fu_945_p1 <= data_V_data_1_V_TDATA_int;
    trunc_ln708_22_fu_945_p4 <= trunc_ln708_22_fu_945_p1(7 downto 2);
    trunc_ln708_23_fu_1010_p4 <= sub_ln1118_8_fu_1004_p2(12 downto 2);
    trunc_ln708_26_fu_1060_p4 <= mul_ln1118_11_fu_283_p2(13 downto 2);
    trunc_ln708_30_fu_1190_p4 <= add_ln1118_1_fu_1184_p2(10 downto 2);
    trunc_ln708_31_fu_1499_p4 <= acc_0_V_2_fu_1453_p2(11 downto 4);
    trunc_ln708_32_fu_1697_p4 <= add_ln1192_36_fu_1459_p2(11 downto 4);
    trunc_ln708_33_fu_1833_p4 <= acc_2_V_7_fu_1471_p2(11 downto 4);
    trunc_ln708_34_fu_1977_p4 <= add_ln1192_35_fu_1485_p2(11 downto 4);
    trunc_ln708_s_fu_759_p4 <= sub_ln1118_10_fu_753_p2(10 downto 2);
    trunc_ln_fu_715_p4 <= sub_ln1118_fu_709_p2(12 downto 2);
    xor_ln416_4_fu_1741_p2 <= (tmp_74_fu_1733_p3 xor ap_const_lv1_1);
    xor_ln416_5_fu_1877_p2 <= (tmp_79_fu_1869_p3 xor ap_const_lv1_1);
    xor_ln416_6_fu_2021_p2 <= (tmp_85_fu_2013_p3 xor ap_const_lv1_1);
    xor_ln416_7_fu_2063_p2 <= (tmp_83_fu_1987_p3 xor ap_const_lv1_1);
    xor_ln416_fu_1543_p2 <= (tmp_66_fu_1535_p3 xor ap_const_lv1_1);
    xor_ln779_4_fu_1807_p2 <= (tmp_76_fu_1799_p3 xor ap_const_lv1_1);
    xor_ln779_5_fu_1943_p2 <= (tmp_81_fu_1935_p3 xor ap_const_lv1_1);
    xor_ln779_6_fu_2057_p2 <= (tmp_88_fu_2049_p3 xor ap_const_lv1_1);
    xor_ln779_fu_1609_p2 <= (tmp_70_fu_1601_p3 xor ap_const_lv1_1);
    xor_ln785_10_fu_2238_p2 <= (tmp_71_reg_2518 xor ap_const_lv1_1);
    xor_ln785_11_fu_2314_p2 <= (select_ln777_5_fu_2305_p3 xor ap_const_lv1_1);
    xor_ln785_12_fu_2093_p2 <= (tmp_87_fu_2041_p3 xor and_ln416_6_fu_2027_p2);
    xor_ln785_13_fu_2105_p2 <= (tmp_82_fu_1969_p3 xor ap_const_lv1_1);
    xor_ln785_8_fu_1647_p2 <= (tmp_63_fu_1491_p3 xor ap_const_lv1_1);
    xor_ln785_9_fu_2227_p2 <= (select_ln777_4_fu_2218_p3 xor ap_const_lv1_1);
    xor_ln785_fu_1635_p2 <= (select_ln777_fu_1593_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1671_p2 <= (or_ln786_fu_1665_p2 xor ap_const_lv1_1);
    xor_ln786_6_fu_2254_p2 <= (or_ln786_4_fu_2249_p2 xor ap_const_lv1_1);
    xor_ln786_7_fu_2336_p2 <= (or_ln786_5_fu_2331_p2 xor ap_const_lv1_1);
    xor_ln786_8_fu_2129_p2 <= (or_ln786_6_fu_2123_p2 xor ap_const_lv1_1);
    xor_ln786_fu_2183_p2 <= (tmp_62_reg_2481 xor ap_const_lv1_1);
    zext_ln1118_4_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_773_p3),2));
    zext_ln1118_5_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_841_p3),2));
    zext_ln1118_6_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_889_p3),2));
    zext_ln1118_7_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_1074_p3),2));
    zext_ln1118_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_729_p3),2));
    zext_ln1192_3_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_26_fu_1280_p2),7));
    zext_ln1192_4_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_27_reg_2466),14));
    zext_ln1192_5_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_32_fu_1312_p2),7));
    zext_ln1192_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1192_3_fu_1268_p3),7));
    zext_ln415_12_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_reg_2416),15));
    zext_ln415_13_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_reg_2426),14));
    zext_ln415_14_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_reg_2436),14));
    zext_ln415_15_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_reg_2446),12));
    zext_ln415_16_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_1204_p3),10));
    zext_ln415_17_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_1517_p3),8));
    zext_ln415_18_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_1715_p3),8));
    zext_ln415_19_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_1851_p3),8));
    zext_ln415_20_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_1995_p3),8));
    zext_ln415_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_959_p3),7));
    zext_ln708_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_933_p3),2));
end behav;

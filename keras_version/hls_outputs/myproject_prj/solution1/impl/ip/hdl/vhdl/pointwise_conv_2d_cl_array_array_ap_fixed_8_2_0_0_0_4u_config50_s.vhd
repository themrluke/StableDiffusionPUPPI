-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config50_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_0_V_TVALID : IN STD_LOGIC;
    data_V_data_0_V_TREADY : OUT STD_LOGIC;
    data_V_data_1_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_1_V_TVALID : IN STD_LOGIC;
    data_V_data_1_V_TREADY : OUT STD_LOGIC;
    data_V_data_2_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_2_V_TVALID : IN STD_LOGIC;
    data_V_data_2_V_TREADY : OUT STD_LOGIC;
    data_V_data_3_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_3_V_TVALID : IN STD_LOGIC;
    data_V_data_3_V_TREADY : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pointwise_conv_2d_cl_array_array_ap_fixed_8_2_0_0_0_4u_config50_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv15_7FC9 : STD_LOGIC_VECTOR (14 downto 0) := "111111111001001";
    constant ap_const_lv14_19 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011001";
    constant ap_const_lv14_1D : STD_LOGIC_VECTOR (13 downto 0) := "00000000011101";
    constant ap_const_lv15_7FCC : STD_LOGIC_VECTOR (14 downto 0) := "111111111001100";
    constant ap_const_lv14_17 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010111";
    constant ap_const_lv15_7FDD : STD_LOGIC_VECTOR (14 downto 0) := "111111111011101";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln106_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal data_V_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal data_V_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln106_reg_2495 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_reg_2495_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_238 : STD_LOGIC_VECTOR (10 downto 0);
    signal io_acc_block_signal_op19 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal io_acc_block_signal_op303 : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln106_fu_840_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_data_3_V_reg_2504 : STD_LOGIC_VECTOR (7 downto 0);
    signal acc_0_V_4_fu_894_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal acc_0_V_4_reg_2510 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_18_reg_2516 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_48_reg_2521 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_19_reg_2526 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_22_reg_2531 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_52_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_10_fu_1201_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln415_10_reg_2541 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_24_reg_2546 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_25_reg_2551 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_57_reg_2556 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_26_reg_2561 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_58_reg_2566 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_27_reg_2571 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_59_reg_2576 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_22_fu_1332_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_22_reg_2581 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_26_fu_1348_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_26_reg_2586 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_28_fu_1354_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_28_reg_2591 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_31_fu_1366_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_31_reg_2596 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_reg_2601 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_fu_1625_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_reg_2607 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_fu_1645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_reg_2613 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1651_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_reg_2619 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_1685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_reg_2624 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_1691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_reg_2630 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_1725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_reg_2635 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_2641 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_13_fu_1769_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_13_reg_2647 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_4_fu_1789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_4_reg_2653 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_1795_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_2659 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_fu_1829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_reg_2664 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_fu_1835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_reg_2670 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_fu_1869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_reg_2675 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_2681 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_14_fu_1913_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_14_reg_2687 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_5_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_5_reg_2693 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_1939_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_2699 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_reg_2704 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_fu_1971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_reg_2710 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_fu_2005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_reg_2715 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_reg_2721 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_15_fu_2049_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln415_15_reg_2727 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln416_6_fu_2069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_6_reg_2733 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_2075_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_reg_2739 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_fu_2101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_reg_2744 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_fu_2107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_reg_2750 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_reg_2755 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1118_8_fu_252_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_25_fu_980_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_7_fu_255_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_fu_862_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_256_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_11_fu_258_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_12_fu_261_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_34_fu_1280_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_10_fu_262_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_13_fu_263_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_9_fu_264_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_fu_862_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_256_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln_fu_868_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_46_fu_882_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_fu_878_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln415_fu_890_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_900_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_900_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_21_fu_908_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_9_fu_918_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_9_fu_918_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1118_fu_912_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_22_fu_926_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_8_fu_930_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_s_fu_936_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_7_fu_255_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_17_fu_950_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_fu_964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_24_fu_976_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_25_fu_980_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_26_fu_986_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_8_fu_252_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_9_fu_264_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_49_fu_1018_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1030_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_1030_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_24_fu_976_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_38_fu_1038_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1118_13_fu_1042_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_20_fu_1048_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_fu_1062_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1118_s_fu_1074_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_s_fu_1074_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_27_fu_1082_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_26_fu_986_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_9_fu_1086_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_21_fu_1092_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_51_fu_1106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_28_fu_1118_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_10_fu_262_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_1_fu_1141_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_1_fu_1141_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_2_fu_1153_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_2_fu_1153_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_29_fu_1149_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_31_fu_1165_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_10_fu_1169_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_23_fu_1175_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_53_fu_1189_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_21_fu_1185_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln415_9_fu_1197_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_3_fu_1207_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_3_fu_1207_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_32_fu_1215_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_30_fu_1161_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1118_fu_1219_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_54_fu_1235_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1118_11_fu_1247_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_55_fu_1263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_33_fu_1275_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_34_fu_1280_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_11_fu_258_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_12_fu_261_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_13_fu_263_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_23_fu_946_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1118_8_fu_1026_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1118_11_fu_1243_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_9_fu_1070_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_25_fu_1338_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1192_fu_1344_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln415_17_fu_1058_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln415_14_fu_960_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_18_fu_1102_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1118_fu_972_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_10_fu_1114_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1192_30_fu_1360_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1118_12_fu_1271_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln415_19_fu_1384_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln415_8_fu_1387_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln415_9_fu_1390_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_4_fu_1409_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_5_fu_1420_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_35_fu_1416_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_36_fu_1427_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln1118_12_fu_1431_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_56_fu_1437_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_25_fu_1454_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln415_10_fu_1457_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln415_11_fu_1460_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_26_fu_1470_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln415_11_fu_1473_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln415_12_fu_1476_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln415_15_fu_1375_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1118_7_fu_1378_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_20_fu_1486_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_13_fu_1372_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_21_fu_1492_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_5_fu_1502_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_16_fu_1381_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_20_fu_1396_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_fu_1498_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln415_22_fu_1400_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal acc_1_V_fu_1505_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_fu_1517_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_23_fu_1403_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_24_fu_1527_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_7_fu_1536_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_6_fu_1532_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_8_fu_1545_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln415_24_fu_1406_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1192_3_fu_1554_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_29_fu_1548_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal acc_0_V_fu_1511_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_39_fu_1447_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_1_fu_1523_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_40_fu_1451_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_37_fu_1466_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_27_fu_1539_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_fu_1482_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_32_fu_1557_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal acc_0_V_3_fu_1563_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_62_fu_1613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_28_fu_1595_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_12_fu_1621_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_1631_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1605_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_1659_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_66_fu_1675_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_67_fu_1697_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_1705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_fu_1717_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_1_V_1_fu_1569_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_70_fu_1757_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_29_fu_1739_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_13_fu_1765_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_71_fu_1775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1749_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_4_fu_1783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_1803_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_74_fu_1819_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_75_fu_1841_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_1813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_4_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_1_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_4_fu_1861_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_2_V_1_fu_1575_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_78_fu_1901_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_30_fu_1883_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_14_fu_1909_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_1919_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_1893_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_5_fu_1927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1955_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_82_fu_1977_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_1947_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_5_fu_1985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_2_fu_1991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_5_fu_1997_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_3_V_fu_1581_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_85_fu_2037_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_31_fu_2019_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_15_fu_2045_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_fu_2055_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_2029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_6_fu_2063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_2091_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_89_fu_2113_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_2083_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_6_fu_2121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_3_fu_2127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_6_fu_2133_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_2147_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_2156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_2162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_8_fu_2167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_2152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_2178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_8_fu_2189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_2172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_12_fu_2200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_2194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_13_fu_2205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_2211_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_fu_2218_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_4_fu_2234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_9_fu_2243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_4_fu_2249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_10_fu_2254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_1_fu_2239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_4_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_2270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_9_fu_2276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_4_fu_2259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_15_fu_2287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_14_fu_2281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_16_fu_2292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_9_fu_2298_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_4_fu_2305_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_5_fu_2321_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_11_fu_2330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_5_fu_2336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_12_fu_2341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_2_fu_2326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_5_fu_2352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_2357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_10_fu_2363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_5_fu_2346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_18_fu_2374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_17_fu_2368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_19_fu_2379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_11_fu_2385_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_5_fu_2392_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln777_6_fu_2408_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_13_fu_2417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_6_fu_2423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_14_fu_2428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_3_fu_2413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_6_fu_2439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_2444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_11_fu_2450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_6_fu_2433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_21_fu_2461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_20_fu_2455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_22_fu_2466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_13_fu_2472_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln388_6_fu_2479_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_data_V_data_0_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_0_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_0_V_TVALID_int : STD_LOGIC;
    signal data_V_data_0_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_0_V_U_ack_in : STD_LOGIC;
    signal regslice_both_data_V_data_1_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_1_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_1_V_TVALID_int : STD_LOGIC;
    signal data_V_data_1_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_1_V_U_ack_in : STD_LOGIC;
    signal regslice_both_data_V_data_2_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_2_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_2_V_TVALID_int : STD_LOGIC;
    signal data_V_data_2_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_2_V_U_ack_in : STD_LOGIC;
    signal regslice_both_data_V_data_3_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_3_V_TDATA_int : STD_LOGIC_VECTOR (7 downto 0);
    signal data_V_data_3_V_TVALID_int : STD_LOGIC;
    signal data_V_data_3_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_3_V_U_ack_in : STD_LOGIC;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_data_V_data_0_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_0_V_TDATA,
        vld_in => data_V_data_0_V_TVALID,
        ack_in => regslice_both_data_V_data_0_V_U_ack_in,
        data_out => data_V_data_0_V_TDATA_int,
        vld_out => data_V_data_0_V_TVALID_int,
        ack_out => data_V_data_0_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_0_V_U_apdone_blk);

    regslice_both_data_V_data_1_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_1_V_TDATA,
        vld_in => data_V_data_1_V_TVALID,
        ack_in => regslice_both_data_V_data_1_V_U_ack_in,
        data_out => data_V_data_1_V_TDATA_int,
        vld_out => data_V_data_1_V_TVALID_int,
        ack_out => data_V_data_1_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_1_V_U_apdone_blk);

    regslice_both_data_V_data_2_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_2_V_TDATA,
        vld_in => data_V_data_2_V_TVALID,
        ack_in => regslice_both_data_V_data_2_V_U_ack_in,
        data_out => data_V_data_2_V_TDATA_int,
        vld_out => data_V_data_2_V_TVALID_int,
        ack_out => data_V_data_2_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_2_V_U_apdone_blk);

    regslice_both_data_V_data_3_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_3_V_TDATA,
        vld_in => data_V_data_3_V_TVALID,
        ack_in => regslice_both_data_V_data_3_V_U_ack_in,
        data_out => data_V_data_3_V_TDATA_int,
        vld_out => data_V_data_3_V_TVALID_int,
        ack_out => data_V_data_3_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_3_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_238 <= add_ln106_fu_840_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_238 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_0_V_4_reg_2510 <= acc_0_V_4_fu_894_p2;
                add_ln1192_22_reg_2581 <= add_ln1192_22_fu_1332_p2;
                add_ln1192_26_reg_2586 <= add_ln1192_26_fu_1348_p2;
                add_ln1192_28_reg_2591 <= add_ln1192_28_fu_1354_p2;
                add_ln1192_31_reg_2596 <= add_ln1192_31_fu_1366_p2;
                add_ln415_10_reg_2541 <= add_ln415_10_fu_1201_p2;
                tmp_48_reg_2521 <= mul_ln1118_8_fu_252_p2(1 downto 1);
                tmp_52_reg_2536 <= mul_ln1118_10_fu_262_p2(1 downto 1);
                tmp_57_reg_2556 <= mul_ln1118_11_fu_258_p2(14 downto 2);
                tmp_58_reg_2566 <= mul_ln1118_12_fu_261_p2(1 downto 1);
                tmp_59_reg_2576 <= mul_ln1118_13_fu_263_p2(1 downto 1);
                tmp_data_3_V_reg_2504 <= data_V_data_3_V_TDATA_int;
                trunc_ln708_18_reg_2516 <= mul_ln1118_8_fu_252_p2(14 downto 2);
                trunc_ln708_19_reg_2526 <= mul_ln1118_9_fu_264_p2(14 downto 2);
                trunc_ln708_22_reg_2531 <= mul_ln1118_10_fu_262_p2(13 downto 2);
                trunc_ln708_24_reg_2546 <= add_ln1118_fu_1219_p2(13 downto 2);
                trunc_ln708_25_reg_2551 <= sub_ln1118_11_fu_1247_p2(13 downto 2);
                trunc_ln708_26_reg_2561 <= mul_ln1118_12_fu_261_p2(13 downto 2);
                trunc_ln708_27_reg_2571 <= mul_ln1118_13_fu_263_p2(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_reg_2495 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln415_13_reg_2647 <= add_ln415_13_fu_1769_p2;
                add_ln415_14_reg_2687 <= add_ln415_14_fu_1913_p2;
                add_ln415_15_reg_2727 <= add_ln415_15_fu_2049_p2;
                add_ln415_reg_2607 <= add_ln415_fu_1625_p2;
                and_ln416_4_reg_2653 <= and_ln416_4_fu_1789_p2;
                and_ln416_5_reg_2693 <= and_ln416_5_fu_1933_p2;
                and_ln416_6_reg_2733 <= and_ln416_6_fu_2069_p2;
                and_ln416_reg_2613 <= and_ln416_fu_1645_p2;
                and_ln786_1_reg_2675 <= and_ln786_1_fu_1869_p2;
                and_ln786_2_reg_2715 <= and_ln786_2_fu_2005_p2;
                and_ln786_3_reg_2755 <= and_ln786_3_fu_2141_p2;
                and_ln786_reg_2635 <= and_ln786_fu_1725_p2;
                icmp_ln768_4_reg_2670 <= icmp_ln768_4_fu_1835_p2;
                icmp_ln768_5_reg_2710 <= icmp_ln768_5_fu_1971_p2;
                icmp_ln768_6_reg_2750 <= icmp_ln768_6_fu_2107_p2;
                icmp_ln768_reg_2630 <= icmp_ln768_fu_1691_p2;
                icmp_ln879_5_reg_2624 <= icmp_ln879_5_fu_1685_p2;
                icmp_ln879_7_reg_2664 <= icmp_ln879_7_fu_1829_p2;
                icmp_ln879_8_reg_2704 <= icmp_ln879_8_fu_1965_p2;
                icmp_ln879_9_reg_2744 <= icmp_ln879_9_fu_2101_p2;
                tmp_60_reg_2601 <= acc_0_V_3_fu_1563_p2(14 downto 14);
                tmp_64_reg_2619 <= add_ln415_fu_1625_p2(7 downto 7);
                tmp_68_reg_2641 <= acc_1_V_1_fu_1569_p2(14 downto 14);
                tmp_72_reg_2659 <= add_ln415_13_fu_1769_p2(7 downto 7);
                tmp_76_reg_2681 <= acc_2_V_1_fu_1575_p2(13 downto 13);
                tmp_80_reg_2699 <= add_ln415_14_fu_1913_p2(7 downto 7);
                tmp_83_reg_2721 <= acc_3_V_fu_1581_p2(13 downto 13);
                tmp_87_reg_2739 <= add_ln415_15_fu_2049_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln106_reg_2495 <= icmp_ln106_fu_834_p2;
                icmp_ln106_reg_2495_pp0_iter1_reg <= icmp_ln106_reg_2495;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln106_fu_834_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_834_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_0_V_3_fu_1563_p2 <= std_logic_vector(unsigned(acc_0_V_fu_1511_p2) + unsigned(sext_ln1118_39_fu_1447_p1));
    acc_0_V_4_fu_894_p2 <= std_logic_vector(signed(sext_ln415_fu_878_p1) + signed(zext_ln415_fu_890_p1));
    acc_0_V_fu_1511_p2 <= std_logic_vector(signed(sext_ln415_20_fu_1396_p1) + signed(sext_ln1192_fu_1498_p1));
    acc_1_V_1_fu_1569_p2 <= std_logic_vector(signed(sext_ln703_1_fu_1523_p1) + signed(sext_ln1118_40_fu_1451_p1));
    acc_1_V_fu_1505_p2 <= std_logic_vector(signed(sext_ln1192_5_fu_1502_p1) + signed(sext_ln415_16_fu_1381_p1));
    acc_2_V_1_fu_1575_p2 <= std_logic_vector(signed(sext_ln1118_37_fu_1466_p1) + signed(add_ln1192_27_fu_1539_p2));
    acc_3_V_fu_1581_p2 <= std_logic_vector(signed(sext_ln703_fu_1482_p1) + signed(add_ln1192_32_fu_1557_p2));
    add_ln106_fu_840_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_238) + unsigned(ap_const_lv11_1));
    add_ln1118_fu_1219_p2 <= std_logic_vector(signed(sext_ln1118_32_fu_1215_p1) + signed(sext_ln1118_30_fu_1161_p1));
    add_ln1192_20_fu_1486_p2 <= std_logic_vector(signed(sext_ln415_15_fu_1375_p1) + signed(zext_ln1118_7_fu_1378_p1));
    add_ln1192_21_fu_1492_p2 <= std_logic_vector(unsigned(add_ln1192_20_fu_1486_p2) + unsigned(sext_ln415_13_fu_1372_p1));
    add_ln1192_22_fu_1332_p2 <= std_logic_vector(signed(sext_ln1118_23_fu_946_p1) + signed(zext_ln1118_8_fu_1026_p1));
    add_ln1192_24_fu_1527_p2 <= std_logic_vector(signed(acc_0_V_4_reg_2510) + signed(sext_ln415_23_fu_1403_p1));
    add_ln1192_25_fu_1338_p2 <= std_logic_vector(unsigned(zext_ln1118_11_fu_1243_p1) + unsigned(zext_ln1118_9_fu_1070_p1));
    add_ln1192_26_fu_1348_p2 <= std_logic_vector(unsigned(zext_ln1192_fu_1344_p1) + unsigned(sext_ln415_17_fu_1058_p1));
    add_ln1192_27_fu_1539_p2 <= std_logic_vector(signed(sext_ln1192_7_fu_1536_p1) + signed(sext_ln1192_6_fu_1532_p1));
    add_ln1192_28_fu_1354_p2 <= std_logic_vector(signed(sext_ln415_14_fu_960_p1) + signed(sext_ln415_18_fu_1102_p1));
    add_ln1192_29_fu_1548_p2 <= std_logic_vector(signed(sext_ln1192_8_fu_1545_p1) + signed(sext_ln415_24_fu_1406_p1));
    add_ln1192_30_fu_1360_p2 <= std_logic_vector(unsigned(zext_ln1118_fu_972_p1) + unsigned(zext_ln1118_10_fu_1114_p1));
    add_ln1192_31_fu_1366_p2 <= std_logic_vector(unsigned(add_ln1192_30_fu_1360_p2) + unsigned(zext_ln1118_12_fu_1271_p1));
    add_ln1192_32_fu_1557_p2 <= std_logic_vector(unsigned(zext_ln1192_3_fu_1554_p1) + unsigned(add_ln1192_29_fu_1548_p2));
    add_ln1192_fu_1517_p2 <= std_logic_vector(signed(sext_ln415_22_fu_1400_p1) + signed(acc_1_V_fu_1505_p2));
    add_ln415_10_fu_1201_p2 <= std_logic_vector(signed(sext_ln415_21_fu_1185_p1) + signed(zext_ln415_9_fu_1197_p1));
    add_ln415_11_fu_1460_p2 <= std_logic_vector(signed(sext_ln415_25_fu_1454_p1) + signed(zext_ln415_10_fu_1457_p1));
    add_ln415_12_fu_1476_p2 <= std_logic_vector(signed(sext_ln415_26_fu_1470_p1) + signed(zext_ln415_11_fu_1473_p1));
    add_ln415_13_fu_1769_p2 <= std_logic_vector(unsigned(trunc_ln708_29_fu_1739_p4) + unsigned(zext_ln415_13_fu_1765_p1));
    add_ln415_14_fu_1913_p2 <= std_logic_vector(unsigned(trunc_ln708_30_fu_1883_p4) + unsigned(zext_ln415_14_fu_1909_p1));
    add_ln415_15_fu_2049_p2 <= std_logic_vector(unsigned(trunc_ln708_31_fu_2019_p4) + unsigned(zext_ln415_15_fu_2045_p1));
    add_ln415_9_fu_1390_p2 <= std_logic_vector(signed(sext_ln415_19_fu_1384_p1) + signed(zext_ln415_8_fu_1387_p1));
    add_ln415_fu_1625_p2 <= std_logic_vector(unsigned(trunc_ln708_28_fu_1595_p4) + unsigned(zext_ln415_12_fu_1621_p1));
    and_ln416_4_fu_1789_p2 <= (xor_ln416_4_fu_1783_p2 and tmp_69_fu_1749_p3);
    and_ln416_5_fu_1933_p2 <= (xor_ln416_5_fu_1927_p2 and tmp_77_fu_1893_p3);
    and_ln416_6_fu_2069_p2 <= (xor_ln416_6_fu_2063_p2 and tmp_84_fu_2029_p3);
    and_ln416_fu_1645_p2 <= (xor_ln416_fu_1639_p2 and tmp_61_fu_1605_p3);
    and_ln779_1_fu_1855_p2 <= (xor_ln779_4_fu_1849_p2 and icmp_ln879_6_fu_1813_p2);
    and_ln779_2_fu_1991_p2 <= (xor_ln779_5_fu_1985_p2 and tmp_81_fu_1947_p3);
    and_ln779_3_fu_2127_p2 <= (xor_ln779_6_fu_2121_p2 and tmp_88_fu_2083_p3);
    and_ln779_fu_1711_p2 <= (xor_ln779_fu_1705_p2 and icmp_ln879_fu_1669_p2);
    and_ln781_1_fu_2239_p2 <= (icmp_ln879_7_reg_2664 and and_ln416_4_reg_2653);
    and_ln781_2_fu_2326_p2 <= (icmp_ln879_8_reg_2704 and and_ln416_5_reg_2693);
    and_ln781_3_fu_2413_p2 <= (icmp_ln879_9_reg_2744 and and_ln416_6_reg_2733);
    and_ln781_fu_2152_p2 <= (icmp_ln879_5_reg_2624 and and_ln416_reg_2613);
    and_ln785_4_fu_2259_p2 <= (xor_ln785_10_fu_2254_p2 and or_ln785_4_fu_2249_p2);
    and_ln785_5_fu_2346_p2 <= (xor_ln785_12_fu_2341_p2 and or_ln785_5_fu_2336_p2);
    and_ln785_6_fu_2433_p2 <= (xor_ln785_14_fu_2428_p2 and or_ln785_6_fu_2423_p2);
    and_ln785_fu_2172_p2 <= (xor_ln785_8_fu_2167_p2 and or_ln785_fu_2162_p2);
    and_ln786_10_fu_2363_p2 <= (xor_ln786_5_fu_2357_p2 and tmp_76_reg_2681);
    and_ln786_11_fu_2450_p2 <= (xor_ln786_6_fu_2444_p2 and tmp_83_reg_2721);
    and_ln786_1_fu_1869_p2 <= (tmp_72_fu_1795_p3 and select_ln416_4_fu_1861_p3);
    and_ln786_2_fu_2005_p2 <= (tmp_80_fu_1939_p3 and select_ln416_5_fu_1997_p3);
    and_ln786_3_fu_2141_p2 <= (tmp_87_fu_2075_p3 and select_ln416_6_fu_2133_p3);
    and_ln786_8_fu_2189_p2 <= (xor_ln786_fu_2183_p2 and tmp_60_reg_2601);
    and_ln786_9_fu_2276_p2 <= (xor_ln786_4_fu_2270_p2 and tmp_68_reg_2641);
    and_ln786_fu_1725_p2 <= (tmp_64_fu_1651_p3 and select_ln416_fu_1717_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg, io_acc_block_signal_op19, io_acc_block_signal_op303)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op303 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg, io_acc_block_signal_op19, io_acc_block_signal_op303)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op303 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg, io_acc_block_signal_op19, io_acc_block_signal_op303)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op303 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(icmp_ln106_fu_834_p2, io_acc_block_signal_op19)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (io_acc_block_signal_op19 = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(icmp_ln106_reg_2495_pp0_iter1_reg, io_acc_block_signal_op303)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (io_acc_block_signal_op303 = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln106_fu_834_p2)
    begin
        if ((icmp_ln106_fu_834_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_834_p2, data_V_data_0_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_TDATA_blk_n <= data_V_data_0_V_TVALID_int;
        else 
            data_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_TREADY_assign_proc : process(data_V_data_0_V_TVALID, regslice_both_data_V_data_0_V_U_ack_in)
    begin
        if (((data_V_data_0_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_0_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_0_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_0_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_0_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_834_p2, data_V_data_1_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_TDATA_blk_n <= data_V_data_1_V_TVALID_int;
        else 
            data_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_TREADY_assign_proc : process(data_V_data_1_V_TVALID, regslice_both_data_V_data_1_V_U_ack_in)
    begin
        if (((data_V_data_1_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_1_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_1_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_1_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_1_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_834_p2, data_V_data_2_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_TDATA_blk_n <= data_V_data_2_V_TVALID_int;
        else 
            data_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_TREADY_assign_proc : process(data_V_data_2_V_TVALID, regslice_both_data_V_data_2_V_U_ack_in)
    begin
        if (((data_V_data_2_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_2_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_2_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_2_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_2_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln106_fu_834_p2, data_V_data_3_V_TVALID_int)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_TDATA_blk_n <= data_V_data_3_V_TVALID_int;
        else 
            data_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_TREADY_assign_proc : process(data_V_data_3_V_TVALID, regslice_both_data_V_data_3_V_U_ack_in)
    begin
        if (((data_V_data_3_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_3_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_3_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_3_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln106_fu_834_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_fu_834_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_3_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln106_fu_834_p2 <= "1" when (indvar_flatten_reg_238 = ap_const_lv11_400) else "0";
    icmp_ln768_4_fu_1835_p2 <= "1" when (tmp_74_fu_1819_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_5_fu_1971_p2 <= "1" when (tmp_8_fu_1955_p4 = ap_const_lv2_0) else "0";
    icmp_ln768_6_fu_2107_p2 <= "1" when (tmp_1_fu_2091_p4 = ap_const_lv2_0) else "0";
    icmp_ln768_fu_1691_p2 <= "1" when (tmp_66_fu_1675_p4 = ap_const_lv3_0) else "0";
    icmp_ln879_5_fu_1685_p2 <= "1" when (tmp_66_fu_1675_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_6_fu_1813_p2 <= "1" when (tmp_73_fu_1803_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_7_fu_1829_p2 <= "1" when (tmp_74_fu_1819_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_8_fu_1965_p2 <= "1" when (tmp_8_fu_1955_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_9_fu_2101_p2 <= "1" when (tmp_1_fu_2091_p4 = ap_const_lv2_3) else "0";
    icmp_ln879_fu_1669_p2 <= "1" when (tmp_65_fu_1659_p4 = ap_const_lv2_3) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op19 <= (data_V_data_3_V_TVALID_int and data_V_data_2_V_TVALID_int and data_V_data_1_V_TVALID_int and data_V_data_0_V_TVALID_int);
    io_acc_block_signal_op303 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    mul_ln1118_10_fu_262_p1 <= sext_ln1118_28_fu_1118_p0;
    mul_ln1118_10_fu_262_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_19) * signed(mul_ln1118_10_fu_262_p1))), 14));
    mul_ln1118_11_fu_258_p1 <= sext_ln1118_33_fu_1275_p0;
    mul_ln1118_11_fu_258_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FCC) * signed(mul_ln1118_11_fu_258_p1))), 15));
    mul_ln1118_12_fu_261_p1 <= sext_ln1118_34_fu_1280_p1(8 - 1 downto 0);
    mul_ln1118_12_fu_261_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_17) * signed(mul_ln1118_12_fu_261_p1))), 14));
    mul_ln1118_13_fu_263_p1 <= sext_ln1118_34_fu_1280_p1(8 - 1 downto 0);
    mul_ln1118_13_fu_263_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_1D) * signed(mul_ln1118_13_fu_263_p1))), 14));
    mul_ln1118_7_fu_255_p1 <= sext_ln1118_fu_862_p1(8 - 1 downto 0);
    mul_ln1118_7_fu_255_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_19) * signed(mul_ln1118_7_fu_255_p1))), 14));
    mul_ln1118_8_fu_252_p1 <= sext_ln1118_25_fu_980_p1(8 - 1 downto 0);
    mul_ln1118_8_fu_252_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FC9) * signed(mul_ln1118_8_fu_252_p1))), 15));
    mul_ln1118_9_fu_264_p1 <= sext_ln1118_25_fu_980_p1(8 - 1 downto 0);
    mul_ln1118_9_fu_264_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv15_7FDD) * signed(mul_ln1118_9_fu_264_p1))), 15));
    mul_ln1118_fu_256_p1 <= sext_ln1118_fu_862_p1(8 - 1 downto 0);
    mul_ln1118_fu_256_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_1D) * signed(mul_ln1118_fu_256_p1))), 14));
    or_ln340_12_fu_2200_p2 <= (xor_ln785_8_fu_2167_p2 or and_ln786_reg_2635);
    or_ln340_13_fu_2205_p2 <= (or_ln340_12_fu_2200_p2 or and_ln781_fu_2152_p2);
    or_ln340_14_fu_2281_p2 <= (and_ln786_9_fu_2276_p2 or and_ln785_4_fu_2259_p2);
    or_ln340_15_fu_2287_p2 <= (xor_ln785_10_fu_2254_p2 or and_ln786_1_reg_2675);
    or_ln340_16_fu_2292_p2 <= (or_ln340_15_fu_2287_p2 or and_ln781_1_fu_2239_p2);
    or_ln340_17_fu_2368_p2 <= (and_ln786_10_fu_2363_p2 or and_ln785_5_fu_2346_p2);
    or_ln340_18_fu_2374_p2 <= (xor_ln785_12_fu_2341_p2 or and_ln786_2_reg_2715);
    or_ln340_19_fu_2379_p2 <= (or_ln340_18_fu_2374_p2 or and_ln781_2_fu_2326_p2);
    or_ln340_20_fu_2455_p2 <= (and_ln786_11_fu_2450_p2 or and_ln785_6_fu_2433_p2);
    or_ln340_21_fu_2461_p2 <= (xor_ln785_14_fu_2428_p2 or and_ln786_3_reg_2755);
    or_ln340_22_fu_2466_p2 <= (or_ln340_21_fu_2461_p2 or and_ln781_3_fu_2413_p2);
    or_ln340_fu_2194_p2 <= (and_ln786_8_fu_2189_p2 or and_ln785_fu_2172_p2);
    or_ln785_4_fu_2249_p2 <= (xor_ln785_9_fu_2243_p2 or tmp_72_reg_2659);
    or_ln785_5_fu_2336_p2 <= (xor_ln785_11_fu_2330_p2 or tmp_80_reg_2699);
    or_ln785_6_fu_2423_p2 <= (xor_ln785_13_fu_2417_p2 or tmp_87_reg_2739);
    or_ln785_fu_2162_p2 <= (xor_ln785_fu_2156_p2 or tmp_64_reg_2619);
    or_ln786_4_fu_2265_p2 <= (and_ln786_1_reg_2675 or and_ln781_1_fu_2239_p2);
    or_ln786_5_fu_2352_p2 <= (and_ln786_2_reg_2715 or and_ln781_2_fu_2326_p2);
    or_ln786_6_fu_2439_p2 <= (and_ln786_3_reg_2755 or and_ln781_3_fu_2413_p2);
    or_ln786_fu_2178_p2 <= (and_ln786_reg_2635 or and_ln781_fu_2152_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= 
        select_ln340_fu_2211_p3 when (or_ln340_13_fu_2205_p2(0) = '1') else 
        select_ln388_fu_2218_p3;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= 
        select_ln340_9_fu_2298_p3 when (or_ln340_16_fu_2292_p2(0) = '1') else 
        select_ln388_4_fu_2305_p3;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= 
        select_ln340_11_fu_2385_p3 when (or_ln340_19_fu_2379_p2(0) = '1') else 
        select_ln388_5_fu_2392_p3;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= 
        select_ln340_13_fu_2472_p3 when (or_ln340_22_fu_2466_p2(0) = '1') else 
        select_ln388_6_fu_2479_p3;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln106_reg_2495_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln106_reg_2495_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_11_fu_2385_p3 <= 
        ap_const_lv8_7F when (or_ln340_17_fu_2368_p2(0) = '1') else 
        add_ln415_14_reg_2687;
    select_ln340_13_fu_2472_p3 <= 
        ap_const_lv8_7F when (or_ln340_20_fu_2455_p2(0) = '1') else 
        add_ln415_15_reg_2727;
    select_ln340_9_fu_2298_p3 <= 
        ap_const_lv8_7F when (or_ln340_14_fu_2281_p2(0) = '1') else 
        add_ln415_13_reg_2647;
    select_ln340_fu_2211_p3 <= 
        ap_const_lv8_7F when (or_ln340_fu_2194_p2(0) = '1') else 
        add_ln415_reg_2607;
    select_ln388_4_fu_2305_p3 <= 
        ap_const_lv8_80 when (and_ln786_9_fu_2276_p2(0) = '1') else 
        add_ln415_13_reg_2647;
    select_ln388_5_fu_2392_p3 <= 
        ap_const_lv8_80 when (and_ln786_10_fu_2363_p2(0) = '1') else 
        add_ln415_14_reg_2687;
    select_ln388_6_fu_2479_p3 <= 
        ap_const_lv8_80 when (and_ln786_11_fu_2450_p2(0) = '1') else 
        add_ln415_15_reg_2727;
    select_ln388_fu_2218_p3 <= 
        ap_const_lv8_80 when (and_ln786_8_fu_2189_p2(0) = '1') else 
        add_ln415_reg_2607;
    select_ln416_4_fu_1861_p3 <= 
        and_ln779_1_fu_1855_p2 when (and_ln416_4_fu_1789_p2(0) = '1') else 
        icmp_ln879_7_fu_1829_p2;
    select_ln416_5_fu_1997_p3 <= 
        and_ln779_2_fu_1991_p2 when (and_ln416_5_fu_1933_p2(0) = '1') else 
        icmp_ln879_8_fu_1965_p2;
    select_ln416_6_fu_2133_p3 <= 
        and_ln779_3_fu_2127_p2 when (and_ln416_6_fu_2069_p2(0) = '1') else 
        icmp_ln879_9_fu_2101_p2;
    select_ln416_fu_1717_p3 <= 
        and_ln779_fu_1711_p2 when (and_ln416_fu_1645_p2(0) = '1') else 
        icmp_ln879_5_fu_1685_p2;
    select_ln777_4_fu_2234_p3 <= 
        icmp_ln879_7_reg_2664 when (and_ln416_4_reg_2653(0) = '1') else 
        icmp_ln768_4_reg_2670;
    select_ln777_5_fu_2321_p3 <= 
        icmp_ln879_8_reg_2704 when (and_ln416_5_reg_2693(0) = '1') else 
        icmp_ln768_5_reg_2710;
    select_ln777_6_fu_2408_p3 <= 
        icmp_ln879_9_reg_2744 when (and_ln416_6_reg_2733(0) = '1') else 
        icmp_ln768_6_reg_2750;
    select_ln777_fu_2147_p3 <= 
        icmp_ln879_5_reg_2624 when (and_ln416_reg_2613(0) = '1') else 
        icmp_ln768_reg_2630;
        sext_ln1118_21_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_900_p3),14));

        sext_ln1118_22_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_918_p3),14));

        sext_ln1118_23_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_fu_936_p4),13));

    sext_ln1118_24_fu_976_p0 <= data_V_data_1_V_TDATA_int;
        sext_ln1118_24_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_24_fu_976_p0),11));

    sext_ln1118_25_fu_980_p0 <= data_V_data_1_V_TDATA_int;
        sext_ln1118_25_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_25_fu_980_p0),15));

    sext_ln1118_26_fu_986_p0 <= data_V_data_1_V_TDATA_int;
        sext_ln1118_26_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_26_fu_986_p0),13));

        sext_ln1118_27_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_1074_p3),13));

    sext_ln1118_28_fu_1118_p0 <= data_V_data_2_V_TDATA_int;
        sext_ln1118_29_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_1141_p3),12));

        sext_ln1118_30_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1153_p3),14));

        sext_ln1118_31_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1153_p3),12));

        sext_ln1118_32_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1207_p3),14));

    sext_ln1118_33_fu_1275_p0 <= data_V_data_3_V_TDATA_int;
    sext_ln1118_34_fu_1280_p0 <= data_V_data_3_V_TDATA_int;
        sext_ln1118_34_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_34_fu_1280_p0),14));

        sext_ln1118_35_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_1409_p3),15));

        sext_ln1118_36_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_1420_p3),15));

        sext_ln1118_37_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_11_fu_1460_p2),14));

        sext_ln1118_38_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1030_p3),11));

        sext_ln1118_39_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_56_fu_1437_p4),15));

        sext_ln1118_40_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_57_reg_2556),15));

    sext_ln1118_fu_862_p0 <= data_V_data_0_V_TDATA_int;
        sext_ln1118_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_fu_862_p0),14));

        sext_ln1192_5_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_22_reg_2581),14));

        sext_ln1192_6_fu_1532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_24_fu_1527_p2),14));

        sext_ln1192_7_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_26_reg_2586),14));

        sext_ln1192_8_fu_1545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_28_reg_2591),14));

        sext_ln1192_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_21_fu_1492_p2),15));

        sext_ln415_13_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_0_V_4_reg_2510),14));

        sext_ln415_14_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_17_fu_950_p4),13));

        sext_ln415_15_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_18_reg_2516),14));

        sext_ln415_16_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_19_reg_2526),14));

        sext_ln415_17_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_20_fu_1048_p4),10));

        sext_ln415_18_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_21_fu_1092_p4),13));

        sext_ln415_19_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_22_reg_2531),13));

        sext_ln415_20_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_9_fu_1390_p2),15));

        sext_ln415_21_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_23_fu_1175_p4),11));

        sext_ln415_22_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_10_reg_2541),14));

        sext_ln415_23_fu_1403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_24_reg_2546),13));

        sext_ln415_24_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_25_reg_2551),14));

        sext_ln415_25_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_26_reg_2561),13));

        sext_ln415_26_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_27_reg_2571),13));

        sext_ln415_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_868_p4),13));

        sext_ln703_1_fu_1523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_fu_1517_p2),15));

        sext_ln703_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln415_12_fu_1476_p2),14));

    shl_ln1118_1_fu_1141_p1 <= data_V_data_2_V_TDATA_int;
    shl_ln1118_1_fu_1141_p3 <= (shl_ln1118_1_fu_1141_p1 & ap_const_lv3_0);
    shl_ln1118_2_fu_1153_p1 <= data_V_data_2_V_TDATA_int;
    shl_ln1118_2_fu_1153_p3 <= (shl_ln1118_2_fu_1153_p1 & ap_const_lv1_0);
    shl_ln1118_3_fu_1207_p1 <= data_V_data_2_V_TDATA_int;
    shl_ln1118_3_fu_1207_p3 <= (shl_ln1118_3_fu_1207_p1 & ap_const_lv5_0);
    shl_ln1118_4_fu_1409_p3 <= (tmp_data_3_V_reg_2504 & ap_const_lv6_0);
    shl_ln1118_5_fu_1420_p3 <= (tmp_data_3_V_reg_2504 & ap_const_lv3_0);
    shl_ln1118_9_fu_918_p1 <= data_V_data_0_V_TDATA_int;
    shl_ln1118_9_fu_918_p3 <= (shl_ln1118_9_fu_918_p1 & ap_const_lv3_0);
    shl_ln1118_s_fu_1074_p1 <= data_V_data_1_V_TDATA_int;
    shl_ln1118_s_fu_1074_p3 <= (shl_ln1118_s_fu_1074_p1 & ap_const_lv4_0);
    shl_ln_fu_900_p1 <= data_V_data_0_V_TDATA_int;
    shl_ln_fu_900_p3 <= (shl_ln_fu_900_p1 & ap_const_lv5_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_10_fu_1169_p2 <= std_logic_vector(signed(sext_ln1118_29_fu_1149_p1) - signed(sext_ln1118_31_fu_1165_p1));
    sub_ln1118_11_fu_1247_p2 <= std_logic_vector(signed(sext_ln1118_32_fu_1215_p1) - signed(sext_ln1118_30_fu_1161_p1));
    sub_ln1118_12_fu_1431_p2 <= std_logic_vector(signed(sext_ln1118_35_fu_1416_p1) - signed(sext_ln1118_36_fu_1427_p1));
    sub_ln1118_13_fu_1042_p2 <= std_logic_vector(signed(sext_ln1118_24_fu_976_p1) - signed(sext_ln1118_38_fu_1038_p1));
    sub_ln1118_8_fu_930_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_912_p2) - unsigned(sext_ln1118_22_fu_926_p1));
    sub_ln1118_9_fu_1086_p2 <= std_logic_vector(signed(sext_ln1118_27_fu_1082_p1) - signed(sext_ln1118_26_fu_986_p1));
    sub_ln1118_fu_912_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sext_ln1118_21_fu_908_p1));
    tmp_1_fu_2091_p4 <= acc_3_V_fu_1581_p2(13 downto 12);
    tmp_46_fu_882_p3 <= mul_ln1118_fu_256_p2(1 downto 1);
    tmp_47_fu_964_p3 <= mul_ln1118_7_fu_255_p2(1 downto 1);
    tmp_49_fu_1018_p3 <= mul_ln1118_9_fu_264_p2(1 downto 1);
    tmp_50_fu_1062_p3 <= sub_ln1118_13_fu_1042_p2(1 downto 1);
    tmp_51_fu_1106_p3 <= sub_ln1118_9_fu_1086_p2(1 downto 1);
    tmp_53_fu_1189_p3 <= sub_ln1118_10_fu_1169_p2(1 downto 1);
    tmp_54_fu_1235_p3 <= add_ln1118_fu_1219_p2(1 downto 1);
    tmp_55_fu_1263_p3 <= sub_ln1118_11_fu_1247_p2(1 downto 1);
    tmp_56_fu_1437_p4 <= sub_ln1118_12_fu_1431_p2(14 downto 2);
    tmp_61_fu_1605_p3 <= acc_0_V_3_fu_1563_p2(11 downto 11);
    tmp_62_fu_1613_p3 <= acc_0_V_3_fu_1563_p2(3 downto 3);
    tmp_63_fu_1631_p3 <= add_ln415_fu_1625_p2(7 downto 7);
    tmp_64_fu_1651_p3 <= add_ln415_fu_1625_p2(7 downto 7);
    tmp_65_fu_1659_p4 <= acc_0_V_3_fu_1563_p2(14 downto 13);
    tmp_66_fu_1675_p4 <= acc_0_V_3_fu_1563_p2(14 downto 12);
    tmp_67_fu_1697_p3 <= acc_0_V_3_fu_1563_p2(12 downto 12);
    tmp_69_fu_1749_p3 <= acc_1_V_1_fu_1569_p2(11 downto 11);
    tmp_70_fu_1757_p3 <= acc_1_V_1_fu_1569_p2(3 downto 3);
    tmp_71_fu_1775_p3 <= add_ln415_13_fu_1769_p2(7 downto 7);
    tmp_72_fu_1795_p3 <= add_ln415_13_fu_1769_p2(7 downto 7);
    tmp_73_fu_1803_p4 <= acc_1_V_1_fu_1569_p2(14 downto 13);
    tmp_74_fu_1819_p4 <= acc_1_V_1_fu_1569_p2(14 downto 12);
    tmp_75_fu_1841_p3 <= acc_1_V_1_fu_1569_p2(12 downto 12);
    tmp_77_fu_1893_p3 <= acc_2_V_1_fu_1575_p2(11 downto 11);
    tmp_78_fu_1901_p3 <= acc_2_V_1_fu_1575_p2(3 downto 3);
    tmp_79_fu_1919_p3 <= add_ln415_14_fu_1913_p2(7 downto 7);
    tmp_80_fu_1939_p3 <= add_ln415_14_fu_1913_p2(7 downto 7);
    tmp_81_fu_1947_p3 <= acc_2_V_1_fu_1575_p2(13 downto 13);
    tmp_82_fu_1977_p3 <= acc_2_V_1_fu_1575_p2(12 downto 12);
    tmp_84_fu_2029_p3 <= acc_3_V_fu_1581_p2(11 downto 11);
    tmp_85_fu_2037_p3 <= acc_3_V_fu_1581_p2(3 downto 3);
    tmp_86_fu_2055_p3 <= add_ln415_15_fu_2049_p2(7 downto 7);
    tmp_87_fu_2075_p3 <= add_ln415_15_fu_2049_p2(7 downto 7);
    tmp_88_fu_2083_p3 <= acc_3_V_fu_1581_p2(13 downto 13);
    tmp_89_fu_2113_p3 <= acc_3_V_fu_1581_p2(12 downto 12);
    tmp_8_fu_1955_p4 <= acc_2_V_1_fu_1575_p2(13 downto 12);
    tmp_fu_1030_p1 <= data_V_data_1_V_TDATA_int;
    tmp_fu_1030_p3 <= (tmp_fu_1030_p1 & ap_const_lv2_0);
    trunc_ln708_17_fu_950_p4 <= mul_ln1118_7_fu_255_p2(13 downto 2);
    trunc_ln708_20_fu_1048_p4 <= sub_ln1118_13_fu_1042_p2(10 downto 2);
    trunc_ln708_21_fu_1092_p4 <= sub_ln1118_9_fu_1086_p2(12 downto 2);
    trunc_ln708_23_fu_1175_p4 <= sub_ln1118_10_fu_1169_p2(11 downto 2);
    trunc_ln708_28_fu_1595_p4 <= acc_0_V_3_fu_1563_p2(11 downto 4);
    trunc_ln708_29_fu_1739_p4 <= acc_1_V_1_fu_1569_p2(11 downto 4);
    trunc_ln708_30_fu_1883_p4 <= acc_2_V_1_fu_1575_p2(11 downto 4);
    trunc_ln708_31_fu_2019_p4 <= acc_3_V_fu_1581_p2(11 downto 4);
    trunc_ln708_s_fu_936_p4 <= sub_ln1118_8_fu_930_p2(13 downto 2);
    trunc_ln_fu_868_p4 <= mul_ln1118_fu_256_p2(13 downto 2);
    xor_ln416_4_fu_1783_p2 <= (tmp_71_fu_1775_p3 xor ap_const_lv1_1);
    xor_ln416_5_fu_1927_p2 <= (tmp_79_fu_1919_p3 xor ap_const_lv1_1);
    xor_ln416_6_fu_2063_p2 <= (tmp_86_fu_2055_p3 xor ap_const_lv1_1);
    xor_ln416_fu_1639_p2 <= (tmp_63_fu_1631_p3 xor ap_const_lv1_1);
    xor_ln779_4_fu_1849_p2 <= (tmp_75_fu_1841_p3 xor ap_const_lv1_1);
    xor_ln779_5_fu_1985_p2 <= (tmp_82_fu_1977_p3 xor ap_const_lv1_1);
    xor_ln779_6_fu_2121_p2 <= (tmp_89_fu_2113_p3 xor ap_const_lv1_1);
    xor_ln779_fu_1705_p2 <= (tmp_67_fu_1697_p3 xor ap_const_lv1_1);
    xor_ln785_10_fu_2254_p2 <= (tmp_68_reg_2641 xor ap_const_lv1_1);
    xor_ln785_11_fu_2330_p2 <= (select_ln777_5_fu_2321_p3 xor ap_const_lv1_1);
    xor_ln785_12_fu_2341_p2 <= (tmp_76_reg_2681 xor ap_const_lv1_1);
    xor_ln785_13_fu_2417_p2 <= (select_ln777_6_fu_2408_p3 xor ap_const_lv1_1);
    xor_ln785_14_fu_2428_p2 <= (tmp_83_reg_2721 xor ap_const_lv1_1);
    xor_ln785_8_fu_2167_p2 <= (tmp_60_reg_2601 xor ap_const_lv1_1);
    xor_ln785_9_fu_2243_p2 <= (select_ln777_4_fu_2234_p3 xor ap_const_lv1_1);
    xor_ln785_fu_2156_p2 <= (select_ln777_fu_2147_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_2270_p2 <= (or_ln786_4_fu_2265_p2 xor ap_const_lv1_1);
    xor_ln786_5_fu_2357_p2 <= (or_ln786_5_fu_2352_p2 xor ap_const_lv1_1);
    xor_ln786_6_fu_2444_p2 <= (or_ln786_6_fu_2439_p2 xor ap_const_lv1_1);
    xor_ln786_fu_2183_p2 <= (or_ln786_fu_2178_p2 xor ap_const_lv1_1);
    zext_ln1118_10_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_1106_p3),2));
    zext_ln1118_11_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_1235_p3),2));
    zext_ln1118_12_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_1263_p3),2));
    zext_ln1118_7_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_reg_2521),14));
    zext_ln1118_8_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_1018_p3),13));
    zext_ln1118_9_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_1062_p3),2));
    zext_ln1118_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_964_p3),2));
    zext_ln1192_3_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_31_reg_2596),14));
    zext_ln1192_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1192_25_fu_1338_p2),10));
    zext_ln415_10_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_reg_2566),13));
    zext_ln415_11_fu_1473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_reg_2576),13));
    zext_ln415_12_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1613_p3),8));
    zext_ln415_13_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_1757_p3),8));
    zext_ln415_14_fu_1909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_1901_p3),8));
    zext_ln415_15_fu_2045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_2037_p3),8));
    zext_ln415_8_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_reg_2536),13));
    zext_ln415_9_fu_1197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_1189_p3),11));
    zext_ln415_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_882_p3),13));
end behav;
